/*
 * 支付宝开放平台API
 *
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2025-02-19
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = AlipaySDKNet.OpenAPI.Client.OpenAPIDateConverter;

namespace AlipaySDKNet.OpenAPI.Model
{
    /// <summary>
    /// ZMGOBasicConfig
    /// </summary>
    [DataContract(Name = "ZMGOBasicConfig")]
    public partial class ZMGOBasicConfig : IEquatable<ZMGOBasicConfig>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ZMGOBasicConfig" /> class.
        /// </summary>
        /// <param name="bizType">商户在芝麻GO配置的业务身份编码.</param>
        /// <param name="contact">商家客服电话.</param>
        /// <param name="isvPid">运营商商户支付宝ID。若非ISV代理模式，也就是商户自运营模式，此属性取值与partner_id一致。.</param>
        /// <param name="merchantCustomLogo">商户LOGO.</param>
        /// <param name="outBizNo">外部业务单号，供幂等使用，需保证每次请求的值都不同.</param>
        /// <param name="partnerId">商户的支付宝ID，即为此商户创建芝麻GO模板.</param>
        /// <param name="templateName">芝麻GO模板名称.</param>
        /// <param name="templateNo">模板编号.</param>
        public ZMGOBasicConfig(string bizType = default(string), string contact = default(string), string isvPid = default(string), string merchantCustomLogo = default(string), string outBizNo = default(string), string partnerId = default(string), string templateName = default(string), string templateNo = default(string))
        {
            this.BizType = bizType;
            this.Contact = contact;
            this.IsvPid = isvPid;
            this.MerchantCustomLogo = merchantCustomLogo;
            this.OutBizNo = outBizNo;
            this.PartnerId = partnerId;
            this.TemplateName = templateName;
            this.TemplateNo = templateNo;
        }

        /// <summary>
        /// 商户在芝麻GO配置的业务身份编码
        /// </summary>
        /// <value>商户在芝麻GO配置的业务身份编码</value>
        [DataMember(Name = "biz_type", EmitDefaultValue = false)]
        public string BizType { get; set; }

        /// <summary>
        /// 商家客服电话
        /// </summary>
        /// <value>商家客服电话</value>
        [DataMember(Name = "contact", EmitDefaultValue = false)]
        public string Contact { get; set; }

        /// <summary>
        /// 运营商商户支付宝ID。若非ISV代理模式，也就是商户自运营模式，此属性取值与partner_id一致。
        /// </summary>
        /// <value>运营商商户支付宝ID。若非ISV代理模式，也就是商户自运营模式，此属性取值与partner_id一致。</value>
        [DataMember(Name = "isv_pid", EmitDefaultValue = false)]
        public string IsvPid { get; set; }

        /// <summary>
        /// 商户LOGO
        /// </summary>
        /// <value>商户LOGO</value>
        [DataMember(Name = "merchant_custom_logo", EmitDefaultValue = false)]
        public string MerchantCustomLogo { get; set; }

        /// <summary>
        /// 外部业务单号，供幂等使用，需保证每次请求的值都不同
        /// </summary>
        /// <value>外部业务单号，供幂等使用，需保证每次请求的值都不同</value>
        [DataMember(Name = "out_biz_no", EmitDefaultValue = false)]
        public string OutBizNo { get; set; }

        /// <summary>
        /// 商户的支付宝ID，即为此商户创建芝麻GO模板
        /// </summary>
        /// <value>商户的支付宝ID，即为此商户创建芝麻GO模板</value>
        [DataMember(Name = "partner_id", EmitDefaultValue = false)]
        public string PartnerId { get; set; }

        /// <summary>
        /// 芝麻GO模板名称
        /// </summary>
        /// <value>芝麻GO模板名称</value>
        [DataMember(Name = "template_name", EmitDefaultValue = false)]
        public string TemplateName { get; set; }

        /// <summary>
        /// 模板编号
        /// </summary>
        /// <value>模板编号</value>
        [DataMember(Name = "template_no", EmitDefaultValue = false)]
        public string TemplateNo { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ZMGOBasicConfig {\n");
            sb.Append("  BizType: ").Append(BizType).Append("\n");
            sb.Append("  Contact: ").Append(Contact).Append("\n");
            sb.Append("  IsvPid: ").Append(IsvPid).Append("\n");
            sb.Append("  MerchantCustomLogo: ").Append(MerchantCustomLogo).Append("\n");
            sb.Append("  OutBizNo: ").Append(OutBizNo).Append("\n");
            sb.Append("  PartnerId: ").Append(PartnerId).Append("\n");
            sb.Append("  TemplateName: ").Append(TemplateName).Append("\n");
            sb.Append("  TemplateNo: ").Append(TemplateNo).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ZMGOBasicConfig);
        }

        /// <summary>
        /// Returns true if ZMGOBasicConfig instances are equal
        /// </summary>
        /// <param name="input">Instance of ZMGOBasicConfig to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ZMGOBasicConfig input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.BizType == input.BizType ||
                    (this.BizType != null &&
                    this.BizType.Equals(input.BizType))
                ) && 
                (
                    this.Contact == input.Contact ||
                    (this.Contact != null &&
                    this.Contact.Equals(input.Contact))
                ) && 
                (
                    this.IsvPid == input.IsvPid ||
                    (this.IsvPid != null &&
                    this.IsvPid.Equals(input.IsvPid))
                ) && 
                (
                    this.MerchantCustomLogo == input.MerchantCustomLogo ||
                    (this.MerchantCustomLogo != null &&
                    this.MerchantCustomLogo.Equals(input.MerchantCustomLogo))
                ) && 
                (
                    this.OutBizNo == input.OutBizNo ||
                    (this.OutBizNo != null &&
                    this.OutBizNo.Equals(input.OutBizNo))
                ) && 
                (
                    this.PartnerId == input.PartnerId ||
                    (this.PartnerId != null &&
                    this.PartnerId.Equals(input.PartnerId))
                ) && 
                (
                    this.TemplateName == input.TemplateName ||
                    (this.TemplateName != null &&
                    this.TemplateName.Equals(input.TemplateName))
                ) && 
                (
                    this.TemplateNo == input.TemplateNo ||
                    (this.TemplateNo != null &&
                    this.TemplateNo.Equals(input.TemplateNo))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.BizType != null)
                {
                    hashCode = (hashCode * 59) + this.BizType.GetHashCode();
                }
                if (this.Contact != null)
                {
                    hashCode = (hashCode * 59) + this.Contact.GetHashCode();
                }
                if (this.IsvPid != null)
                {
                    hashCode = (hashCode * 59) + this.IsvPid.GetHashCode();
                }
                if (this.MerchantCustomLogo != null)
                {
                    hashCode = (hashCode * 59) + this.MerchantCustomLogo.GetHashCode();
                }
                if (this.OutBizNo != null)
                {
                    hashCode = (hashCode * 59) + this.OutBizNo.GetHashCode();
                }
                if (this.PartnerId != null)
                {
                    hashCode = (hashCode * 59) + this.PartnerId.GetHashCode();
                }
                if (this.TemplateName != null)
                {
                    hashCode = (hashCode * 59) + this.TemplateName.GetHashCode();
                }
                if (this.TemplateNo != null)
                {
                    hashCode = (hashCode * 59) + this.TemplateNo.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
