/*
 * 支付宝开放平台API
 *
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2025-02-19
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = AlipaySDKNet.OpenAPI.Client.OpenAPIDateConverter;

namespace AlipaySDKNet.OpenAPI.Model
{
    /// <summary>
    /// AlipayMobilePublicInfoQueryResponseModel
    /// </summary>
    [DataContract(Name = "AlipayMobilePublicInfoQueryResponseModel")]
    public partial class AlipayMobilePublicInfoQueryResponseModel : IEquatable<AlipayMobilePublicInfoQueryResponseModel>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AlipayMobilePublicInfoQueryResponseModel" /> class.
        /// </summary>
        /// <param name="appName">服务窗名称.</param>
        /// <param name="auditDesc">服务窗审核状态描述，如果审核驳回则有相关的驳回理由.</param>
        /// <param name="auditStatus">服务窗审核状态，对于系统商而言，只有三个状态，AUDITING：审核中，AUDIT_FAILED：审核驳回，AUDIT_SUCCESS：审核通过.</param>
        /// <param name="isOnline">服务窗是否上线，T表示上线，F表示未上线.</param>
        /// <param name="isRelease">服务窗是否上架，T表示上架，上架即可在支付宝客户端被搜索到，F表示未上架.</param>
        /// <param name="logoUrl">服务窗头像地址.</param>
        /// <param name="publicGreeting">服务窗欢迎语.</param>
        public AlipayMobilePublicInfoQueryResponseModel(string appName = default(string), string auditDesc = default(string), string auditStatus = default(string), string isOnline = default(string), string isRelease = default(string), string logoUrl = default(string), string publicGreeting = default(string))
        {
            this.AppName = appName;
            this.AuditDesc = auditDesc;
            this.AuditStatus = auditStatus;
            this.IsOnline = isOnline;
            this.IsRelease = isRelease;
            this.LogoUrl = logoUrl;
            this.PublicGreeting = publicGreeting;
        }

        /// <summary>
        /// 服务窗名称
        /// </summary>
        /// <value>服务窗名称</value>
        [DataMember(Name = "app_name", EmitDefaultValue = false)]
        public string AppName { get; set; }

        /// <summary>
        /// 服务窗审核状态描述，如果审核驳回则有相关的驳回理由
        /// </summary>
        /// <value>服务窗审核状态描述，如果审核驳回则有相关的驳回理由</value>
        [DataMember(Name = "audit_desc", EmitDefaultValue = false)]
        public string AuditDesc { get; set; }

        /// <summary>
        /// 服务窗审核状态，对于系统商而言，只有三个状态，AUDITING：审核中，AUDIT_FAILED：审核驳回，AUDIT_SUCCESS：审核通过
        /// </summary>
        /// <value>服务窗审核状态，对于系统商而言，只有三个状态，AUDITING：审核中，AUDIT_FAILED：审核驳回，AUDIT_SUCCESS：审核通过</value>
        [DataMember(Name = "audit_status", EmitDefaultValue = false)]
        public string AuditStatus { get; set; }

        /// <summary>
        /// 服务窗是否上线，T表示上线，F表示未上线
        /// </summary>
        /// <value>服务窗是否上线，T表示上线，F表示未上线</value>
        [DataMember(Name = "is_online", EmitDefaultValue = false)]
        public string IsOnline { get; set; }

        /// <summary>
        /// 服务窗是否上架，T表示上架，上架即可在支付宝客户端被搜索到，F表示未上架
        /// </summary>
        /// <value>服务窗是否上架，T表示上架，上架即可在支付宝客户端被搜索到，F表示未上架</value>
        [DataMember(Name = "is_release", EmitDefaultValue = false)]
        public string IsRelease { get; set; }

        /// <summary>
        /// 服务窗头像地址
        /// </summary>
        /// <value>服务窗头像地址</value>
        [DataMember(Name = "logo_url", EmitDefaultValue = false)]
        public string LogoUrl { get; set; }

        /// <summary>
        /// 服务窗欢迎语
        /// </summary>
        /// <value>服务窗欢迎语</value>
        [DataMember(Name = "public_greeting", EmitDefaultValue = false)]
        public string PublicGreeting { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class AlipayMobilePublicInfoQueryResponseModel {\n");
            sb.Append("  AppName: ").Append(AppName).Append("\n");
            sb.Append("  AuditDesc: ").Append(AuditDesc).Append("\n");
            sb.Append("  AuditStatus: ").Append(AuditStatus).Append("\n");
            sb.Append("  IsOnline: ").Append(IsOnline).Append("\n");
            sb.Append("  IsRelease: ").Append(IsRelease).Append("\n");
            sb.Append("  LogoUrl: ").Append(LogoUrl).Append("\n");
            sb.Append("  PublicGreeting: ").Append(PublicGreeting).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as AlipayMobilePublicInfoQueryResponseModel);
        }

        /// <summary>
        /// Returns true if AlipayMobilePublicInfoQueryResponseModel instances are equal
        /// </summary>
        /// <param name="input">Instance of AlipayMobilePublicInfoQueryResponseModel to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AlipayMobilePublicInfoQueryResponseModel input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.AppName == input.AppName ||
                    (this.AppName != null &&
                    this.AppName.Equals(input.AppName))
                ) && 
                (
                    this.AuditDesc == input.AuditDesc ||
                    (this.AuditDesc != null &&
                    this.AuditDesc.Equals(input.AuditDesc))
                ) && 
                (
                    this.AuditStatus == input.AuditStatus ||
                    (this.AuditStatus != null &&
                    this.AuditStatus.Equals(input.AuditStatus))
                ) && 
                (
                    this.IsOnline == input.IsOnline ||
                    (this.IsOnline != null &&
                    this.IsOnline.Equals(input.IsOnline))
                ) && 
                (
                    this.IsRelease == input.IsRelease ||
                    (this.IsRelease != null &&
                    this.IsRelease.Equals(input.IsRelease))
                ) && 
                (
                    this.LogoUrl == input.LogoUrl ||
                    (this.LogoUrl != null &&
                    this.LogoUrl.Equals(input.LogoUrl))
                ) && 
                (
                    this.PublicGreeting == input.PublicGreeting ||
                    (this.PublicGreeting != null &&
                    this.PublicGreeting.Equals(input.PublicGreeting))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.AppName != null)
                {
                    hashCode = (hashCode * 59) + this.AppName.GetHashCode();
                }
                if (this.AuditDesc != null)
                {
                    hashCode = (hashCode * 59) + this.AuditDesc.GetHashCode();
                }
                if (this.AuditStatus != null)
                {
                    hashCode = (hashCode * 59) + this.AuditStatus.GetHashCode();
                }
                if (this.IsOnline != null)
                {
                    hashCode = (hashCode * 59) + this.IsOnline.GetHashCode();
                }
                if (this.IsRelease != null)
                {
                    hashCode = (hashCode * 59) + this.IsRelease.GetHashCode();
                }
                if (this.LogoUrl != null)
                {
                    hashCode = (hashCode * 59) + this.LogoUrl.GetHashCode();
                }
                if (this.PublicGreeting != null)
                {
                    hashCode = (hashCode * 59) + this.PublicGreeting.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
