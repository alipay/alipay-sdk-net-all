/*
 * 支付宝开放平台API
 *
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2025-02-19
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = AlipaySDKNet.OpenAPI.Client.OpenAPIDateConverter;

namespace AlipaySDKNet.OpenAPI.Model
{
    /// <summary>
    /// EnterpriseOpenRuleRecordInfo
    /// </summary>
    [DataContract(Name = "EnterpriseOpenRuleRecordInfo")]
    public partial class EnterpriseOpenRuleRecordInfo : IEquatable<EnterpriseOpenRuleRecordInfo>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="EnterpriseOpenRuleRecordInfo" /> class.
        /// </summary>
        /// <param name="billMonthDay">开票规则账单日.</param>
        /// <param name="effectiveStart">开票规则生效日期.</param>
        /// <param name="enterpriseId">企业ID.</param>
        /// <param name="gmtCreate">创建时间.</param>
        /// <param name="gmtModified">修改时间.</param>
        /// <param name="invoiceRuleId">开票规则ID.</param>
        /// <param name="invoiceRuleRecordId">开票规则记录ID.</param>
        /// <param name="invoiceTitleId">发票抬头ID.</param>
        /// <param name="openApplyer">开票申请方.</param>
        /// <param name="openMode">开票模式.</param>
        /// <param name="openType">开票申请类型.</param>
        /// <param name="ownerId">所有者ID（企业情况下即为企业ID）。.</param>
        /// <param name="tag">开票规则标记.</param>
        public EnterpriseOpenRuleRecordInfo(int billMonthDay = default(int), string effectiveStart = default(string), string enterpriseId = default(string), string gmtCreate = default(string), string gmtModified = default(string), string invoiceRuleId = default(string), string invoiceRuleRecordId = default(string), string invoiceTitleId = default(string), string openApplyer = default(string), string openMode = default(string), string openType = default(string), string ownerId = default(string), string tag = default(string))
        {
            this.BillMonthDay = billMonthDay;
            this.EffectiveStart = effectiveStart;
            this.EnterpriseId = enterpriseId;
            this.GmtCreate = gmtCreate;
            this.GmtModified = gmtModified;
            this.InvoiceRuleId = invoiceRuleId;
            this.InvoiceRuleRecordId = invoiceRuleRecordId;
            this.InvoiceTitleId = invoiceTitleId;
            this.OpenApplyer = openApplyer;
            this.OpenMode = openMode;
            this.OpenType = openType;
            this.OwnerId = ownerId;
            this.Tag = tag;
        }

        /// <summary>
        /// 开票规则账单日
        /// </summary>
        /// <value>开票规则账单日</value>
        [DataMember(Name = "bill_month_day", EmitDefaultValue = false)]
        public int BillMonthDay { get; set; }

        /// <summary>
        /// 开票规则生效日期
        /// </summary>
        /// <value>开票规则生效日期</value>
        [DataMember(Name = "effective_start", EmitDefaultValue = false)]
        public string EffectiveStart { get; set; }

        /// <summary>
        /// 企业ID
        /// </summary>
        /// <value>企业ID</value>
        [DataMember(Name = "enterprise_id", EmitDefaultValue = false)]
        public string EnterpriseId { get; set; }

        /// <summary>
        /// 创建时间
        /// </summary>
        /// <value>创建时间</value>
        [DataMember(Name = "gmt_create", EmitDefaultValue = false)]
        public string GmtCreate { get; set; }

        /// <summary>
        /// 修改时间
        /// </summary>
        /// <value>修改时间</value>
        [DataMember(Name = "gmt_modified", EmitDefaultValue = false)]
        public string GmtModified { get; set; }

        /// <summary>
        /// 开票规则ID
        /// </summary>
        /// <value>开票规则ID</value>
        [DataMember(Name = "invoice_rule_id", EmitDefaultValue = false)]
        public string InvoiceRuleId { get; set; }

        /// <summary>
        /// 开票规则记录ID
        /// </summary>
        /// <value>开票规则记录ID</value>
        [DataMember(Name = "invoice_rule_record_id", EmitDefaultValue = false)]
        public string InvoiceRuleRecordId { get; set; }

        /// <summary>
        /// 发票抬头ID
        /// </summary>
        /// <value>发票抬头ID</value>
        [DataMember(Name = "invoice_title_id", EmitDefaultValue = false)]
        public string InvoiceTitleId { get; set; }

        /// <summary>
        /// 开票申请方
        /// </summary>
        /// <value>开票申请方</value>
        [DataMember(Name = "open_applyer", EmitDefaultValue = false)]
        public string OpenApplyer { get; set; }

        /// <summary>
        /// 开票模式
        /// </summary>
        /// <value>开票模式</value>
        [DataMember(Name = "open_mode", EmitDefaultValue = false)]
        public string OpenMode { get; set; }

        /// <summary>
        /// 开票申请类型
        /// </summary>
        /// <value>开票申请类型</value>
        [DataMember(Name = "open_type", EmitDefaultValue = false)]
        public string OpenType { get; set; }

        /// <summary>
        /// 所有者ID（企业情况下即为企业ID）。
        /// </summary>
        /// <value>所有者ID（企业情况下即为企业ID）。</value>
        [DataMember(Name = "owner_id", EmitDefaultValue = false)]
        public string OwnerId { get; set; }

        /// <summary>
        /// 开票规则标记
        /// </summary>
        /// <value>开票规则标记</value>
        [DataMember(Name = "tag", EmitDefaultValue = false)]
        public string Tag { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class EnterpriseOpenRuleRecordInfo {\n");
            sb.Append("  BillMonthDay: ").Append(BillMonthDay).Append("\n");
            sb.Append("  EffectiveStart: ").Append(EffectiveStart).Append("\n");
            sb.Append("  EnterpriseId: ").Append(EnterpriseId).Append("\n");
            sb.Append("  GmtCreate: ").Append(GmtCreate).Append("\n");
            sb.Append("  GmtModified: ").Append(GmtModified).Append("\n");
            sb.Append("  InvoiceRuleId: ").Append(InvoiceRuleId).Append("\n");
            sb.Append("  InvoiceRuleRecordId: ").Append(InvoiceRuleRecordId).Append("\n");
            sb.Append("  InvoiceTitleId: ").Append(InvoiceTitleId).Append("\n");
            sb.Append("  OpenApplyer: ").Append(OpenApplyer).Append("\n");
            sb.Append("  OpenMode: ").Append(OpenMode).Append("\n");
            sb.Append("  OpenType: ").Append(OpenType).Append("\n");
            sb.Append("  OwnerId: ").Append(OwnerId).Append("\n");
            sb.Append("  Tag: ").Append(Tag).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as EnterpriseOpenRuleRecordInfo);
        }

        /// <summary>
        /// Returns true if EnterpriseOpenRuleRecordInfo instances are equal
        /// </summary>
        /// <param name="input">Instance of EnterpriseOpenRuleRecordInfo to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(EnterpriseOpenRuleRecordInfo input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.BillMonthDay == input.BillMonthDay ||
                    this.BillMonthDay.Equals(input.BillMonthDay)
                ) && 
                (
                    this.EffectiveStart == input.EffectiveStart ||
                    (this.EffectiveStart != null &&
                    this.EffectiveStart.Equals(input.EffectiveStart))
                ) && 
                (
                    this.EnterpriseId == input.EnterpriseId ||
                    (this.EnterpriseId != null &&
                    this.EnterpriseId.Equals(input.EnterpriseId))
                ) && 
                (
                    this.GmtCreate == input.GmtCreate ||
                    (this.GmtCreate != null &&
                    this.GmtCreate.Equals(input.GmtCreate))
                ) && 
                (
                    this.GmtModified == input.GmtModified ||
                    (this.GmtModified != null &&
                    this.GmtModified.Equals(input.GmtModified))
                ) && 
                (
                    this.InvoiceRuleId == input.InvoiceRuleId ||
                    (this.InvoiceRuleId != null &&
                    this.InvoiceRuleId.Equals(input.InvoiceRuleId))
                ) && 
                (
                    this.InvoiceRuleRecordId == input.InvoiceRuleRecordId ||
                    (this.InvoiceRuleRecordId != null &&
                    this.InvoiceRuleRecordId.Equals(input.InvoiceRuleRecordId))
                ) && 
                (
                    this.InvoiceTitleId == input.InvoiceTitleId ||
                    (this.InvoiceTitleId != null &&
                    this.InvoiceTitleId.Equals(input.InvoiceTitleId))
                ) && 
                (
                    this.OpenApplyer == input.OpenApplyer ||
                    (this.OpenApplyer != null &&
                    this.OpenApplyer.Equals(input.OpenApplyer))
                ) && 
                (
                    this.OpenMode == input.OpenMode ||
                    (this.OpenMode != null &&
                    this.OpenMode.Equals(input.OpenMode))
                ) && 
                (
                    this.OpenType == input.OpenType ||
                    (this.OpenType != null &&
                    this.OpenType.Equals(input.OpenType))
                ) && 
                (
                    this.OwnerId == input.OwnerId ||
                    (this.OwnerId != null &&
                    this.OwnerId.Equals(input.OwnerId))
                ) && 
                (
                    this.Tag == input.Tag ||
                    (this.Tag != null &&
                    this.Tag.Equals(input.Tag))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                hashCode = (hashCode * 59) + this.BillMonthDay.GetHashCode();
                if (this.EffectiveStart != null)
                {
                    hashCode = (hashCode * 59) + this.EffectiveStart.GetHashCode();
                }
                if (this.EnterpriseId != null)
                {
                    hashCode = (hashCode * 59) + this.EnterpriseId.GetHashCode();
                }
                if (this.GmtCreate != null)
                {
                    hashCode = (hashCode * 59) + this.GmtCreate.GetHashCode();
                }
                if (this.GmtModified != null)
                {
                    hashCode = (hashCode * 59) + this.GmtModified.GetHashCode();
                }
                if (this.InvoiceRuleId != null)
                {
                    hashCode = (hashCode * 59) + this.InvoiceRuleId.GetHashCode();
                }
                if (this.InvoiceRuleRecordId != null)
                {
                    hashCode = (hashCode * 59) + this.InvoiceRuleRecordId.GetHashCode();
                }
                if (this.InvoiceTitleId != null)
                {
                    hashCode = (hashCode * 59) + this.InvoiceTitleId.GetHashCode();
                }
                if (this.OpenApplyer != null)
                {
                    hashCode = (hashCode * 59) + this.OpenApplyer.GetHashCode();
                }
                if (this.OpenMode != null)
                {
                    hashCode = (hashCode * 59) + this.OpenMode.GetHashCode();
                }
                if (this.OpenType != null)
                {
                    hashCode = (hashCode * 59) + this.OpenType.GetHashCode();
                }
                if (this.OwnerId != null)
                {
                    hashCode = (hashCode * 59) + this.OwnerId.GetHashCode();
                }
                if (this.Tag != null)
                {
                    hashCode = (hashCode * 59) + this.Tag.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
