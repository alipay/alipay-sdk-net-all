/*
 * 支付宝开放平台API
 *
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2025-02-19
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = AlipaySDKNet.OpenAPI.Client.OpenAPIDateConverter;

namespace AlipaySDKNet.OpenAPI.Model
{
    /// <summary>
    /// PromiseDetail
    /// </summary>
    [DataContract(Name = "PromiseDetail")]
    public partial class PromiseDetail : IEquatable<PromiseDetail>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="PromiseDetail" /> class.
        /// </summary>
        /// <param name="authStatus">授权状态.</param>
        /// <param name="createTime">任务创建时间.</param>
        /// <param name="endTime">任务结束时间.</param>
        /// <param name="finalTime">任务到达终态的时间.</param>
        /// <param name="finishPeriods">任务完成期数.</param>
        /// <param name="merchantId">芝麻侧的商户id.</param>
        /// <param name="merchantLogo">商户logo.</param>
        /// <param name="merchantName">商户名称.</param>
        /// <param name="outBizNo">生活记录加入时的外部业务号.</param>
        /// <param name="periodType">周期类型.</param>
        /// <param name="promiseName">生活记录模板名称.</param>
        /// <param name="recordId">生活记录主记录id.</param>
        /// <param name="recordStatus">主任务状态.</param>
        /// <param name="startTime">任务开始时间.</param>
        /// <param name="subRecordStatus">子记录状态.</param>
        /// <param name="subTitle">副标题.</param>
        /// <param name="templateId">生活记录模板id.</param>
        /// <param name="totalPeriods">任务总期数.</param>
        public PromiseDetail(bool authStatus = default(bool), string createTime = default(string), string endTime = default(string), string finalTime = default(string), int finishPeriods = default(int), string merchantId = default(string), string merchantLogo = default(string), string merchantName = default(string), string outBizNo = default(string), string periodType = default(string), string promiseName = default(string), string recordId = default(string), string recordStatus = default(string), string startTime = default(string), string subRecordStatus = default(string), string subTitle = default(string), string templateId = default(string), int totalPeriods = default(int))
        {
            this.AuthStatus = authStatus;
            this.CreateTime = createTime;
            this.EndTime = endTime;
            this.FinalTime = finalTime;
            this.FinishPeriods = finishPeriods;
            this.MerchantId = merchantId;
            this.MerchantLogo = merchantLogo;
            this.MerchantName = merchantName;
            this.OutBizNo = outBizNo;
            this.PeriodType = periodType;
            this.PromiseName = promiseName;
            this.RecordId = recordId;
            this.RecordStatus = recordStatus;
            this.StartTime = startTime;
            this.SubRecordStatus = subRecordStatus;
            this.SubTitle = subTitle;
            this.TemplateId = templateId;
            this.TotalPeriods = totalPeriods;
        }

        /// <summary>
        /// 授权状态
        /// </summary>
        /// <value>授权状态</value>
        [DataMember(Name = "auth_status", EmitDefaultValue = true)]
        public bool AuthStatus { get; set; }

        /// <summary>
        /// 任务创建时间
        /// </summary>
        /// <value>任务创建时间</value>
        [DataMember(Name = "create_time", EmitDefaultValue = false)]
        public string CreateTime { get; set; }

        /// <summary>
        /// 任务结束时间
        /// </summary>
        /// <value>任务结束时间</value>
        [DataMember(Name = "end_time", EmitDefaultValue = false)]
        public string EndTime { get; set; }

        /// <summary>
        /// 任务到达终态的时间
        /// </summary>
        /// <value>任务到达终态的时间</value>
        [DataMember(Name = "final_time", EmitDefaultValue = false)]
        public string FinalTime { get; set; }

        /// <summary>
        /// 任务完成期数
        /// </summary>
        /// <value>任务完成期数</value>
        [DataMember(Name = "finish_periods", EmitDefaultValue = false)]
        public int FinishPeriods { get; set; }

        /// <summary>
        /// 芝麻侧的商户id
        /// </summary>
        /// <value>芝麻侧的商户id</value>
        [DataMember(Name = "merchant_id", EmitDefaultValue = false)]
        public string MerchantId { get; set; }

        /// <summary>
        /// 商户logo
        /// </summary>
        /// <value>商户logo</value>
        [DataMember(Name = "merchant_logo", EmitDefaultValue = false)]
        public string MerchantLogo { get; set; }

        /// <summary>
        /// 商户名称
        /// </summary>
        /// <value>商户名称</value>
        [DataMember(Name = "merchant_name", EmitDefaultValue = false)]
        public string MerchantName { get; set; }

        /// <summary>
        /// 生活记录加入时的外部业务号
        /// </summary>
        /// <value>生活记录加入时的外部业务号</value>
        [DataMember(Name = "out_biz_no", EmitDefaultValue = false)]
        public string OutBizNo { get; set; }

        /// <summary>
        /// 周期类型
        /// </summary>
        /// <value>周期类型</value>
        [DataMember(Name = "period_type", EmitDefaultValue = false)]
        public string PeriodType { get; set; }

        /// <summary>
        /// 生活记录模板名称
        /// </summary>
        /// <value>生活记录模板名称</value>
        [DataMember(Name = "promise_name", EmitDefaultValue = false)]
        public string PromiseName { get; set; }

        /// <summary>
        /// 生活记录主记录id
        /// </summary>
        /// <value>生活记录主记录id</value>
        [DataMember(Name = "record_id", EmitDefaultValue = false)]
        public string RecordId { get; set; }

        /// <summary>
        /// 主任务状态
        /// </summary>
        /// <value>主任务状态</value>
        [DataMember(Name = "record_status", EmitDefaultValue = false)]
        public string RecordStatus { get; set; }

        /// <summary>
        /// 任务开始时间
        /// </summary>
        /// <value>任务开始时间</value>
        [DataMember(Name = "start_time", EmitDefaultValue = false)]
        public string StartTime { get; set; }

        /// <summary>
        /// 子记录状态
        /// </summary>
        /// <value>子记录状态</value>
        [DataMember(Name = "sub_record_status", EmitDefaultValue = false)]
        public string SubRecordStatus { get; set; }

        /// <summary>
        /// 副标题
        /// </summary>
        /// <value>副标题</value>
        [DataMember(Name = "sub_title", EmitDefaultValue = false)]
        public string SubTitle { get; set; }

        /// <summary>
        /// 生活记录模板id
        /// </summary>
        /// <value>生活记录模板id</value>
        [DataMember(Name = "template_id", EmitDefaultValue = false)]
        public string TemplateId { get; set; }

        /// <summary>
        /// 任务总期数
        /// </summary>
        /// <value>任务总期数</value>
        [DataMember(Name = "total_periods", EmitDefaultValue = false)]
        public int TotalPeriods { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class PromiseDetail {\n");
            sb.Append("  AuthStatus: ").Append(AuthStatus).Append("\n");
            sb.Append("  CreateTime: ").Append(CreateTime).Append("\n");
            sb.Append("  EndTime: ").Append(EndTime).Append("\n");
            sb.Append("  FinalTime: ").Append(FinalTime).Append("\n");
            sb.Append("  FinishPeriods: ").Append(FinishPeriods).Append("\n");
            sb.Append("  MerchantId: ").Append(MerchantId).Append("\n");
            sb.Append("  MerchantLogo: ").Append(MerchantLogo).Append("\n");
            sb.Append("  MerchantName: ").Append(MerchantName).Append("\n");
            sb.Append("  OutBizNo: ").Append(OutBizNo).Append("\n");
            sb.Append("  PeriodType: ").Append(PeriodType).Append("\n");
            sb.Append("  PromiseName: ").Append(PromiseName).Append("\n");
            sb.Append("  RecordId: ").Append(RecordId).Append("\n");
            sb.Append("  RecordStatus: ").Append(RecordStatus).Append("\n");
            sb.Append("  StartTime: ").Append(StartTime).Append("\n");
            sb.Append("  SubRecordStatus: ").Append(SubRecordStatus).Append("\n");
            sb.Append("  SubTitle: ").Append(SubTitle).Append("\n");
            sb.Append("  TemplateId: ").Append(TemplateId).Append("\n");
            sb.Append("  TotalPeriods: ").Append(TotalPeriods).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as PromiseDetail);
        }

        /// <summary>
        /// Returns true if PromiseDetail instances are equal
        /// </summary>
        /// <param name="input">Instance of PromiseDetail to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(PromiseDetail input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.AuthStatus == input.AuthStatus ||
                    this.AuthStatus.Equals(input.AuthStatus)
                ) && 
                (
                    this.CreateTime == input.CreateTime ||
                    (this.CreateTime != null &&
                    this.CreateTime.Equals(input.CreateTime))
                ) && 
                (
                    this.EndTime == input.EndTime ||
                    (this.EndTime != null &&
                    this.EndTime.Equals(input.EndTime))
                ) && 
                (
                    this.FinalTime == input.FinalTime ||
                    (this.FinalTime != null &&
                    this.FinalTime.Equals(input.FinalTime))
                ) && 
                (
                    this.FinishPeriods == input.FinishPeriods ||
                    this.FinishPeriods.Equals(input.FinishPeriods)
                ) && 
                (
                    this.MerchantId == input.MerchantId ||
                    (this.MerchantId != null &&
                    this.MerchantId.Equals(input.MerchantId))
                ) && 
                (
                    this.MerchantLogo == input.MerchantLogo ||
                    (this.MerchantLogo != null &&
                    this.MerchantLogo.Equals(input.MerchantLogo))
                ) && 
                (
                    this.MerchantName == input.MerchantName ||
                    (this.MerchantName != null &&
                    this.MerchantName.Equals(input.MerchantName))
                ) && 
                (
                    this.OutBizNo == input.OutBizNo ||
                    (this.OutBizNo != null &&
                    this.OutBizNo.Equals(input.OutBizNo))
                ) && 
                (
                    this.PeriodType == input.PeriodType ||
                    (this.PeriodType != null &&
                    this.PeriodType.Equals(input.PeriodType))
                ) && 
                (
                    this.PromiseName == input.PromiseName ||
                    (this.PromiseName != null &&
                    this.PromiseName.Equals(input.PromiseName))
                ) && 
                (
                    this.RecordId == input.RecordId ||
                    (this.RecordId != null &&
                    this.RecordId.Equals(input.RecordId))
                ) && 
                (
                    this.RecordStatus == input.RecordStatus ||
                    (this.RecordStatus != null &&
                    this.RecordStatus.Equals(input.RecordStatus))
                ) && 
                (
                    this.StartTime == input.StartTime ||
                    (this.StartTime != null &&
                    this.StartTime.Equals(input.StartTime))
                ) && 
                (
                    this.SubRecordStatus == input.SubRecordStatus ||
                    (this.SubRecordStatus != null &&
                    this.SubRecordStatus.Equals(input.SubRecordStatus))
                ) && 
                (
                    this.SubTitle == input.SubTitle ||
                    (this.SubTitle != null &&
                    this.SubTitle.Equals(input.SubTitle))
                ) && 
                (
                    this.TemplateId == input.TemplateId ||
                    (this.TemplateId != null &&
                    this.TemplateId.Equals(input.TemplateId))
                ) && 
                (
                    this.TotalPeriods == input.TotalPeriods ||
                    this.TotalPeriods.Equals(input.TotalPeriods)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                hashCode = (hashCode * 59) + this.AuthStatus.GetHashCode();
                if (this.CreateTime != null)
                {
                    hashCode = (hashCode * 59) + this.CreateTime.GetHashCode();
                }
                if (this.EndTime != null)
                {
                    hashCode = (hashCode * 59) + this.EndTime.GetHashCode();
                }
                if (this.FinalTime != null)
                {
                    hashCode = (hashCode * 59) + this.FinalTime.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.FinishPeriods.GetHashCode();
                if (this.MerchantId != null)
                {
                    hashCode = (hashCode * 59) + this.MerchantId.GetHashCode();
                }
                if (this.MerchantLogo != null)
                {
                    hashCode = (hashCode * 59) + this.MerchantLogo.GetHashCode();
                }
                if (this.MerchantName != null)
                {
                    hashCode = (hashCode * 59) + this.MerchantName.GetHashCode();
                }
                if (this.OutBizNo != null)
                {
                    hashCode = (hashCode * 59) + this.OutBizNo.GetHashCode();
                }
                if (this.PeriodType != null)
                {
                    hashCode = (hashCode * 59) + this.PeriodType.GetHashCode();
                }
                if (this.PromiseName != null)
                {
                    hashCode = (hashCode * 59) + this.PromiseName.GetHashCode();
                }
                if (this.RecordId != null)
                {
                    hashCode = (hashCode * 59) + this.RecordId.GetHashCode();
                }
                if (this.RecordStatus != null)
                {
                    hashCode = (hashCode * 59) + this.RecordStatus.GetHashCode();
                }
                if (this.StartTime != null)
                {
                    hashCode = (hashCode * 59) + this.StartTime.GetHashCode();
                }
                if (this.SubRecordStatus != null)
                {
                    hashCode = (hashCode * 59) + this.SubRecordStatus.GetHashCode();
                }
                if (this.SubTitle != null)
                {
                    hashCode = (hashCode * 59) + this.SubTitle.GetHashCode();
                }
                if (this.TemplateId != null)
                {
                    hashCode = (hashCode * 59) + this.TemplateId.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.TotalPeriods.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
