/*
 * 支付宝开放平台API
 *
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2025-02-19
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = AlipaySDKNet.OpenAPI.Client.OpenAPIDateConverter;

namespace AlipaySDKNet.OpenAPI.Model
{
    /// <summary>
    /// ShopQueryOpenApiVO
    /// </summary>
    [DataContract(Name = "ShopQueryOpenApiVO")]
    public partial class ShopQueryOpenApiVO : IEquatable<ShopQueryOpenApiVO>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ShopQueryOpenApiVO" /> class.
        /// </summary>
        /// <param name="businessAddress">businessAddress.</param>
        /// <param name="businessTime">店铺经营时间.</param>
        /// <param name="contactMobile">店铺联系手机.</param>
        /// <param name="contactPhone">店铺的联系固话.</param>
        /// <param name="newShopCategory">新版门店类目标准二级类目code。类目标准及与原shop_category映射关系参见文档https://gw.alipayobjects.com/os/bmw-prod/4b3f82df-e53e-4b84-bc41-fe025101e726.xlsx.</param>
        /// <param name="shopCategory">店铺类目.取值参见文件&lt;a href&#x3D;\&quot;https://mif-pub.alipayobjects.com/ShopCategory.xlsx\&quot;&gt;文件&lt;/a&gt;中的三级门店类目.</param>
        /// <param name="shopId">蚂蚁店铺id.</param>
        /// <param name="shopInfoStatus">当前名称、地址、经纬度信息准确一致，可用于数字化经营场景消费(如商品、券、消费圈等场域的分发)，不影响门店支付结算.</param>
        /// <param name="shopName">店铺名称.</param>
        /// <param name="shopStatus">门店状态.</param>
        /// <param name="shopType">店铺经营类型.</param>
        /// <param name="storeId">门店编号，表示该门店在该商户角色id(直连pid，间连smid)下，由商户自己定义的外部门店编号.</param>
        public ShopQueryOpenApiVO(AddressInfo businessAddress = default(AddressInfo), List<ShopBusinessTime> businessTime = default(List<ShopBusinessTime>), string contactMobile = default(string), string contactPhone = default(string), string newShopCategory = default(string), string shopCategory = default(string), string shopId = default(string), string shopInfoStatus = default(string), string shopName = default(string), string shopStatus = default(string), string shopType = default(string), string storeId = default(string))
        {
            this.BusinessAddress = businessAddress;
            this.BusinessTime = businessTime;
            this.ContactMobile = contactMobile;
            this.ContactPhone = contactPhone;
            this.NewShopCategory = newShopCategory;
            this.ShopCategory = shopCategory;
            this.ShopId = shopId;
            this.ShopInfoStatus = shopInfoStatus;
            this.ShopName = shopName;
            this.ShopStatus = shopStatus;
            this.ShopType = shopType;
            this.StoreId = storeId;
        }

        /// <summary>
        /// Gets or Sets BusinessAddress
        /// </summary>
        [DataMember(Name = "business_address", EmitDefaultValue = false)]
        public AddressInfo BusinessAddress { get; set; }

        /// <summary>
        /// 店铺经营时间
        /// </summary>
        /// <value>店铺经营时间</value>
        [DataMember(Name = "business_time", EmitDefaultValue = false)]
        public List<ShopBusinessTime> BusinessTime { get; set; }

        /// <summary>
        /// 店铺联系手机
        /// </summary>
        /// <value>店铺联系手机</value>
        [DataMember(Name = "contact_mobile", EmitDefaultValue = false)]
        public string ContactMobile { get; set; }

        /// <summary>
        /// 店铺的联系固话
        /// </summary>
        /// <value>店铺的联系固话</value>
        [DataMember(Name = "contact_phone", EmitDefaultValue = false)]
        public string ContactPhone { get; set; }

        /// <summary>
        /// 新版门店类目标准二级类目code。类目标准及与原shop_category映射关系参见文档https://gw.alipayobjects.com/os/bmw-prod/4b3f82df-e53e-4b84-bc41-fe025101e726.xlsx
        /// </summary>
        /// <value>新版门店类目标准二级类目code。类目标准及与原shop_category映射关系参见文档https://gw.alipayobjects.com/os/bmw-prod/4b3f82df-e53e-4b84-bc41-fe025101e726.xlsx</value>
        [DataMember(Name = "new_shop_category", EmitDefaultValue = false)]
        public string NewShopCategory { get; set; }

        /// <summary>
        /// 店铺类目.取值参见文件&lt;a href&#x3D;\&quot;https://mif-pub.alipayobjects.com/ShopCategory.xlsx\&quot;&gt;文件&lt;/a&gt;中的三级门店类目
        /// </summary>
        /// <value>店铺类目.取值参见文件&lt;a href&#x3D;\&quot;https://mif-pub.alipayobjects.com/ShopCategory.xlsx\&quot;&gt;文件&lt;/a&gt;中的三级门店类目</value>
        [DataMember(Name = "shop_category", EmitDefaultValue = false)]
        public string ShopCategory { get; set; }

        /// <summary>
        /// 蚂蚁店铺id
        /// </summary>
        /// <value>蚂蚁店铺id</value>
        [DataMember(Name = "shop_id", EmitDefaultValue = false)]
        public string ShopId { get; set; }

        /// <summary>
        /// 当前名称、地址、经纬度信息准确一致，可用于数字化经营场景消费(如商品、券、消费圈等场域的分发)，不影响门店支付结算
        /// </summary>
        /// <value>当前名称、地址、经纬度信息准确一致，可用于数字化经营场景消费(如商品、券、消费圈等场域的分发)，不影响门店支付结算</value>
        [DataMember(Name = "shop_info_status", EmitDefaultValue = false)]
        public string ShopInfoStatus { get; set; }

        /// <summary>
        /// 店铺名称
        /// </summary>
        /// <value>店铺名称</value>
        [DataMember(Name = "shop_name", EmitDefaultValue = false)]
        public string ShopName { get; set; }

        /// <summary>
        /// 门店状态
        /// </summary>
        /// <value>门店状态</value>
        [DataMember(Name = "shop_status", EmitDefaultValue = false)]
        public string ShopStatus { get; set; }

        /// <summary>
        /// 店铺经营类型
        /// </summary>
        /// <value>店铺经营类型</value>
        [DataMember(Name = "shop_type", EmitDefaultValue = false)]
        public string ShopType { get; set; }

        /// <summary>
        /// 门店编号，表示该门店在该商户角色id(直连pid，间连smid)下，由商户自己定义的外部门店编号
        /// </summary>
        /// <value>门店编号，表示该门店在该商户角色id(直连pid，间连smid)下，由商户自己定义的外部门店编号</value>
        [DataMember(Name = "store_id", EmitDefaultValue = false)]
        public string StoreId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ShopQueryOpenApiVO {\n");
            sb.Append("  BusinessAddress: ").Append(BusinessAddress).Append("\n");
            sb.Append("  BusinessTime: ").Append(BusinessTime).Append("\n");
            sb.Append("  ContactMobile: ").Append(ContactMobile).Append("\n");
            sb.Append("  ContactPhone: ").Append(ContactPhone).Append("\n");
            sb.Append("  NewShopCategory: ").Append(NewShopCategory).Append("\n");
            sb.Append("  ShopCategory: ").Append(ShopCategory).Append("\n");
            sb.Append("  ShopId: ").Append(ShopId).Append("\n");
            sb.Append("  ShopInfoStatus: ").Append(ShopInfoStatus).Append("\n");
            sb.Append("  ShopName: ").Append(ShopName).Append("\n");
            sb.Append("  ShopStatus: ").Append(ShopStatus).Append("\n");
            sb.Append("  ShopType: ").Append(ShopType).Append("\n");
            sb.Append("  StoreId: ").Append(StoreId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ShopQueryOpenApiVO);
        }

        /// <summary>
        /// Returns true if ShopQueryOpenApiVO instances are equal
        /// </summary>
        /// <param name="input">Instance of ShopQueryOpenApiVO to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ShopQueryOpenApiVO input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.BusinessAddress == input.BusinessAddress ||
                    (this.BusinessAddress != null &&
                    this.BusinessAddress.Equals(input.BusinessAddress))
                ) && 
                (
                    this.BusinessTime == input.BusinessTime ||
                    this.BusinessTime != null &&
                    input.BusinessTime != null &&
                    this.BusinessTime.SequenceEqual(input.BusinessTime)
                ) && 
                (
                    this.ContactMobile == input.ContactMobile ||
                    (this.ContactMobile != null &&
                    this.ContactMobile.Equals(input.ContactMobile))
                ) && 
                (
                    this.ContactPhone == input.ContactPhone ||
                    (this.ContactPhone != null &&
                    this.ContactPhone.Equals(input.ContactPhone))
                ) && 
                (
                    this.NewShopCategory == input.NewShopCategory ||
                    (this.NewShopCategory != null &&
                    this.NewShopCategory.Equals(input.NewShopCategory))
                ) && 
                (
                    this.ShopCategory == input.ShopCategory ||
                    (this.ShopCategory != null &&
                    this.ShopCategory.Equals(input.ShopCategory))
                ) && 
                (
                    this.ShopId == input.ShopId ||
                    (this.ShopId != null &&
                    this.ShopId.Equals(input.ShopId))
                ) && 
                (
                    this.ShopInfoStatus == input.ShopInfoStatus ||
                    (this.ShopInfoStatus != null &&
                    this.ShopInfoStatus.Equals(input.ShopInfoStatus))
                ) && 
                (
                    this.ShopName == input.ShopName ||
                    (this.ShopName != null &&
                    this.ShopName.Equals(input.ShopName))
                ) && 
                (
                    this.ShopStatus == input.ShopStatus ||
                    (this.ShopStatus != null &&
                    this.ShopStatus.Equals(input.ShopStatus))
                ) && 
                (
                    this.ShopType == input.ShopType ||
                    (this.ShopType != null &&
                    this.ShopType.Equals(input.ShopType))
                ) && 
                (
                    this.StoreId == input.StoreId ||
                    (this.StoreId != null &&
                    this.StoreId.Equals(input.StoreId))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.BusinessAddress != null)
                {
                    hashCode = (hashCode * 59) + this.BusinessAddress.GetHashCode();
                }
                if (this.BusinessTime != null)
                {
                    hashCode = (hashCode * 59) + this.BusinessTime.GetHashCode();
                }
                if (this.ContactMobile != null)
                {
                    hashCode = (hashCode * 59) + this.ContactMobile.GetHashCode();
                }
                if (this.ContactPhone != null)
                {
                    hashCode = (hashCode * 59) + this.ContactPhone.GetHashCode();
                }
                if (this.NewShopCategory != null)
                {
                    hashCode = (hashCode * 59) + this.NewShopCategory.GetHashCode();
                }
                if (this.ShopCategory != null)
                {
                    hashCode = (hashCode * 59) + this.ShopCategory.GetHashCode();
                }
                if (this.ShopId != null)
                {
                    hashCode = (hashCode * 59) + this.ShopId.GetHashCode();
                }
                if (this.ShopInfoStatus != null)
                {
                    hashCode = (hashCode * 59) + this.ShopInfoStatus.GetHashCode();
                }
                if (this.ShopName != null)
                {
                    hashCode = (hashCode * 59) + this.ShopName.GetHashCode();
                }
                if (this.ShopStatus != null)
                {
                    hashCode = (hashCode * 59) + this.ShopStatus.GetHashCode();
                }
                if (this.ShopType != null)
                {
                    hashCode = (hashCode * 59) + this.ShopType.GetHashCode();
                }
                if (this.StoreId != null)
                {
                    hashCode = (hashCode * 59) + this.StoreId.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
