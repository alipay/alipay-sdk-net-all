/*
 * 支付宝开放平台API
 *
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2025-02-19
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = AlipaySDKNet.OpenAPI.Client.OpenAPIDateConverter;

namespace AlipaySDKNet.OpenAPI.Model
{
    /// <summary>
    /// AlipayFundTransUniTransferErrorResponseModel
    /// </summary>
    [DataContract(Name = "AlipayFundTransUniTransferErrorResponseModel")]
    public partial class AlipayFundTransUniTransferErrorResponseModel : IEquatable<AlipayFundTransUniTransferErrorResponseModel>, IValidatableObject
    {
        /// <summary>
        /// 错误码
        /// </summary>
        /// <value>错误码</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum CodeEnum
        {
            /// <summary>
            /// Enum INVALIDPARAMETER for value: INVALID_PARAMETER
            /// </summary>
            [EnumMember(Value = "INVALID_PARAMETER")]
            INVALIDPARAMETER = 1,

            /// <summary>
            /// Enum SYSTEMERROR for value: SYSTEM_ERROR
            /// </summary>
            [EnumMember(Value = "SYSTEM_ERROR")]
            SYSTEMERROR = 2,

            /// <summary>
            /// Enum EXCEEDLIMITSMAMOUNT for value: EXCEED_LIMIT_SM_AMOUNT
            /// </summary>
            [EnumMember(Value = "EXCEED_LIMIT_SM_AMOUNT")]
            EXCEEDLIMITSMAMOUNT = 3,

            /// <summary>
            /// Enum EXCEEDLIMITMMAMOUNT for value: EXCEED_LIMIT_MM_AMOUNT
            /// </summary>
            [EnumMember(Value = "EXCEED_LIMIT_MM_AMOUNT")]
            EXCEEDLIMITMMAMOUNT = 4,

            /// <summary>
            /// Enum PAYCARDUNABLEPAYMENT for value: PAYCARD_UNABLE_PAYMENT
            /// </summary>
            [EnumMember(Value = "PAYCARD_UNABLE_PAYMENT")]
            PAYCARDUNABLEPAYMENT = 5,

            /// <summary>
            /// Enum PAYERSTATUSERROR for value: PAYER_STATUS_ERROR
            /// </summary>
            [EnumMember(Value = "PAYER_STATUS_ERROR")]
            PAYERSTATUSERROR = 6,

            /// <summary>
            /// Enum PAYERCERTIFYCHECKFAIL for value: PAYER_CERTIFY_CHECK_FAIL
            /// </summary>
            [EnumMember(Value = "PAYER_CERTIFY_CHECK_FAIL")]
            PAYERCERTIFYCHECKFAIL = 7,

            /// <summary>
            /// Enum PAYERBALANCENOTENOUGH for value: PAYER_BALANCE_NOT_ENOUGH
            /// </summary>
            [EnumMember(Value = "PAYER_BALANCE_NOT_ENOUGH")]
            PAYERBALANCENOTENOUGH = 8,

            /// <summary>
            /// Enum PAYERUSERINFOERROR for value: PAYER_USER_INFO_ERROR
            /// </summary>
            [EnumMember(Value = "PAYER_USER_INFO_ERROR")]
            PAYERUSERINFOERROR = 9,

            /// <summary>
            /// Enum PAYMENTINFOINCONSISTENCY for value: PAYMENT_INFO_INCONSISTENCY
            /// </summary>
            [EnumMember(Value = "PAYMENT_INFO_INCONSISTENCY")]
            PAYMENTINFOINCONSISTENCY = 10,

            /// <summary>
            /// Enum CARDBINERROR for value: CARD_BIN_ERROR
            /// </summary>
            [EnumMember(Value = "CARD_BIN_ERROR")]
            CARDBINERROR = 11,

            /// <summary>
            /// Enum PAYEECARDINFOERROR for value: PAYEE_CARD_INFO_ERROR
            /// </summary>
            [EnumMember(Value = "PAYEE_CARD_INFO_ERROR")]
            PAYEECARDINFOERROR = 12,

            /// <summary>
            /// Enum INSTPAYUNABLE for value: INST_PAY_UNABLE
            /// </summary>
            [EnumMember(Value = "INST_PAY_UNABLE")]
            INSTPAYUNABLE = 13,

            /// <summary>
            /// Enum MEMOREQUIREDINTRANSFERERROR for value: MEMO_REQUIRED_IN_TRANSFER_ERROR
            /// </summary>
            [EnumMember(Value = "MEMO_REQUIRED_IN_TRANSFER_ERROR")]
            MEMOREQUIREDINTRANSFERERROR = 14,

            /// <summary>
            /// Enum PERMITCHECKPERMIDENTITYTHEFT for value: PERMIT_CHECK_PERM_IDENTITY_THEFT
            /// </summary>
            [EnumMember(Value = "PERMIT_CHECK_PERM_IDENTITY_THEFT")]
            PERMITCHECKPERMIDENTITYTHEFT = 15,

            /// <summary>
            /// Enum REMARKHASSENSITIVEWORD for value: REMARK_HAS_SENSITIVE_WORD
            /// </summary>
            [EnumMember(Value = "REMARK_HAS_SENSITIVE_WORD")]
            REMARKHASSENSITIVEWORD = 16,

            /// <summary>
            /// Enum EXCEEDLIMITDMAMOUNT for value: EXCEED_LIMIT_DM_AMOUNT
            /// </summary>
            [EnumMember(Value = "EXCEED_LIMIT_DM_AMOUNT")]
            EXCEEDLIMITDMAMOUNT = 17,

            /// <summary>
            /// Enum NOACCOUNTRECEIVEPERMISSION for value: NO_ACCOUNT_RECEIVE_PERMISSION
            /// </summary>
            [EnumMember(Value = "NO_ACCOUNT_RECEIVE_PERMISSION")]
            NOACCOUNTRECEIVEPERMISSION = 18,

            /// <summary>
            /// Enum BALANCEISNOTENOUGH for value: BALANCE_IS_NOT_ENOUGH
            /// </summary>
            [EnumMember(Value = "BALANCE_IS_NOT_ENOUGH")]
            BALANCEISNOTENOUGH = 19,

            /// <summary>
            /// Enum NOACCOUNTPAYMENTPERMISSION for value: NO_ACCOUNT_PAYMENT_PERMISSION
            /// </summary>
            [EnumMember(Value = "NO_ACCOUNT_PAYMENT_PERMISSION")]
            NOACCOUNTPAYMENTPERMISSION = 20,

            /// <summary>
            /// Enum PAYERNOTEXIST for value: PAYER_NOT_EXIST
            /// </summary>
            [EnumMember(Value = "PAYER_NOT_EXIST")]
            PAYERNOTEXIST = 21,

            /// <summary>
            /// Enum PRODUCTNOTSIGN for value: PRODUCT_NOT_SIGN
            /// </summary>
            [EnumMember(Value = "PRODUCT_NOT_SIGN")]
            PRODUCTNOTSIGN = 22,

            /// <summary>
            /// Enum PAYMENTTIMEEXPIRE for value: PAYMENT_TIME_EXPIRE
            /// </summary>
            [EnumMember(Value = "PAYMENT_TIME_EXPIRE")]
            PAYMENTTIMEEXPIRE = 23,

            /// <summary>
            /// Enum PAYEENOTEXIST for value: PAYEE_NOT_EXIST
            /// </summary>
            [EnumMember(Value = "PAYEE_NOT_EXIST")]
            PAYEENOTEXIST = 24,

            /// <summary>
            /// Enum PAYEEACCOUNTSTATUSERROR for value: PAYEE_ACCOUNT_STATUS_ERROR
            /// </summary>
            [EnumMember(Value = "PAYEE_ACCOUNT_STATUS_ERROR")]
            PAYEEACCOUNTSTATUSERROR = 25,

            /// <summary>
            /// Enum PERMITNONBANKLIMITPAYEE for value: PERMIT_NON_BANK_LIMIT_PAYEE
            /// </summary>
            [EnumMember(Value = "PERMIT_NON_BANK_LIMIT_PAYEE")]
            PERMITNONBANKLIMITPAYEE = 26,

            /// <summary>
            /// Enum PAYEETRUSTEESHIPACCOVERLIMIT for value: PAYEE_TRUSTEESHIP_ACC_OVER_LIMIT
            /// </summary>
            [EnumMember(Value = "PAYEE_TRUSTEESHIP_ACC_OVER_LIMIT")]
            PAYEETRUSTEESHIPACCOVERLIMIT = 27,

            /// <summary>
            /// Enum NOPERMISSIONACCOUNT for value: NO_PERMISSION_ACCOUNT
            /// </summary>
            [EnumMember(Value = "NO_PERMISSION_ACCOUNT")]
            NOPERMISSIONACCOUNT = 28,

            /// <summary>
            /// Enum TRUSTEESHIPACCOUNTNOTEXIST for value: TRUSTEESHIP_ACCOUNT_NOT_EXIST
            /// </summary>
            [EnumMember(Value = "TRUSTEESHIP_ACCOUNT_NOT_EXIST")]
            TRUSTEESHIPACCOUNTNOTEXIST = 29,

            /// <summary>
            /// Enum PAYEEACCOUNTNOTEXSIT for value: PAYEE_ACCOUNT_NOT_EXSIT
            /// </summary>
            [EnumMember(Value = "PAYEE_ACCOUNT_NOT_EXSIT")]
            PAYEEACCOUNTNOTEXSIT = 30,

            /// <summary>
            /// Enum ORDERNOTEXIST for value: ORDER_NOT_EXIST
            /// </summary>
            [EnumMember(Value = "ORDER_NOT_EXIST")]
            ORDERNOTEXIST = 31,

            /// <summary>
            /// Enum PAYEEUSERINFOSTATUSERROR for value: PAYEE_USERINFO_STATUS_ERROR
            /// </summary>
            [EnumMember(Value = "PAYEE_USERINFO_STATUS_ERROR")]
            PAYEEUSERINFOSTATUSERROR = 32,

            /// <summary>
            /// Enum PAYMENTMONEYNOTENOUGH for value: PAYMENT_MONEY_NOT_ENOUGH
            /// </summary>
            [EnumMember(Value = "PAYMENT_MONEY_NOT_ENOUGH")]
            PAYMENTMONEYNOTENOUGH = 33,

            /// <summary>
            /// Enum TRUSTEESHIPRECIEVEQUOTALIMIT for value: TRUSTEESHIP_RECIEVE_QUOTA_LIMIT
            /// </summary>
            [EnumMember(Value = "TRUSTEESHIP_RECIEVE_QUOTA_LIMIT")]
            TRUSTEESHIPRECIEVEQUOTALIMIT = 34,

            /// <summary>
            /// Enum SECURITYCHECKFAILED for value: SECURITY_CHECK_FAILED
            /// </summary>
            [EnumMember(Value = "SECURITY_CHECK_FAILED")]
            SECURITYCHECKFAILED = 35,

            /// <summary>
            /// Enum NOORDERPERMISSION for value: NO_ORDER_PERMISSION
            /// </summary>
            [EnumMember(Value = "NO_ORDER_PERMISSION")]
            NOORDERPERMISSION = 36,

            /// <summary>
            /// Enum ORDERSTATUSINVALID for value: ORDER_STATUS_INVALID
            /// </summary>
            [EnumMember(Value = "ORDER_STATUS_INVALID")]
            ORDERSTATUSINVALID = 37,

            /// <summary>
            /// Enum PERMAMLNOTREALNAMEREV for value: PERM_AML_NOT_REALNAME_REV
            /// </summary>
            [EnumMember(Value = "PERM_AML_NOT_REALNAME_REV")]
            PERMAMLNOTREALNAMEREV = 38,

            /// <summary>
            /// Enum USERAGREEMENTVERIFYFAIL for value: USER_AGREEMENT_VERIFY_FAIL
            /// </summary>
            [EnumMember(Value = "USER_AGREEMENT_VERIFY_FAIL")]
            USERAGREEMENTVERIFYFAIL = 39,

            /// <summary>
            /// Enum PAYERNOTEQUALPAYEEERROR for value: PAYER_NOT_EQUAL_PAYEE_ERROR
            /// </summary>
            [EnumMember(Value = "PAYER_NOT_EQUAL_PAYEE_ERROR")]
            PAYERNOTEQUALPAYEEERROR = 40,

            /// <summary>
            /// Enum EXCEEDLIMITDCRECEIVED for value: EXCEED_LIMIT_DC_RECEIVED
            /// </summary>
            [EnumMember(Value = "EXCEED_LIMIT_DC_RECEIVED")]
            EXCEEDLIMITDCRECEIVED = 41,

            /// <summary>
            /// Enum PAYERPERMLIMITCHECKFAILURE for value: PAYER_PERMLIMIT_CHECK_FAILURE
            /// </summary>
            [EnumMember(Value = "PAYER_PERMLIMIT_CHECK_FAILURE")]
            PAYERPERMLIMITCHECKFAILURE = 42,

            /// <summary>
            /// Enum PAYEEACCOCUPIED for value: PAYEE_ACC_OCUPIED
            /// </summary>
            [EnumMember(Value = "PAYEE_ACC_OCUPIED")]
            PAYEEACCOCUPIED = 43,

            /// <summary>
            /// Enum PAYERPAYEECANNOTSAME for value: PAYER_PAYEE_CANNOT_SAME
            /// </summary>
            [EnumMember(Value = "PAYER_PAYEE_CANNOT_SAME")]
            PAYERPAYEECANNOTSAME = 44,

            /// <summary>
            /// Enum PERMITCHECKPERMLIMITED for value: PERMIT_CHECK_PERM_LIMITED
            /// </summary>
            [EnumMember(Value = "PERMIT_CHECK_PERM_LIMITED")]
            PERMITCHECKPERMLIMITED = 45,

            /// <summary>
            /// Enum RESOURCELIMITEXCEED for value: RESOURCE_LIMIT_EXCEED
            /// </summary>
            [EnumMember(Value = "RESOURCE_LIMIT_EXCEED")]
            RESOURCELIMITEXCEED = 46,

            /// <summary>
            /// Enum INVALIDPAYERACCOUNT for value: INVALID_PAYER_ACCOUNT
            /// </summary>
            [EnumMember(Value = "INVALID_PAYER_ACCOUNT")]
            INVALIDPAYERACCOUNT = 47,

            /// <summary>
            /// Enum EXCEEDLIMITDMMAXAMOUNT for value: EXCEED_LIMIT_DM_MAX_AMOUNT
            /// </summary>
            [EnumMember(Value = "EXCEED_LIMIT_DM_MAX_AMOUNT")]
            EXCEEDLIMITDMMAXAMOUNT = 48,

            /// <summary>
            /// Enum EXCEEDLIMITPERSONALSMAMOUNT for value: EXCEED_LIMIT_PERSONAL_SM_AMOUNT
            /// </summary>
            [EnumMember(Value = "EXCEED_LIMIT_PERSONAL_SM_AMOUNT")]
            EXCEEDLIMITPERSONALSMAMOUNT = 49,

            /// <summary>
            /// Enum EXCEEDLIMITUNRNDMAMOUNT for value: EXCEED_LIMIT_UNRN_DM_AMOUNT
            /// </summary>
            [EnumMember(Value = "EXCEED_LIMIT_UNRN_DM_AMOUNT")]
            EXCEEDLIMITUNRNDMAMOUNT = 50,

            /// <summary>
            /// Enum INVALIDCARDNO for value: INVALID_CARDNO
            /// </summary>
            [EnumMember(Value = "INVALID_CARDNO")]
            INVALIDCARDNO = 51,

            /// <summary>
            /// Enum RELEASEUSERFORBBIDENRECIEVE for value: RELEASE_USER_FORBBIDEN_RECIEVE
            /// </summary>
            [EnumMember(Value = "RELEASE_USER_FORBBIDEN_RECIEVE")]
            RELEASEUSERFORBBIDENRECIEVE = 52,

            /// <summary>
            /// Enum PAYEEUSERTYPEERROR for value: PAYEE_USER_TYPE_ERROR
            /// </summary>
            [EnumMember(Value = "PAYEE_USER_TYPE_ERROR")]
            PAYEEUSERTYPEERROR = 53,

            /// <summary>
            /// Enum EXCEEDLIMITSMMINAMOUNT for value: EXCEED_LIMIT_SM_MIN_AMOUNT
            /// </summary>
            [EnumMember(Value = "EXCEED_LIMIT_SM_MIN_AMOUNT")]
            EXCEEDLIMITSMMINAMOUNT = 54,

            /// <summary>
            /// Enum PERMITCHECKRECEIVELIMIT for value: PERMIT_CHECK_RECEIVE_LIMIT
            /// </summary>
            [EnumMember(Value = "PERMIT_CHECK_RECEIVE_LIMIT")]
            PERMITCHECKRECEIVELIMIT = 55,

            /// <summary>
            /// Enum NOTINWHITELIST for value: NOT_IN_WHITE_LIST
            /// </summary>
            [EnumMember(Value = "NOT_IN_WHITE_LIST")]
            NOTINWHITELIST = 56,

            /// <summary>
            /// Enum MONEYPAYCLOSED for value: MONEY_PAY_CLOSED
            /// </summary>
            [EnumMember(Value = "MONEY_PAY_CLOSED")]
            MONEYPAYCLOSED = 57,

            /// <summary>
            /// Enum NOAVAILABLEPAYMENTTOOLS for value: NO_AVAILABLE_PAYMENT_TOOLS
            /// </summary>
            [EnumMember(Value = "NO_AVAILABLE_PAYMENT_TOOLS")]
            NOAVAILABLEPAYMENTTOOLS = 58,

            /// <summary>
            /// Enum PAYEENOTRELNAMECERTIFY for value: PAYEE_NOT_RELNAME_CERTIFY
            /// </summary>
            [EnumMember(Value = "PAYEE_NOT_RELNAME_CERTIFY")]
            PAYEENOTRELNAMECERTIFY = 59,

            /// <summary>
            /// Enum OVERSEATRANSFERCLOSE for value: OVERSEA_TRANSFER_CLOSE
            /// </summary>
            [EnumMember(Value = "OVERSEA_TRANSFER_CLOSE")]
            OVERSEATRANSFERCLOSE = 60,

            /// <summary>
            /// Enum PAYMENTFAIL for value: PAYMENT_FAIL
            /// </summary>
            [EnumMember(Value = "PAYMENT_FAIL")]
            PAYMENTFAIL = 61,

            /// <summary>
            /// Enum ALREADYWITHDRAWSTDREDPACKET for value: ALREADY_WITHDRAW_STD_RED_PACKET
            /// </summary>
            [EnumMember(Value = "ALREADY_WITHDRAW_STD_RED_PACKET")]
            ALREADYWITHDRAWSTDREDPACKET = 62,

            /// <summary>
            /// Enum BLOCKUSERFORBBIDENRECIEVE for value: BLOCK_USER_FORBBIDEN_RECIEVE
            /// </summary>
            [EnumMember(Value = "BLOCK_USER_FORBBIDEN_RECIEVE")]
            BLOCKUSERFORBBIDENRECIEVE = 63,

            /// <summary>
            /// Enum REQUESTPROCESSING for value: REQUEST_PROCESSING
            /// </summary>
            [EnumMember(Value = "REQUEST_PROCESSING")]
            REQUESTPROCESSING = 64,

            /// <summary>
            /// Enum USERNOTEXIST for value: USER_NOT_EXIST
            /// </summary>
            [EnumMember(Value = "USER_NOT_EXIST")]
            USERNOTEXIST = 65,

            /// <summary>
            /// Enum PARAMILLEGAL for value: PARAM_ILLEGAL
            /// </summary>
            [EnumMember(Value = "PARAM_ILLEGAL")]
            PARAMILLEGAL = 66,

            /// <summary>
            /// Enum PROCESSFAIL for value: PROCESS_FAIL
            /// </summary>
            [EnumMember(Value = "PROCESS_FAIL")]
            PROCESSFAIL = 67,

            /// <summary>
            /// Enum CURRENCYNOTSUPPORT for value: CURRENCY_NOT_SUPPORT
            /// </summary>
            [EnumMember(Value = "CURRENCY_NOT_SUPPORT")]
            CURRENCYNOTSUPPORT = 68,

            /// <summary>
            /// Enum PAYERREQUESTERRELATIONINVALID for value: PAYER_REQUESTER_RELATION_INVALID
            /// </summary>
            [EnumMember(Value = "PAYER_REQUESTER_RELATION_INVALID")]
            PAYERREQUESTERRELATIONINVALID = 69,

            /// <summary>
            /// Enum AUTHOREEISNOTMATCH for value: AUTHOREE_IS_NOT_MATCH
            /// </summary>
            [EnumMember(Value = "AUTHOREE_IS_NOT_MATCH")]
            AUTHOREEISNOTMATCH = 70,

            /// <summary>
            /// Enum NOACCOUNTUSERFORBBIDENRECIEVE for value: NO_ACCOUNT_USER_FORBBIDEN_RECIEVE
            /// </summary>
            [EnumMember(Value = "NO_ACCOUNT_USER_FORBBIDEN_RECIEVE")]
            NOACCOUNTUSERFORBBIDENRECIEVE = 71,

            /// <summary>
            /// Enum SIGNINVALID for value: SIGN_INVALID
            /// </summary>
            [EnumMember(Value = "SIGN_INVALID")]
            SIGNINVALID = 72,

            /// <summary>
            /// Enum SIGNINVOKEPIDINCONSISTENT for value: SIGN_INVOKE_PID_INCONSISTENT
            /// </summary>
            [EnumMember(Value = "SIGN_INVOKE_PID_INCONSISTENT")]
            SIGNINVOKEPIDINCONSISTENT = 73,

            /// <summary>
            /// Enum SIGNQUERYAPPINFOERROR for value: SIGN_QUERY_APP_INFO_ERROR
            /// </summary>
            [EnumMember(Value = "SIGN_QUERY_APP_INFO_ERROR")]
            SIGNQUERYAPPINFOERROR = 74,

            /// <summary>
            /// Enum SIGNQUERYAGGREMENTERROR for value: SIGN_QUERY_AGGREMENT_ERROR
            /// </summary>
            [EnumMember(Value = "SIGN_QUERY_AGGREMENT_ERROR")]
            SIGNQUERYAGGREMENTERROR = 75,

            /// <summary>
            /// Enum SIGNAGREEMENTNOINCONSISTENT for value: SIGN_AGREEMENT_NO_INCONSISTENT
            /// </summary>
            [EnumMember(Value = "SIGN_AGREEMENT_NO_INCONSISTENT")]
            SIGNAGREEMENTNOINCONSISTENT = 76,

            /// <summary>
            /// Enum SIGNPARAMINVALID for value: SIGN_PARAM_INVALID
            /// </summary>
            [EnumMember(Value = "SIGN_PARAM_INVALID")]
            SIGNPARAMINVALID = 77,

            /// <summary>
            /// Enum SIGNNOTALLOWSKIP for value: SIGN_NOT_ALLOW_SKIP
            /// </summary>
            [EnumMember(Value = "SIGN_NOT_ALLOW_SKIP")]
            SIGNNOTALLOWSKIP = 78,

            /// <summary>
            /// Enum EXCEEDLIMITENTSMAMOUNT for value: EXCEED_LIMIT_ENT_SM_AMOUNT
            /// </summary>
            [EnumMember(Value = "EXCEED_LIMIT_ENT_SM_AMOUNT")]
            EXCEEDLIMITENTSMAMOUNT = 79,

            /// <summary>
            /// Enum ISVAUTHERROR for value: ISV_AUTH_ERROR
            /// </summary>
            [EnumMember(Value = "ISV_AUTH_ERROR")]
            ISVAUTHERROR = 80,

            /// <summary>
            /// Enum PAYERUSERINFONOTEXSIT for value: PAYER_USERINFO_NOT_EXSIT
            /// </summary>
            [EnumMember(Value = "PAYER_USERINFO_NOT_EXSIT")]
            PAYERUSERINFONOTEXSIT = 81,

            /// <summary>
            /// Enum BLOCKUSERFORBBIDENSEND for value: BLOCK_USER_FORBBIDEN_SEND
            /// </summary>
            [EnumMember(Value = "BLOCK_USER_FORBBIDEN_SEND")]
            BLOCKUSERFORBBIDENSEND = 82,

            /// <summary>
            /// Enum BANKRESPONSEERROR for value: BANK_RESPONSE_ERROR
            /// </summary>
            [EnumMember(Value = "BANK_RESPONSE_ERROR")]
            BANKRESPONSEERROR = 83,

            /// <summary>
            /// Enum BIZUNIQUEEXCEPTION for value: BIZ_UNIQUE_EXCEPTION
            /// </summary>
            [EnumMember(Value = "BIZ_UNIQUE_EXCEPTION")]
            BIZUNIQUEEXCEPTION = 84,

            /// <summary>
            /// Enum NOACCOUNTBOOKPERMISSION for value: NO_ACCOUNTBOOK_PERMISSION
            /// </summary>
            [EnumMember(Value = "NO_ACCOUNTBOOK_PERMISSION")]
            NOACCOUNTBOOKPERMISSION = 85,

            /// <summary>
            /// Enum PERMITCHECKPERMAMLCERTEXPIRED for value: PERMIT_CHECK_PERM_AML_CERT_EXPIRED
            /// </summary>
            [EnumMember(Value = "PERMIT_CHECK_PERM_AML_CERT_EXPIRED")]
            PERMITCHECKPERMAMLCERTEXPIRED = 86,

            /// <summary>
            /// Enum MRCHPRODQUERYERROR for value: MRCHPROD_QUERY_ERROR
            /// </summary>
            [EnumMember(Value = "MRCHPROD_QUERY_ERROR")]
            MRCHPRODQUERYERROR = 87,

            /// <summary>
            /// Enum PERMITPAYERFORBIDDEN for value: PERMIT_PAYER_FORBIDDEN
            /// </summary>
            [EnumMember(Value = "PERMIT_PAYER_FORBIDDEN")]
            PERMITPAYERFORBIDDEN = 88,

            /// <summary>
            /// Enum IDENTITYFUNDRELATIONNOTFOUND for value: IDENTITY_FUND_RELATION_NOT_FOUND
            /// </summary>
            [EnumMember(Value = "IDENTITY_FUND_RELATION_NOT_FOUND")]
            IDENTITYFUNDRELATIONNOTFOUND = 89,

            /// <summary>
            /// Enum INSTPAYREMARKUNVALIDCHARS for value: INST_PAY_REMARK_UNVALID_CHARS
            /// </summary>
            [EnumMember(Value = "INST_PAY_REMARK_UNVALID_CHARS")]
            INSTPAYREMARKUNVALIDCHARS = 90,

            /// <summary>
            /// Enum PERMITLIMITPAYEE for value: PERMIT_LIMIT_PAYEE
            /// </summary>
            [EnumMember(Value = "PERMIT_LIMIT_PAYEE")]
            PERMITLIMITPAYEE = 91,

            /// <summary>
            /// Enum INVALIDTAXBILLAGREEMENT for value: INVALID_TAX_BILL_AGREEMENT
            /// </summary>
            [EnumMember(Value = "INVALID_TAX_BILL_AGREEMENT")]
            INVALIDTAXBILLAGREEMENT = 92,

            /// <summary>
            /// Enum PAYSALARYMODENOTSUPPORT for value: PAY_SALARY_MODE_NOT_SUPPORT
            /// </summary>
            [EnumMember(Value = "PAY_SALARY_MODE_NOT_SUPPORT")]
            PAYSALARYMODENOTSUPPORT = 93,

            /// <summary>
            /// Enum CONTRACTORACCOUNTBOOKNOTFUND for value: CONTRACTOR_ACCOUNT_BOOK_NOT_FUND
            /// </summary>
            [EnumMember(Value = "CONTRACTOR_ACCOUNT_BOOK_NOT_FUND")]
            CONTRACTORACCOUNTBOOKNOTFUND = 94,

            /// <summary>
            /// Enum BANKCODEORBRANCHNAMEINFOERROR for value: BANKCODE_OR_BRANCHNAME_INFO_ERROR
            /// </summary>
            [EnumMember(Value = "BANKCODE_OR_BRANCHNAME_INFO_ERROR")]
            BANKCODEORBRANCHNAMEINFOERROR = 95,

            /// <summary>
            /// Enum PAYEEOUTPERMLIMITCHECKFAILURE for value: PAYEE_OUT_PERMLIMIT_CHECK_FAILURE
            /// </summary>
            [EnumMember(Value = "PAYEE_OUT_PERMLIMIT_CHECK_FAILURE")]
            PAYEEOUTPERMLIMITCHECKFAILURE = 96,

            /// <summary>
            /// Enum MIDACCOUNTSTATUSERROR for value: MID_ACCOUNT_STATUS_ERROR
            /// </summary>
            [EnumMember(Value = "MID_ACCOUNT_STATUS_ERROR")]
            MIDACCOUNTSTATUSERROR = 97,

            /// <summary>
            /// Enum MIDACCOUNTTYPEERROR for value: MID_ACCOUNT_TYPE_ERROR
            /// </summary>
            [EnumMember(Value = "MID_ACCOUNT_TYPE_ERROR")]
            MIDACCOUNTTYPEERROR = 98,

            /// <summary>
            /// Enum PAYEEMIDCANNOTSAME for value: PAYEE_MID_CANNOT_SAME
            /// </summary>
            [EnumMember(Value = "PAYEE_MID_CANNOT_SAME")]
            PAYEEMIDCANNOTSAME = 99,

            /// <summary>
            /// Enum PAYERMIDCANNOTSAME for value: PAYER_MID_CANNOT_SAME
            /// </summary>
            [EnumMember(Value = "PAYER_MID_CANNOT_SAME")]
            PAYERMIDCANNOTSAME = 100,

            /// <summary>
            /// Enum MIDACCOUNTCHECKERROR for value: MID_ACCOUNT_CHECK_ERROR
            /// </summary>
            [EnumMember(Value = "MID_ACCOUNT_CHECK_ERROR")]
            MIDACCOUNTCHECKERROR = 101,

            /// <summary>
            /// Enum PERMPAYUSERDAILYQUOTAORGBALANCELIMIT for value: PERM_PAY_USER_DAILY_QUOTA_ORG_BALANCE_LIMIT
            /// </summary>
            [EnumMember(Value = "PERM_PAY_USER_DAILY_QUOTA_ORG_BALANCE_LIMIT")]
            PERMPAYUSERDAILYQUOTAORGBALANCELIMIT = 102,

            /// <summary>
            /// Enum PERMPAYUSERMONTHQUOTAORGBALANCELIMIT for value: PERM_PAY_USER_MONTH_QUOTA_ORG_BALANCE_LIMIT
            /// </summary>
            [EnumMember(Value = "PERM_PAY_USER_MONTH_QUOTA_ORG_BALANCE_LIMIT")]
            PERMPAYUSERMONTHQUOTAORGBALANCELIMIT = 103,

            /// <summary>
            /// Enum PERMPAYCUSTOMERDAILYQUOTAORGBALANCELIMIT for value: PERM_PAY_CUSTOMER_DAILY_QUOTA_ORG_BALANCE_LIMIT
            /// </summary>
            [EnumMember(Value = "PERM_PAY_CUSTOMER_DAILY_QUOTA_ORG_BALANCE_LIMIT")]
            PERMPAYCUSTOMERDAILYQUOTAORGBALANCELIMIT = 104,

            /// <summary>
            /// Enum PERMPAYCUSTOMERMONTHQUOTAORGBALANCELIMIT for value: PERM_PAY_CUSTOMER_MONTH_QUOTA_ORG_BALANCE_LIMIT
            /// </summary>
            [EnumMember(Value = "PERM_PAY_CUSTOMER_MONTH_QUOTA_ORG_BALANCE_LIMIT")]
            PERMPAYCUSTOMERMONTHQUOTAORGBALANCELIMIT = 105,

            /// <summary>
            /// Enum NOTSUPPORTPAYERACCOUNTTYPE for value: NOT_SUPPORT_PAYER_ACCOUNT_TYPE
            /// </summary>
            [EnumMember(Value = "NOT_SUPPORT_PAYER_ACCOUNT_TYPE")]
            NOTSUPPORTPAYERACCOUNTTYPE = 106,

            /// <summary>
            /// Enum EXCEEDLIMITMMMAXAMOUNT for value: EXCEED_LIMIT_MM_MAX_AMOUNT
            /// </summary>
            [EnumMember(Value = "EXCEED_LIMIT_MM_MAX_AMOUNT")]
            EXCEEDLIMITMMMAXAMOUNT = 107,

            /// <summary>
            /// Enum REPINCONSISTENT for value: REP_INCONSISTENT
            /// </summary>
            [EnumMember(Value = "REP_INCONSISTENT")]
            REPINCONSISTENT = 108,

            /// <summary>
            /// Enum ILLEGALOPERATION for value: ILLEGAL_OPERATION
            /// </summary>
            [EnumMember(Value = "ILLEGAL_OPERATION")]
            ILLEGALOPERATION = 109,

            /// <summary>
            /// Enum PERMRECEIVECUSTOMERALMSLIMIT for value: PERM_RECEIVE_CUSTOMER_ALMS_LIMIT
            /// </summary>
            [EnumMember(Value = "PERM_RECEIVE_CUSTOMER_ALMS_LIMIT")]
            PERMRECEIVECUSTOMERALMSLIMIT = 110,

            /// <summary>
            /// Enum PAYEEIDENTITYNOTMATCH for value: PAYEE_IDENTITY_NOT_MATCH
            /// </summary>
            [EnumMember(Value = "PAYEE_IDENTITY_NOT_MATCH")]
            PAYEEIDENTITYNOTMATCH = 111,

            /// <summary>
            /// Enum FLEXIBLESTAFFINGRISKCONSULTUNSIGNEDMERCHANT for value: FLEXIBLE_STAFFING_RISK_CONSULT_UNSIGNED_MERCHANT
            /// </summary>
            [EnumMember(Value = "FLEXIBLE_STAFFING_RISK_CONSULT_UNSIGNED_MERCHANT")]
            FLEXIBLESTAFFINGRISKCONSULTUNSIGNEDMERCHANT = 112,

            /// <summary>
            /// Enum FLEXIBLESTAFFINGRISKCONSULTUNAUTHORIZEDCONSULT for value: FLEXIBLE_STAFFING_RISK_CONSULT_UNAUTHORIZED_CONSULT
            /// </summary>
            [EnumMember(Value = "FLEXIBLE_STAFFING_RISK_CONSULT_UNAUTHORIZED_CONSULT")]
            FLEXIBLESTAFFINGRISKCONSULTUNAUTHORIZEDCONSULT = 113,

            /// <summary>
            /// Enum FLEXIBLESTAFFINGRISKCONSULTUSERNOTEXIST for value: FLEXIBLE_STAFFING_RISK_CONSULT_USER_NOT_EXIST
            /// </summary>
            [EnumMember(Value = "FLEXIBLE_STAFFING_RISK_CONSULT_USER_NOT_EXIST")]
            FLEXIBLESTAFFINGRISKCONSULTUSERNOTEXIST = 114,

            /// <summary>
            /// Enum FLEXIBLESTAFFINGRISKCONSULTRISKRECEIVER for value: FLEXIBLE_STAFFING_RISK_CONSULT_RISK_RECEIVER
            /// </summary>
            [EnumMember(Value = "FLEXIBLE_STAFFING_RISK_CONSULT_RISK_RECEIVER")]
            FLEXIBLESTAFFINGRISKCONSULTRISKRECEIVER = 115,

            /// <summary>
            /// Enum PAYEEUSERINFOERROR for value: PAYEE_USERINFO_ERROR
            /// </summary>
            [EnumMember(Value = "PAYEE_USERINFO_ERROR")]
            PAYEEUSERINFOERROR = 116,

            /// <summary>
            /// Enum FLEXIBLESTAFFINGHIGHRISKRECEIVER for value: FLEXIBLE_STAFFING_HIGH_RISK_RECEIVER
            /// </summary>
            [EnumMember(Value = "FLEXIBLE_STAFFING_HIGH_RISK_RECEIVER")]
            FLEXIBLESTAFFINGHIGHRISKRECEIVER = 117,

            /// <summary>
            /// Enum FLEXIBLESTAFFINGPOTENTIALRISKRECEIVER for value: FLEXIBLE_STAFFING_POTENTIAL_RISK_RECEIVER
            /// </summary>
            [EnumMember(Value = "FLEXIBLE_STAFFING_POTENTIAL_RISK_RECEIVER")]
            FLEXIBLESTAFFINGPOTENTIALRISKRECEIVER = 118,

            /// <summary>
            /// Enum PAYERACCOUNTBOOKINFOEXCEPTION for value: PAYER_ACCOUNT_BOOK_INFO_EXCEPTION
            /// </summary>
            [EnumMember(Value = "PAYER_ACCOUNT_BOOK_INFO_EXCEPTION")]
            PAYERACCOUNTBOOKINFOEXCEPTION = 119,

            /// <summary>
            /// Enum RECEIVERACCOUNTBOOKINFOEXCEPTION for value: RECEIVER_ACCOUNT_BOOK_INFO_EXCEPTION
            /// </summary>
            [EnumMember(Value = "RECEIVER_ACCOUNT_BOOK_INFO_EXCEPTION")]
            RECEIVERACCOUNTBOOKINFOEXCEPTION = 120,

            /// <summary>
            /// Enum ACCOUNTBOOKSCENECODEEXCEPTION for value: ACCOUNT_BOOK_SCENE_CODE_EXCEPTION
            /// </summary>
            [EnumMember(Value = "ACCOUNT_BOOK_SCENE_CODE_EXCEPTION")]
            ACCOUNTBOOKSCENECODEEXCEPTION = 121,

            /// <summary>
            /// Enum TRUSTEESHIPACCOUNTSTATUSERROR for value: TRUSTEESHIP_ACCOUNT_STATUS_ERROR
            /// </summary>
            [EnumMember(Value = "TRUSTEESHIP_ACCOUNT_STATUS_ERROR")]
            TRUSTEESHIPACCOUNTSTATUSERROR = 122,

            /// <summary>
            /// Enum PAYERNOTEQUALPAYEEFORBIZSCENEREQUIRED for value: PAYER_NOT_EQUAL_PAYEE_FOR_BIZ_SCENE_REQUIRED
            /// </summary>
            [EnumMember(Value = "PAYER_NOT_EQUAL_PAYEE_FOR_BIZ_SCENE_REQUIRED")]
            PAYERNOTEQUALPAYEEFORBIZSCENEREQUIRED = 123,

            /// <summary>
            /// Enum PERMITPAYERLEVELFORBIDDEN for value: PERMIT_PAYER_LEVEL_FORBIDDEN
            /// </summary>
            [EnumMember(Value = "PERMIT_PAYER_LEVEL_FORBIDDEN")]
            PERMITPAYERLEVELFORBIDDEN = 124,

            /// <summary>
            /// Enum FLEXIBLESTAFFINGUNKNOWNRISKRECEIVER for value: FLEXIBLE_STAFFING_UN_KNOWN_RISK_RECEIVER
            /// </summary>
            [EnumMember(Value = "FLEXIBLE_STAFFING_UN_KNOWN_RISK_RECEIVER")]
            FLEXIBLESTAFFINGUNKNOWNRISKRECEIVER = 125,

            /// <summary>
            /// Enum JUDICIALFREEZE for value: JUDICIAL_FREEZE
            /// </summary>
            [EnumMember(Value = "JUDICIAL_FREEZE")]
            JUDICIALFREEZE = 126,

            /// <summary>
            /// Enum TRANSAMOUNTNOTINPRIZELIMIT for value: TRANS_AMOUNT_NOT_IN_PRIZE_LIMIT
            /// </summary>
            [EnumMember(Value = "TRANS_AMOUNT_NOT_IN_PRIZE_LIMIT")]
            TRANSAMOUNTNOTINPRIZELIMIT = 127,

            /// <summary>
            /// Enum PROMOCAMPRELATIONCONFIGMISSED for value: PROMO_CAMP_RELATION_CONFIG_MISSED
            /// </summary>
            [EnumMember(Value = "PROMO_CAMP_RELATION_CONFIG_MISSED")]
            PROMOCAMPRELATIONCONFIGMISSED = 128,

            /// <summary>
            /// Enum PAYEERECEIVECOUNTEXCEEDLIMIT for value: PAYEE_RECEIVE_COUNT_EXCEED_LIMIT
            /// </summary>
            [EnumMember(Value = "PAYEE_RECEIVE_COUNT_EXCEED_LIMIT")]
            PAYEERECEIVECOUNTEXCEEDLIMIT = 129,

            /// <summary>
            /// Enum PROMOTRANSORDERDEALING for value: PROMO_TRANS_ORDER_DEALING
            /// </summary>
            [EnumMember(Value = "PROMO_TRANS_ORDER_DEALING")]
            PROMOTRANSORDERDEALING = 130,

            /// <summary>
            /// Enum FUNDPROTITOPNNOTMATCH for value: FUND_PROTITOPN_NOT_MATCH
            /// </summary>
            [EnumMember(Value = "FUND_PROTITOPN_NOT_MATCH")]
            FUNDPROTITOPNNOTMATCH = 131,

            /// <summary>
            /// Enum FUNDWALLETINSTNOTEXIST for value: FUND_WALLET_INST_NOT_EXIST
            /// </summary>
            [EnumMember(Value = "FUND_WALLET_INST_NOT_EXIST")]
            FUNDWALLETINSTNOTEXIST = 132,

            /// <summary>
            /// Enum FUNDWALLETUNAVAILABLE for value: FUND_WALLET_UNAVAILABLE
            /// </summary>
            [EnumMember(Value = "FUND_WALLET_UNAVAILABLE")]
            FUNDWALLETUNAVAILABLE = 133,

            /// <summary>
            /// Enum PARTITIONFORMATERROR for value: PARTITION_FORMAT_ERROR
            /// </summary>
            [EnumMember(Value = "PARTITION_FORMAT_ERROR")]
            PARTITIONFORMATERROR = 134,

            /// <summary>
            /// Enum CURREBTAFTERINVALIDTIME for value: CURREBT_AFTER_INVALID_TIME
            /// </summary>
            [EnumMember(Value = "CURREBT_AFTER_INVALID_TIME")]
            CURREBTAFTERINVALIDTIME = 135,

            /// <summary>
            /// Enum UNAUTHORIZEDCONSULT for value: UNAUTHORIZED_CONSULT
            /// </summary>
            [EnumMember(Value = "UNAUTHORIZED_CONSULT")]
            UNAUTHORIZEDCONSULT = 136,

            /// <summary>
            /// Enum TAXBILLAGREEMENTMISS for value: TAX_BILL_AGREEMENT_MISS
            /// </summary>
            [EnumMember(Value = "TAX_BILL_AGREEMENT_MISS")]
            TAXBILLAGREEMENTMISS = 137,

            /// <summary>
            /// Enum FORBIDOPERATIONUSERWALLET for value: FORBID_OPERATION_USER_WALLET
            /// </summary>
            [EnumMember(Value = "FORBID_OPERATION_USER_WALLET")]
            FORBIDOPERATIONUSERWALLET = 138,

            /// <summary>
            /// Enum USERRISKFREEZE for value: USER_RISK_FREEZE
            /// </summary>
            [EnumMember(Value = "USER_RISK_FREEZE")]
            USERRISKFREEZE = 139,

            /// <summary>
            /// Enum BALANCENOTENOUGHFORCARDFEE for value: BALANCE_NOT_ENOUGH_FOR_CARD_FEE
            /// </summary>
            [EnumMember(Value = "BALANCE_NOT_ENOUGH_FOR_CARD_FEE")]
            BALANCENOTENOUGHFORCARDFEE = 140,

            /// <summary>
            /// Enum TRANSORDERDEALING for value: TRANS_ORDER_DEALING
            /// </summary>
            [EnumMember(Value = "TRANS_ORDER_DEALING")]
            TRANSORDERDEALING = 141,

            /// <summary>
            /// Enum PAYEEUSERISINST for value: PAYEE_USER_IS_INST
            /// </summary>
            [EnumMember(Value = "PAYEE_USER_IS_INST")]
            PAYEEUSERISINST = 142,

            /// <summary>
            /// Enum PAYERNOTRELNAMECERTIFY for value: PAYER_NOT_RELNAME_CERTIFY
            /// </summary>
            [EnumMember(Value = "PAYER_NOT_RELNAME_CERTIFY")]
            PAYERNOTRELNAMECERTIFY = 143,

            /// <summary>
            /// Enum BALANCENOTENOUGH for value: BALANCE_NOT_ENOUGH
            /// </summary>
            [EnumMember(Value = "BALANCE_NOT_ENOUGH")]
            BALANCENOTENOUGH = 144,

            /// <summary>
            /// Enum EMPLOYEESERVICENOTEXIST for value: EMPLOYEE_SERVICE_NOT_EXIST
            /// </summary>
            [EnumMember(Value = "EMPLOYEE_SERVICE_NOT_EXIST")]
            EMPLOYEESERVICENOTEXIST = 145,

            /// <summary>
            /// Enum UNSUPPORTEMPLOYEESERVICE for value: UN_SUPPORT_EMPLOYEE_SERVICE
            /// </summary>
            [EnumMember(Value = "UN_SUPPORT_EMPLOYEE_SERVICE")]
            UNSUPPORTEMPLOYEESERVICE = 146,

            /// <summary>
            /// Enum PERMAMLNOTREALNAMEPAY for value: PERM_AML_NOT_REALNAME_PAY
            /// </summary>
            [EnumMember(Value = "PERM_AML_NOT_REALNAME_PAY")]
            PERMAMLNOTREALNAMEPAY = 147,

            /// <summary>
            /// Enum CONFIGURATIONERROR for value: CONFIGURATION_ERROR
            /// </summary>
            [EnumMember(Value = "CONFIGURATION_ERROR")]
            CONFIGURATIONERROR = 148,

            /// <summary>
            /// Enum ILLEGALREQUESTUSERID for value: ILLEGAL_REQUEST_USER_ID
            /// </summary>
            [EnumMember(Value = "ILLEGAL_REQUEST_USER_ID")]
            ILLEGALREQUESTUSERID = 149,

            /// <summary>
            /// Enum PARAMETERERROR for value: PARAMETER_ERROR
            /// </summary>
            [EnumMember(Value = "PARAMETER_ERROR")]
            PARAMETERERROR = 150,

            /// <summary>
            /// Enum PERMITCHECKPERMAMLCERTMISSACCLIMIT for value: PERMIT_CHECK_PERM_AML_CERT_MISS_ACC_LIMIT
            /// </summary>
            [EnumMember(Value = "PERMIT_CHECK_PERM_AML_CERT_MISS_ACC_LIMIT")]
            PERMITCHECKPERMAMLCERTMISSACCLIMIT = 151,

            /// <summary>
            /// Enum RECEIVERUSERRISKFREEZE for value: RECEIVER_USER_RISK_FREEZE
            /// </summary>
            [EnumMember(Value = "RECEIVER_USER_RISK_FREEZE")]
            RECEIVERUSERRISKFREEZE = 152,

            /// <summary>
            /// Enum PAYERPAYEEACCOUNTNAMECANNOTSAME for value: PAYER_PAYEE_ACCOUNT_NAME_CAN_NOT_SAME
            /// </summary>
            [EnumMember(Value = "PAYER_PAYEE_ACCOUNT_NAME_CAN_NOT_SAME")]
            PAYERPAYEEACCOUNTNAMECANNOTSAME = 153,

            /// <summary>
            /// Enum PAYEECERTINFOERROR for value: PAYEE_CERT_INFO_ERROR
            /// </summary>
            [EnumMember(Value = "PAYEE_CERT_INFO_ERROR")]
            PAYEECERTINFOERROR = 154,

            /// <summary>
            /// Enum ACCOUNTINNOTEXIST for value: ACCOUNT_IN_NOT_EXIST
            /// </summary>
            [EnumMember(Value = "ACCOUNT_IN_NOT_EXIST")]
            ACCOUNTINNOTEXIST = 155,

            /// <summary>
            /// Enum GLOBALUSERFORBBIDENRECIEVE for value: GLOBAL_USER_FORBBIDEN_RECIEVE
            /// </summary>
            [EnumMember(Value = "GLOBAL_USER_FORBBIDEN_RECIEVE")]
            GLOBALUSERFORBBIDENRECIEVE = 156,

            /// <summary>
            /// Enum ACCOUNTOPERATIONLIMIT for value: ACCOUNT_OPERATION_LIMIT
            /// </summary>
            [EnumMember(Value = "ACCOUNT_OPERATION_LIMIT")]
            ACCOUNTOPERATIONLIMIT = 157,

            /// <summary>
            /// Enum PAYERUNABLEPAYMENT for value: PAYER_UNABLE_PAYMENT
            /// </summary>
            [EnumMember(Value = "PAYER_UNABLE_PAYMENT")]
            PAYERUNABLEPAYMENT = 158,

            /// <summary>
            /// Enum EXCEEDLIMITINTERNALSMAMOUNT for value: EXCEED_LIMIT_INTERNAL_SM_AMOUNT
            /// </summary>
            [EnumMember(Value = "EXCEED_LIMIT_INTERNAL_SM_AMOUNT")]
            EXCEEDLIMITINTERNALSMAMOUNT = 159,

            /// <summary>
            /// Enum ILLEGALSTATUSEXCEPTION for value: ILLEGAL_STATUS_EXCEPTION
            /// </summary>
            [EnumMember(Value = "ILLEGAL_STATUS_EXCEPTION")]
            ILLEGALSTATUSEXCEPTION = 160

        }


        /// <summary>
        /// 错误码
        /// </summary>
        /// <value>错误码</value>
        [DataMember(Name = "code", EmitDefaultValue = false)]
        public CodeEnum Code { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="AlipayFundTransUniTransferErrorResponseModel" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected AlipayFundTransUniTransferErrorResponseModel() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="AlipayFundTransUniTransferErrorResponseModel" /> class.
        /// </summary>
        /// <param name="code">错误码 (required).</param>
        /// <param name="links">解决方案链接.</param>
        /// <param name="message">错误描述 (required).</param>
        public AlipayFundTransUniTransferErrorResponseModel(CodeEnum code = default(CodeEnum), string links = default(string), string message = default(string))
        {
            this.Code = code;
            // to ensure "message" is required (not null)
            // if (message == null)
            // {
            //     throw new ArgumentNullException("message is a required property for AlipayFundTransUniTransferErrorResponseModel and cannot be null");
            // }
            this.Message = message;
            this.Links = links;
        }

        /// <summary>
        /// 解决方案链接
        /// </summary>
        /// <value>解决方案链接</value>
        [DataMember(Name = "links", EmitDefaultValue = false)]
        public string Links { get; set; }

        /// <summary>
        /// 错误描述
        /// </summary>
        /// <value>错误描述</value>
        [DataMember(Name = "message", EmitDefaultValue = false)]
        public string Message { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class AlipayFundTransUniTransferErrorResponseModel {\n");
            sb.Append("  Code: ").Append(Code).Append("\n");
            sb.Append("  Links: ").Append(Links).Append("\n");
            sb.Append("  Message: ").Append(Message).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as AlipayFundTransUniTransferErrorResponseModel);
        }

        /// <summary>
        /// Returns true if AlipayFundTransUniTransferErrorResponseModel instances are equal
        /// </summary>
        /// <param name="input">Instance of AlipayFundTransUniTransferErrorResponseModel to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AlipayFundTransUniTransferErrorResponseModel input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.Code == input.Code ||
                    this.Code.Equals(input.Code)
                ) && 
                (
                    this.Links == input.Links ||
                    (this.Links != null &&
                    this.Links.Equals(input.Links))
                ) && 
                (
                    this.Message == input.Message ||
                    (this.Message != null &&
                    this.Message.Equals(input.Message))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                hashCode = (hashCode * 59) + this.Code.GetHashCode();
                if (this.Links != null)
                {
                    hashCode = (hashCode * 59) + this.Links.GetHashCode();
                }
                if (this.Message != null)
                {
                    hashCode = (hashCode * 59) + this.Message.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
