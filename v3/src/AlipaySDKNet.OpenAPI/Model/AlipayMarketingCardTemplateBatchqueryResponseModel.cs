/*
 * 支付宝开放平台API
 *
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2025-02-19
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = AlipaySDKNet.OpenAPI.Client.OpenAPIDateConverter;

namespace AlipaySDKNet.OpenAPI.Model
{
    /// <summary>
    /// AlipayMarketingCardTemplateBatchqueryResponseModel
    /// </summary>
    [DataContract(Name = "AlipayMarketingCardTemplateBatchqueryResponseModel")]
    public partial class AlipayMarketingCardTemplateBatchqueryResponseModel : IEquatable<AlipayMarketingCardTemplateBatchqueryResponseModel>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AlipayMarketingCardTemplateBatchqueryResponseModel" /> class.
        /// </summary>
        /// <param name="mcardTemplate">会员卡模板基本信息.</param>
        /// <param name="templateTotal">会员卡模板总数,如10个卡模版，单位：/个.</param>
        public AlipayMarketingCardTemplateBatchqueryResponseModel(List<McardTemplate> mcardTemplate = default(List<McardTemplate>), int templateTotal = default(int))
        {
            this.McardTemplate = mcardTemplate;
            this.TemplateTotal = templateTotal;
        }

        /// <summary>
        /// 会员卡模板基本信息
        /// </summary>
        /// <value>会员卡模板基本信息</value>
        [DataMember(Name = "mcard_template", EmitDefaultValue = false)]
        public List<McardTemplate> McardTemplate { get; set; }

        /// <summary>
        /// 会员卡模板总数,如10个卡模版，单位：/个
        /// </summary>
        /// <value>会员卡模板总数,如10个卡模版，单位：/个</value>
        [DataMember(Name = "template_total", EmitDefaultValue = false)]
        public int TemplateTotal { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class AlipayMarketingCardTemplateBatchqueryResponseModel {\n");
            sb.Append("  McardTemplate: ").Append(McardTemplate).Append("\n");
            sb.Append("  TemplateTotal: ").Append(TemplateTotal).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as AlipayMarketingCardTemplateBatchqueryResponseModel);
        }

        /// <summary>
        /// Returns true if AlipayMarketingCardTemplateBatchqueryResponseModel instances are equal
        /// </summary>
        /// <param name="input">Instance of AlipayMarketingCardTemplateBatchqueryResponseModel to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AlipayMarketingCardTemplateBatchqueryResponseModel input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.McardTemplate == input.McardTemplate ||
                    this.McardTemplate != null &&
                    input.McardTemplate != null &&
                    this.McardTemplate.SequenceEqual(input.McardTemplate)
                ) && 
                (
                    this.TemplateTotal == input.TemplateTotal ||
                    this.TemplateTotal.Equals(input.TemplateTotal)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.McardTemplate != null)
                {
                    hashCode = (hashCode * 59) + this.McardTemplate.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.TemplateTotal.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
