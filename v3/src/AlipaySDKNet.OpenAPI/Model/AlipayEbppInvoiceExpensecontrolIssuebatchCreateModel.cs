/*
 * 支付宝开放平台API
 *
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2025-02-19
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = AlipaySDKNet.OpenAPI.Client.OpenAPIDateConverter;

namespace AlipaySDKNet.OpenAPI.Model
{
    /// <summary>
    /// AlipayEbppInvoiceExpensecontrolIssuebatchCreateModel
    /// </summary>
    [DataContract(Name = "AlipayEbppInvoiceExpensecontrolIssuebatchCreateModel")]
    public partial class AlipayEbppInvoiceExpensecontrolIssuebatchCreateModel : IEquatable<AlipayEbppInvoiceExpensecontrolIssuebatchCreateModel>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AlipayEbppInvoiceExpensecontrolIssuebatchCreateModel" /> class.
        /// </summary>
        /// <param name="accountId">共同账户id（该字段将废弃，不建议使用，可用enterprise_id字段替换）(该字段将废弃，不建议使用，可用enterprise_id字段替换).</param>
        /// <param name="agreementNo">授权签约协议号（该字段将废弃，不建议使用，可用enterprise_id字段替换）(该字段将废弃，不建议使用，可用enterprise_id字段替换).</param>
        /// <param name="batchNo">发放批次号，用于幂等校验本次发放.</param>
        /// <param name="effectiveEndDate">额度有效结束时间.</param>
        /// <param name="effectiveStartDate">额度有效起始时间.</param>
        /// <param name="enterpriseId">企业ID.</param>
        /// <param name="institutionId">制度id.</param>
        /// <param name="issueDesc">发放说明.</param>
        /// <param name="issueName">发放名称.</param>
        /// <param name="issueTargetInfoList">员工发放信息列表.</param>
        /// <param name="quotaType">额度类型.</param>
        /// <param name="shareMode">是否可转赠.</param>
        public AlipayEbppInvoiceExpensecontrolIssuebatchCreateModel(string accountId = default(string), string agreementNo = default(string), string batchNo = default(string), string effectiveEndDate = default(string), string effectiveStartDate = default(string), string enterpriseId = default(string), string institutionId = default(string), string issueDesc = default(string), string issueName = default(string), List<IssueTargetInfoContent> issueTargetInfoList = default(List<IssueTargetInfoContent>), string quotaType = default(string), string shareMode = default(string))
        {
            this.AccountId = accountId;
            this.AgreementNo = agreementNo;
            this.BatchNo = batchNo;
            this.EffectiveEndDate = effectiveEndDate;
            this.EffectiveStartDate = effectiveStartDate;
            this.EnterpriseId = enterpriseId;
            this.InstitutionId = institutionId;
            this.IssueDesc = issueDesc;
            this.IssueName = issueName;
            this.IssueTargetInfoList = issueTargetInfoList;
            this.QuotaType = quotaType;
            this.ShareMode = shareMode;
        }

        /// <summary>
        /// 共同账户id（该字段将废弃，不建议使用，可用enterprise_id字段替换）(该字段将废弃，不建议使用，可用enterprise_id字段替换)
        /// </summary>
        /// <value>共同账户id（该字段将废弃，不建议使用，可用enterprise_id字段替换）(该字段将废弃，不建议使用，可用enterprise_id字段替换)</value>
        [DataMember(Name = "account_id", EmitDefaultValue = false)]
        [Obsolete]
        public string AccountId { get; set; }

        /// <summary>
        /// 授权签约协议号（该字段将废弃，不建议使用，可用enterprise_id字段替换）(该字段将废弃，不建议使用，可用enterprise_id字段替换)
        /// </summary>
        /// <value>授权签约协议号（该字段将废弃，不建议使用，可用enterprise_id字段替换）(该字段将废弃，不建议使用，可用enterprise_id字段替换)</value>
        [DataMember(Name = "agreement_no", EmitDefaultValue = false)]
        [Obsolete]
        public string AgreementNo { get; set; }

        /// <summary>
        /// 发放批次号，用于幂等校验本次发放
        /// </summary>
        /// <value>发放批次号，用于幂等校验本次发放</value>
        [DataMember(Name = "batch_no", EmitDefaultValue = false)]
        public string BatchNo { get; set; }

        /// <summary>
        /// 额度有效结束时间
        /// </summary>
        /// <value>额度有效结束时间</value>
        [DataMember(Name = "effective_end_date", EmitDefaultValue = false)]
        public string EffectiveEndDate { get; set; }

        /// <summary>
        /// 额度有效起始时间
        /// </summary>
        /// <value>额度有效起始时间</value>
        [DataMember(Name = "effective_start_date", EmitDefaultValue = false)]
        public string EffectiveStartDate { get; set; }

        /// <summary>
        /// 企业ID
        /// </summary>
        /// <value>企业ID</value>
        [DataMember(Name = "enterprise_id", EmitDefaultValue = false)]
        public string EnterpriseId { get; set; }

        /// <summary>
        /// 制度id
        /// </summary>
        /// <value>制度id</value>
        [DataMember(Name = "institution_id", EmitDefaultValue = false)]
        public string InstitutionId { get; set; }

        /// <summary>
        /// 发放说明
        /// </summary>
        /// <value>发放说明</value>
        [DataMember(Name = "issue_desc", EmitDefaultValue = false)]
        public string IssueDesc { get; set; }

        /// <summary>
        /// 发放名称
        /// </summary>
        /// <value>发放名称</value>
        [DataMember(Name = "issue_name", EmitDefaultValue = false)]
        public string IssueName { get; set; }

        /// <summary>
        /// 员工发放信息列表
        /// </summary>
        /// <value>员工发放信息列表</value>
        [DataMember(Name = "issue_target_info_list", EmitDefaultValue = false)]
        public List<IssueTargetInfoContent> IssueTargetInfoList { get; set; }

        /// <summary>
        /// 额度类型
        /// </summary>
        /// <value>额度类型</value>
        [DataMember(Name = "quota_type", EmitDefaultValue = false)]
        public string QuotaType { get; set; }

        /// <summary>
        /// 是否可转赠
        /// </summary>
        /// <value>是否可转赠</value>
        [DataMember(Name = "share_mode", EmitDefaultValue = false)]
        public string ShareMode { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class AlipayEbppInvoiceExpensecontrolIssuebatchCreateModel {\n");
            sb.Append("  AccountId: ").Append(AccountId).Append("\n");
            sb.Append("  AgreementNo: ").Append(AgreementNo).Append("\n");
            sb.Append("  BatchNo: ").Append(BatchNo).Append("\n");
            sb.Append("  EffectiveEndDate: ").Append(EffectiveEndDate).Append("\n");
            sb.Append("  EffectiveStartDate: ").Append(EffectiveStartDate).Append("\n");
            sb.Append("  EnterpriseId: ").Append(EnterpriseId).Append("\n");
            sb.Append("  InstitutionId: ").Append(InstitutionId).Append("\n");
            sb.Append("  IssueDesc: ").Append(IssueDesc).Append("\n");
            sb.Append("  IssueName: ").Append(IssueName).Append("\n");
            sb.Append("  IssueTargetInfoList: ").Append(IssueTargetInfoList).Append("\n");
            sb.Append("  QuotaType: ").Append(QuotaType).Append("\n");
            sb.Append("  ShareMode: ").Append(ShareMode).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as AlipayEbppInvoiceExpensecontrolIssuebatchCreateModel);
        }

        /// <summary>
        /// Returns true if AlipayEbppInvoiceExpensecontrolIssuebatchCreateModel instances are equal
        /// </summary>
        /// <param name="input">Instance of AlipayEbppInvoiceExpensecontrolIssuebatchCreateModel to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AlipayEbppInvoiceExpensecontrolIssuebatchCreateModel input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.AccountId == input.AccountId ||
                    (this.AccountId != null &&
                    this.AccountId.Equals(input.AccountId))
                ) && 
                (
                    this.AgreementNo == input.AgreementNo ||
                    (this.AgreementNo != null &&
                    this.AgreementNo.Equals(input.AgreementNo))
                ) && 
                (
                    this.BatchNo == input.BatchNo ||
                    (this.BatchNo != null &&
                    this.BatchNo.Equals(input.BatchNo))
                ) && 
                (
                    this.EffectiveEndDate == input.EffectiveEndDate ||
                    (this.EffectiveEndDate != null &&
                    this.EffectiveEndDate.Equals(input.EffectiveEndDate))
                ) && 
                (
                    this.EffectiveStartDate == input.EffectiveStartDate ||
                    (this.EffectiveStartDate != null &&
                    this.EffectiveStartDate.Equals(input.EffectiveStartDate))
                ) && 
                (
                    this.EnterpriseId == input.EnterpriseId ||
                    (this.EnterpriseId != null &&
                    this.EnterpriseId.Equals(input.EnterpriseId))
                ) && 
                (
                    this.InstitutionId == input.InstitutionId ||
                    (this.InstitutionId != null &&
                    this.InstitutionId.Equals(input.InstitutionId))
                ) && 
                (
                    this.IssueDesc == input.IssueDesc ||
                    (this.IssueDesc != null &&
                    this.IssueDesc.Equals(input.IssueDesc))
                ) && 
                (
                    this.IssueName == input.IssueName ||
                    (this.IssueName != null &&
                    this.IssueName.Equals(input.IssueName))
                ) && 
                (
                    this.IssueTargetInfoList == input.IssueTargetInfoList ||
                    this.IssueTargetInfoList != null &&
                    input.IssueTargetInfoList != null &&
                    this.IssueTargetInfoList.SequenceEqual(input.IssueTargetInfoList)
                ) && 
                (
                    this.QuotaType == input.QuotaType ||
                    (this.QuotaType != null &&
                    this.QuotaType.Equals(input.QuotaType))
                ) && 
                (
                    this.ShareMode == input.ShareMode ||
                    (this.ShareMode != null &&
                    this.ShareMode.Equals(input.ShareMode))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.AccountId != null)
                {
                    hashCode = (hashCode * 59) + this.AccountId.GetHashCode();
                }
                if (this.AgreementNo != null)
                {
                    hashCode = (hashCode * 59) + this.AgreementNo.GetHashCode();
                }
                if (this.BatchNo != null)
                {
                    hashCode = (hashCode * 59) + this.BatchNo.GetHashCode();
                }
                if (this.EffectiveEndDate != null)
                {
                    hashCode = (hashCode * 59) + this.EffectiveEndDate.GetHashCode();
                }
                if (this.EffectiveStartDate != null)
                {
                    hashCode = (hashCode * 59) + this.EffectiveStartDate.GetHashCode();
                }
                if (this.EnterpriseId != null)
                {
                    hashCode = (hashCode * 59) + this.EnterpriseId.GetHashCode();
                }
                if (this.InstitutionId != null)
                {
                    hashCode = (hashCode * 59) + this.InstitutionId.GetHashCode();
                }
                if (this.IssueDesc != null)
                {
                    hashCode = (hashCode * 59) + this.IssueDesc.GetHashCode();
                }
                if (this.IssueName != null)
                {
                    hashCode = (hashCode * 59) + this.IssueName.GetHashCode();
                }
                if (this.IssueTargetInfoList != null)
                {
                    hashCode = (hashCode * 59) + this.IssueTargetInfoList.GetHashCode();
                }
                if (this.QuotaType != null)
                {
                    hashCode = (hashCode * 59) + this.QuotaType.GetHashCode();
                }
                if (this.ShareMode != null)
                {
                    hashCode = (hashCode * 59) + this.ShareMode.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
