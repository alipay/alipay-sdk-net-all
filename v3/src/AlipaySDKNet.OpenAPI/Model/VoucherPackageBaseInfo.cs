/*
 * 支付宝开放平台API
 *
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2025-02-19
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = AlipaySDKNet.OpenAPI.Client.OpenAPIDateConverter;

namespace AlipaySDKNet.OpenAPI.Model
{
    /// <summary>
    /// VoucherPackageBaseInfo
    /// </summary>
    [DataContract(Name = "VoucherPackageBaseInfo")]
    public partial class VoucherPackageBaseInfo : IEquatable<VoucherPackageBaseInfo>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="VoucherPackageBaseInfo" /> class.
        /// </summary>
        /// <param name="purchaseEndTime">券包购买结束时间.</param>
        /// <param name="purchaseStartTime">券包购买开始时间.</param>
        /// <param name="voucherPackageId">券包id.</param>
        /// <param name="voucherPackageName">券包名称.</param>
        /// <param name="voucherPackageStatus">券包状态.</param>
        /// <param name="voucherTotalAmount">券包总价值（单位是元）： 券包下券的优惠总额（满减券指优惠面额，折扣券指优惠上限，特价券指原价减去特价）.</param>
        public VoucherPackageBaseInfo(string purchaseEndTime = default(string), string purchaseStartTime = default(string), string voucherPackageId = default(string), string voucherPackageName = default(string), string voucherPackageStatus = default(string), string voucherTotalAmount = default(string))
        {
            this.PurchaseEndTime = purchaseEndTime;
            this.PurchaseStartTime = purchaseStartTime;
            this.VoucherPackageId = voucherPackageId;
            this.VoucherPackageName = voucherPackageName;
            this.VoucherPackageStatus = voucherPackageStatus;
            this.VoucherTotalAmount = voucherTotalAmount;
        }

        /// <summary>
        /// 券包购买结束时间
        /// </summary>
        /// <value>券包购买结束时间</value>
        [DataMember(Name = "purchase_end_time", EmitDefaultValue = false)]
        public string PurchaseEndTime { get; set; }

        /// <summary>
        /// 券包购买开始时间
        /// </summary>
        /// <value>券包购买开始时间</value>
        [DataMember(Name = "purchase_start_time", EmitDefaultValue = false)]
        public string PurchaseStartTime { get; set; }

        /// <summary>
        /// 券包id
        /// </summary>
        /// <value>券包id</value>
        [DataMember(Name = "voucher_package_id", EmitDefaultValue = false)]
        public string VoucherPackageId { get; set; }

        /// <summary>
        /// 券包名称
        /// </summary>
        /// <value>券包名称</value>
        [DataMember(Name = "voucher_package_name", EmitDefaultValue = false)]
        public string VoucherPackageName { get; set; }

        /// <summary>
        /// 券包状态
        /// </summary>
        /// <value>券包状态</value>
        [DataMember(Name = "voucher_package_status", EmitDefaultValue = false)]
        public string VoucherPackageStatus { get; set; }

        /// <summary>
        /// 券包总价值（单位是元）： 券包下券的优惠总额（满减券指优惠面额，折扣券指优惠上限，特价券指原价减去特价）
        /// </summary>
        /// <value>券包总价值（单位是元）： 券包下券的优惠总额（满减券指优惠面额，折扣券指优惠上限，特价券指原价减去特价）</value>
        [DataMember(Name = "voucher_total_amount", EmitDefaultValue = false)]
        public string VoucherTotalAmount { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class VoucherPackageBaseInfo {\n");
            sb.Append("  PurchaseEndTime: ").Append(PurchaseEndTime).Append("\n");
            sb.Append("  PurchaseStartTime: ").Append(PurchaseStartTime).Append("\n");
            sb.Append("  VoucherPackageId: ").Append(VoucherPackageId).Append("\n");
            sb.Append("  VoucherPackageName: ").Append(VoucherPackageName).Append("\n");
            sb.Append("  VoucherPackageStatus: ").Append(VoucherPackageStatus).Append("\n");
            sb.Append("  VoucherTotalAmount: ").Append(VoucherTotalAmount).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as VoucherPackageBaseInfo);
        }

        /// <summary>
        /// Returns true if VoucherPackageBaseInfo instances are equal
        /// </summary>
        /// <param name="input">Instance of VoucherPackageBaseInfo to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(VoucherPackageBaseInfo input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.PurchaseEndTime == input.PurchaseEndTime ||
                    (this.PurchaseEndTime != null &&
                    this.PurchaseEndTime.Equals(input.PurchaseEndTime))
                ) && 
                (
                    this.PurchaseStartTime == input.PurchaseStartTime ||
                    (this.PurchaseStartTime != null &&
                    this.PurchaseStartTime.Equals(input.PurchaseStartTime))
                ) && 
                (
                    this.VoucherPackageId == input.VoucherPackageId ||
                    (this.VoucherPackageId != null &&
                    this.VoucherPackageId.Equals(input.VoucherPackageId))
                ) && 
                (
                    this.VoucherPackageName == input.VoucherPackageName ||
                    (this.VoucherPackageName != null &&
                    this.VoucherPackageName.Equals(input.VoucherPackageName))
                ) && 
                (
                    this.VoucherPackageStatus == input.VoucherPackageStatus ||
                    (this.VoucherPackageStatus != null &&
                    this.VoucherPackageStatus.Equals(input.VoucherPackageStatus))
                ) && 
                (
                    this.VoucherTotalAmount == input.VoucherTotalAmount ||
                    (this.VoucherTotalAmount != null &&
                    this.VoucherTotalAmount.Equals(input.VoucherTotalAmount))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.PurchaseEndTime != null)
                {
                    hashCode = (hashCode * 59) + this.PurchaseEndTime.GetHashCode();
                }
                if (this.PurchaseStartTime != null)
                {
                    hashCode = (hashCode * 59) + this.PurchaseStartTime.GetHashCode();
                }
                if (this.VoucherPackageId != null)
                {
                    hashCode = (hashCode * 59) + this.VoucherPackageId.GetHashCode();
                }
                if (this.VoucherPackageName != null)
                {
                    hashCode = (hashCode * 59) + this.VoucherPackageName.GetHashCode();
                }
                if (this.VoucherPackageStatus != null)
                {
                    hashCode = (hashCode * 59) + this.VoucherPackageStatus.GetHashCode();
                }
                if (this.VoucherTotalAmount != null)
                {
                    hashCode = (hashCode * 59) + this.VoucherTotalAmount.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
