/*
 * 支付宝开放平台API
 *
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2025-02-19
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = AlipaySDKNet.OpenAPI.Client.OpenAPIDateConverter;

namespace AlipaySDKNet.OpenAPI.Model
{
    /// <summary>
    /// AlipayDataBillEreceiptApplyModel
    /// </summary>
    [DataContract(Name = "AlipayDataBillEreceiptApplyModel")]
    public partial class AlipayDataBillEreceiptApplyModel : IEquatable<AlipayDataBillEreceiptApplyModel>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AlipayDataBillEreceiptApplyModel" /> class.
        /// </summary>
        /// <param name="billUserId">授权商户pid。需调用方获取商户授权，才可使用。.</param>
        /// <param name="key">根据不同业务类型，传入不同参数。 格式如下： * ACCOUNT_LOG_DETAIL - 传入账务流水号，示例：117007*********9151 * ACCOUNT_FLOW_DETAIL - 传入流水日期区间示例：20220301-20220331 * FUND_DETAIL - 传入资金单据号，示例：2022051511007***************0731 * ACCOUNT_LOG_SUM_DAILY - 传入日期，示例：2022-01-01 * ACCOUNT_LOG_SUM_MONTHLY - 传入月份，示例：2022-01.</param>
        /// <param name="type">申请的类型。可传入： * ACCOUNT_LOG_DETAIL - 余额收支证明 * ACCOUNT_FLOW_DETAIL - 余额收支流水证明 * FUND_DETAIL - 转入转出收支证明 * ACCOUNT_LOG_SUM_DAILY - 收支汇总证明（日汇总） * ACCOUNT_LOG_SUM_MONTHLY - 收支汇总证明（月汇总）.</param>
        public AlipayDataBillEreceiptApplyModel(string billUserId = default(string), string key = default(string), string type = default(string))
        {
            this.BillUserId = billUserId;
            this.Key = key;
            this.Type = type;
        }

        /// <summary>
        /// 授权商户pid。需调用方获取商户授权，才可使用。
        /// </summary>
        /// <value>授权商户pid。需调用方获取商户授权，才可使用。</value>
        [DataMember(Name = "bill_user_id", EmitDefaultValue = false)]
        public string BillUserId { get; set; }

        /// <summary>
        /// 根据不同业务类型，传入不同参数。 格式如下： * ACCOUNT_LOG_DETAIL - 传入账务流水号，示例：117007*********9151 * ACCOUNT_FLOW_DETAIL - 传入流水日期区间示例：20220301-20220331 * FUND_DETAIL - 传入资金单据号，示例：2022051511007***************0731 * ACCOUNT_LOG_SUM_DAILY - 传入日期，示例：2022-01-01 * ACCOUNT_LOG_SUM_MONTHLY - 传入月份，示例：2022-01
        /// </summary>
        /// <value>根据不同业务类型，传入不同参数。 格式如下： * ACCOUNT_LOG_DETAIL - 传入账务流水号，示例：117007*********9151 * ACCOUNT_FLOW_DETAIL - 传入流水日期区间示例：20220301-20220331 * FUND_DETAIL - 传入资金单据号，示例：2022051511007***************0731 * ACCOUNT_LOG_SUM_DAILY - 传入日期，示例：2022-01-01 * ACCOUNT_LOG_SUM_MONTHLY - 传入月份，示例：2022-01</value>
        [DataMember(Name = "key", EmitDefaultValue = false)]
        public string Key { get; set; }

        /// <summary>
        /// 申请的类型。可传入： * ACCOUNT_LOG_DETAIL - 余额收支证明 * ACCOUNT_FLOW_DETAIL - 余额收支流水证明 * FUND_DETAIL - 转入转出收支证明 * ACCOUNT_LOG_SUM_DAILY - 收支汇总证明（日汇总） * ACCOUNT_LOG_SUM_MONTHLY - 收支汇总证明（月汇总）
        /// </summary>
        /// <value>申请的类型。可传入： * ACCOUNT_LOG_DETAIL - 余额收支证明 * ACCOUNT_FLOW_DETAIL - 余额收支流水证明 * FUND_DETAIL - 转入转出收支证明 * ACCOUNT_LOG_SUM_DAILY - 收支汇总证明（日汇总） * ACCOUNT_LOG_SUM_MONTHLY - 收支汇总证明（月汇总）</value>
        [DataMember(Name = "type", EmitDefaultValue = false)]
        public string Type { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class AlipayDataBillEreceiptApplyModel {\n");
            sb.Append("  BillUserId: ").Append(BillUserId).Append("\n");
            sb.Append("  Key: ").Append(Key).Append("\n");
            sb.Append("  Type: ").Append(Type).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as AlipayDataBillEreceiptApplyModel);
        }

        /// <summary>
        /// Returns true if AlipayDataBillEreceiptApplyModel instances are equal
        /// </summary>
        /// <param name="input">Instance of AlipayDataBillEreceiptApplyModel to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AlipayDataBillEreceiptApplyModel input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.BillUserId == input.BillUserId ||
                    (this.BillUserId != null &&
                    this.BillUserId.Equals(input.BillUserId))
                ) && 
                (
                    this.Key == input.Key ||
                    (this.Key != null &&
                    this.Key.Equals(input.Key))
                ) && 
                (
                    this.Type == input.Type ||
                    (this.Type != null &&
                    this.Type.Equals(input.Type))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.BillUserId != null)
                {
                    hashCode = (hashCode * 59) + this.BillUserId.GetHashCode();
                }
                if (this.Key != null)
                {
                    hashCode = (hashCode * 59) + this.Key.GetHashCode();
                }
                if (this.Type != null)
                {
                    hashCode = (hashCode * 59) + this.Type.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
