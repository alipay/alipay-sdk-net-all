/*
 * 支付宝开放平台API
 *
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2025-02-19
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = AlipaySDKNet.OpenAPI.Client.OpenAPIDateConverter;

namespace AlipaySDKNet.OpenAPI.Model
{
    /// <summary>
    /// AlipayFundEnterprisepaySignModel
    /// </summary>
    [DataContract(Name = "AlipayFundEnterprisepaySignModel")]
    public partial class AlipayFundEnterprisepaySignModel : IEquatable<AlipayFundEnterprisepaySignModel>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AlipayFundEnterprisepaySignModel" /> class.
        /// </summary>
        /// <param name="accountName">企业简称，传空采用默认规则命名，使用公司名称.</param>
        /// <param name="appointSignTerminal">指定签约终端类型 PC-电脑浏览器 MOBILE-手机端.</param>
        /// <param name="bizScene">业务场景，联系支付宝分配.</param>
        /// <param name="extParams">特殊场景下扩展字段.</param>
        /// <param name="identity">开户账号： 当identity_type是ALIPAY_USER_ID时填支付宝会员ID（2088开头）； 当identity_type是ALIPAY_LOGON_ID 时填支付宝登录号； 当identity_type是OUT_USER_ID时填外部平台的用户uid; 当identity_type是ALIPAY_OPEN_ID时填用户openId.</param>
        /// <param name="identityName">开户用户名称，identity_type为ALIPAY_LOGON_ID时必填.</param>
        /// <param name="identityType">账号类型，目前支持如下类型： 1、ALIPAY_USER_ID 支付宝的会员ID 2、ALIPAY_LOGON_ID：支付宝登录号，支持邮箱和手机号格式 3、OUT_USER_ID：外部用户uid.</param>
        /// <param name="outBizNo">商户侧单号（幂等字段） ，补充说明：幂等逻辑（商户appid+out_biz_no），商户集成时需注意，如换号重复发起，则认为是一笔新的请求.</param>
        /// <param name="outEntityId">外部实体ID，一般表述为外部操作人操作某个外部实体。比如企业码2284号.</param>
        /// <param name="outSource">ISV平台定义的共同账户开户来源.</param>
        /// <param name="productCode">产品码.</param>
        public AlipayFundEnterprisepaySignModel(string accountName = default(string), string appointSignTerminal = default(string), string bizScene = default(string), string extParams = default(string), string identity = default(string), string identityName = default(string), string identityType = default(string), string outBizNo = default(string), string outEntityId = default(string), string outSource = default(string), string productCode = default(string))
        {
            this.AccountName = accountName;
            this.AppointSignTerminal = appointSignTerminal;
            this.BizScene = bizScene;
            this.ExtParams = extParams;
            this.Identity = identity;
            this.IdentityName = identityName;
            this.IdentityType = identityType;
            this.OutBizNo = outBizNo;
            this.OutEntityId = outEntityId;
            this.OutSource = outSource;
            this.ProductCode = productCode;
        }

        /// <summary>
        /// 企业简称，传空采用默认规则命名，使用公司名称
        /// </summary>
        /// <value>企业简称，传空采用默认规则命名，使用公司名称</value>
        [DataMember(Name = "account_name", EmitDefaultValue = false)]
        public string AccountName { get; set; }

        /// <summary>
        /// 指定签约终端类型 PC-电脑浏览器 MOBILE-手机端
        /// </summary>
        /// <value>指定签约终端类型 PC-电脑浏览器 MOBILE-手机端</value>
        [DataMember(Name = "appoint_sign_terminal", EmitDefaultValue = false)]
        public string AppointSignTerminal { get; set; }

        /// <summary>
        /// 业务场景，联系支付宝分配
        /// </summary>
        /// <value>业务场景，联系支付宝分配</value>
        [DataMember(Name = "biz_scene", EmitDefaultValue = false)]
        public string BizScene { get; set; }

        /// <summary>
        /// 特殊场景下扩展字段
        /// </summary>
        /// <value>特殊场景下扩展字段</value>
        [DataMember(Name = "ext_params", EmitDefaultValue = false)]
        public string ExtParams { get; set; }

        /// <summary>
        /// 开户账号： 当identity_type是ALIPAY_USER_ID时填支付宝会员ID（2088开头）； 当identity_type是ALIPAY_LOGON_ID 时填支付宝登录号； 当identity_type是OUT_USER_ID时填外部平台的用户uid; 当identity_type是ALIPAY_OPEN_ID时填用户openId
        /// </summary>
        /// <value>开户账号： 当identity_type是ALIPAY_USER_ID时填支付宝会员ID（2088开头）； 当identity_type是ALIPAY_LOGON_ID 时填支付宝登录号； 当identity_type是OUT_USER_ID时填外部平台的用户uid; 当identity_type是ALIPAY_OPEN_ID时填用户openId</value>
        [DataMember(Name = "identity", EmitDefaultValue = false)]
        public string Identity { get; set; }

        /// <summary>
        /// 开户用户名称，identity_type为ALIPAY_LOGON_ID时必填
        /// </summary>
        /// <value>开户用户名称，identity_type为ALIPAY_LOGON_ID时必填</value>
        [DataMember(Name = "identity_name", EmitDefaultValue = false)]
        public string IdentityName { get; set; }

        /// <summary>
        /// 账号类型，目前支持如下类型： 1、ALIPAY_USER_ID 支付宝的会员ID 2、ALIPAY_LOGON_ID：支付宝登录号，支持邮箱和手机号格式 3、OUT_USER_ID：外部用户uid
        /// </summary>
        /// <value>账号类型，目前支持如下类型： 1、ALIPAY_USER_ID 支付宝的会员ID 2、ALIPAY_LOGON_ID：支付宝登录号，支持邮箱和手机号格式 3、OUT_USER_ID：外部用户uid</value>
        [DataMember(Name = "identity_type", EmitDefaultValue = false)]
        public string IdentityType { get; set; }

        /// <summary>
        /// 商户侧单号（幂等字段） ，补充说明：幂等逻辑（商户appid+out_biz_no），商户集成时需注意，如换号重复发起，则认为是一笔新的请求
        /// </summary>
        /// <value>商户侧单号（幂等字段） ，补充说明：幂等逻辑（商户appid+out_biz_no），商户集成时需注意，如换号重复发起，则认为是一笔新的请求</value>
        [DataMember(Name = "out_biz_no", EmitDefaultValue = false)]
        public string OutBizNo { get; set; }

        /// <summary>
        /// 外部实体ID，一般表述为外部操作人操作某个外部实体。比如企业码2284号
        /// </summary>
        /// <value>外部实体ID，一般表述为外部操作人操作某个外部实体。比如企业码2284号</value>
        [DataMember(Name = "out_entity_id", EmitDefaultValue = false)]
        public string OutEntityId { get; set; }

        /// <summary>
        /// ISV平台定义的共同账户开户来源
        /// </summary>
        /// <value>ISV平台定义的共同账户开户来源</value>
        [DataMember(Name = "out_source", EmitDefaultValue = false)]
        public string OutSource { get; set; }

        /// <summary>
        /// 产品码
        /// </summary>
        /// <value>产品码</value>
        [DataMember(Name = "product_code", EmitDefaultValue = false)]
        public string ProductCode { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class AlipayFundEnterprisepaySignModel {\n");
            sb.Append("  AccountName: ").Append(AccountName).Append("\n");
            sb.Append("  AppointSignTerminal: ").Append(AppointSignTerminal).Append("\n");
            sb.Append("  BizScene: ").Append(BizScene).Append("\n");
            sb.Append("  ExtParams: ").Append(ExtParams).Append("\n");
            sb.Append("  Identity: ").Append(Identity).Append("\n");
            sb.Append("  IdentityName: ").Append(IdentityName).Append("\n");
            sb.Append("  IdentityType: ").Append(IdentityType).Append("\n");
            sb.Append("  OutBizNo: ").Append(OutBizNo).Append("\n");
            sb.Append("  OutEntityId: ").Append(OutEntityId).Append("\n");
            sb.Append("  OutSource: ").Append(OutSource).Append("\n");
            sb.Append("  ProductCode: ").Append(ProductCode).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as AlipayFundEnterprisepaySignModel);
        }

        /// <summary>
        /// Returns true if AlipayFundEnterprisepaySignModel instances are equal
        /// </summary>
        /// <param name="input">Instance of AlipayFundEnterprisepaySignModel to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AlipayFundEnterprisepaySignModel input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.AccountName == input.AccountName ||
                    (this.AccountName != null &&
                    this.AccountName.Equals(input.AccountName))
                ) && 
                (
                    this.AppointSignTerminal == input.AppointSignTerminal ||
                    (this.AppointSignTerminal != null &&
                    this.AppointSignTerminal.Equals(input.AppointSignTerminal))
                ) && 
                (
                    this.BizScene == input.BizScene ||
                    (this.BizScene != null &&
                    this.BizScene.Equals(input.BizScene))
                ) && 
                (
                    this.ExtParams == input.ExtParams ||
                    (this.ExtParams != null &&
                    this.ExtParams.Equals(input.ExtParams))
                ) && 
                (
                    this.Identity == input.Identity ||
                    (this.Identity != null &&
                    this.Identity.Equals(input.Identity))
                ) && 
                (
                    this.IdentityName == input.IdentityName ||
                    (this.IdentityName != null &&
                    this.IdentityName.Equals(input.IdentityName))
                ) && 
                (
                    this.IdentityType == input.IdentityType ||
                    (this.IdentityType != null &&
                    this.IdentityType.Equals(input.IdentityType))
                ) && 
                (
                    this.OutBizNo == input.OutBizNo ||
                    (this.OutBizNo != null &&
                    this.OutBizNo.Equals(input.OutBizNo))
                ) && 
                (
                    this.OutEntityId == input.OutEntityId ||
                    (this.OutEntityId != null &&
                    this.OutEntityId.Equals(input.OutEntityId))
                ) && 
                (
                    this.OutSource == input.OutSource ||
                    (this.OutSource != null &&
                    this.OutSource.Equals(input.OutSource))
                ) && 
                (
                    this.ProductCode == input.ProductCode ||
                    (this.ProductCode != null &&
                    this.ProductCode.Equals(input.ProductCode))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.AccountName != null)
                {
                    hashCode = (hashCode * 59) + this.AccountName.GetHashCode();
                }
                if (this.AppointSignTerminal != null)
                {
                    hashCode = (hashCode * 59) + this.AppointSignTerminal.GetHashCode();
                }
                if (this.BizScene != null)
                {
                    hashCode = (hashCode * 59) + this.BizScene.GetHashCode();
                }
                if (this.ExtParams != null)
                {
                    hashCode = (hashCode * 59) + this.ExtParams.GetHashCode();
                }
                if (this.Identity != null)
                {
                    hashCode = (hashCode * 59) + this.Identity.GetHashCode();
                }
                if (this.IdentityName != null)
                {
                    hashCode = (hashCode * 59) + this.IdentityName.GetHashCode();
                }
                if (this.IdentityType != null)
                {
                    hashCode = (hashCode * 59) + this.IdentityType.GetHashCode();
                }
                if (this.OutBizNo != null)
                {
                    hashCode = (hashCode * 59) + this.OutBizNo.GetHashCode();
                }
                if (this.OutEntityId != null)
                {
                    hashCode = (hashCode * 59) + this.OutEntityId.GetHashCode();
                }
                if (this.OutSource != null)
                {
                    hashCode = (hashCode * 59) + this.OutSource.GetHashCode();
                }
                if (this.ProductCode != null)
                {
                    hashCode = (hashCode * 59) + this.ProductCode.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
