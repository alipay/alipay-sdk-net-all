/*
 * 支付宝开放平台API
 *
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2025-02-19
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = AlipaySDKNet.OpenAPI.Client.OpenAPIDateConverter;

namespace AlipaySDKNet.OpenAPI.Model
{
    /// <summary>
    /// ConversionProperty
    /// </summary>
    [DataContract(Name = "ConversionProperty")]
    public partial class ConversionProperty : IEquatable<ConversionProperty>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ConversionProperty" /> class.
        /// </summary>
        /// <param name="key">业务转化数据属性.</param>
        /// <param name="name">转化属性名称.</param>
        /// <param name="value">业务转化属性实例值， property_list的value值需与转化管理里创建转化事件时填写的归因口径值保持一致&lt;br&gt; attrbute_list的value值请参考该文档：&lt;a href&#x3D;&#39;https://adpub.alipay.com/adrlark/ivdktpyh511x9r6i&#39;&gt;转化事件类型属性规则&lt;/a&gt;.</param>
        public ConversionProperty(string key = default(string), string name = default(string), string value = default(string))
        {
            this.Key = key;
            this.Name = name;
            this.Value = value;
        }

        /// <summary>
        /// 业务转化数据属性
        /// </summary>
        /// <value>业务转化数据属性</value>
        [DataMember(Name = "key", EmitDefaultValue = false)]
        public string Key { get; set; }

        /// <summary>
        /// 转化属性名称
        /// </summary>
        /// <value>转化属性名称</value>
        [DataMember(Name = "name", EmitDefaultValue = false)]
        public string Name { get; set; }

        /// <summary>
        /// 业务转化属性实例值， property_list的value值需与转化管理里创建转化事件时填写的归因口径值保持一致&lt;br&gt; attrbute_list的value值请参考该文档：&lt;a href&#x3D;&#39;https://adpub.alipay.com/adrlark/ivdktpyh511x9r6i&#39;&gt;转化事件类型属性规则&lt;/a&gt;
        /// </summary>
        /// <value>业务转化属性实例值， property_list的value值需与转化管理里创建转化事件时填写的归因口径值保持一致&lt;br&gt; attrbute_list的value值请参考该文档：&lt;a href&#x3D;&#39;https://adpub.alipay.com/adrlark/ivdktpyh511x9r6i&#39;&gt;转化事件类型属性规则&lt;/a&gt;</value>
        [DataMember(Name = "value", EmitDefaultValue = false)]
        public string Value { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ConversionProperty {\n");
            sb.Append("  Key: ").Append(Key).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  Value: ").Append(Value).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ConversionProperty);
        }

        /// <summary>
        /// Returns true if ConversionProperty instances are equal
        /// </summary>
        /// <param name="input">Instance of ConversionProperty to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ConversionProperty input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.Key == input.Key ||
                    (this.Key != null &&
                    this.Key.Equals(input.Key))
                ) && 
                (
                    this.Name == input.Name ||
                    (this.Name != null &&
                    this.Name.Equals(input.Name))
                ) && 
                (
                    this.Value == input.Value ||
                    (this.Value != null &&
                    this.Value.Equals(input.Value))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Key != null)
                {
                    hashCode = (hashCode * 59) + this.Key.GetHashCode();
                }
                if (this.Name != null)
                {
                    hashCode = (hashCode * 59) + this.Name.GetHashCode();
                }
                if (this.Value != null)
                {
                    hashCode = (hashCode * 59) + this.Value.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
