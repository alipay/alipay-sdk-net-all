/*
 * 支付宝开放平台API
 *
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2025-02-19
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = AlipaySDKNet.OpenAPI.Client.OpenAPIDateConverter;

namespace AlipaySDKNet.OpenAPI.Model
{
    /// <summary>
    /// AlipayFundAccountQueryResponseModel
    /// </summary>
    [DataContract(Name = "AlipayFundAccountQueryResponseModel")]
    public partial class AlipayFundAccountQueryResponseModel : IEquatable<AlipayFundAccountQueryResponseModel>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AlipayFundAccountQueryResponseModel" /> class.
        /// </summary>
        /// <param name="amountDetail">amountDetail.</param>
        /// <param name="availableAmount">账户可用余额，单位元，精确到小数点后两位。.</param>
        /// <param name="extCardInfo">extCardInfo.</param>
        /// <param name="freezeAmount">当前支付宝账户的实时冻结余额.</param>
        /// <param name="totalAmount">支付宝账户的余额总数，仅当查询日终余额明细时返回。单位：元.</param>
        public AlipayFundAccountQueryResponseModel(BalanceAccountDetail amountDetail = default(BalanceAccountDetail), string availableAmount = default(string), ExtCardInfo extCardInfo = default(ExtCardInfo), string freezeAmount = default(string), string totalAmount = default(string))
        {
            this.AmountDetail = amountDetail;
            this.AvailableAmount = availableAmount;
            this.ExtCardInfo = extCardInfo;
            this.FreezeAmount = freezeAmount;
            this.TotalAmount = totalAmount;
        }

        /// <summary>
        /// Gets or Sets AmountDetail
        /// </summary>
        [DataMember(Name = "amount_detail", EmitDefaultValue = false)]
        public BalanceAccountDetail AmountDetail { get; set; }

        /// <summary>
        /// 账户可用余额，单位元，精确到小数点后两位。
        /// </summary>
        /// <value>账户可用余额，单位元，精确到小数点后两位。</value>
        [DataMember(Name = "available_amount", EmitDefaultValue = false)]
        public string AvailableAmount { get; set; }

        /// <summary>
        /// Gets or Sets ExtCardInfo
        /// </summary>
        [DataMember(Name = "ext_card_info", EmitDefaultValue = false)]
        public ExtCardInfo ExtCardInfo { get; set; }

        /// <summary>
        /// 当前支付宝账户的实时冻结余额
        /// </summary>
        /// <value>当前支付宝账户的实时冻结余额</value>
        [DataMember(Name = "freeze_amount", EmitDefaultValue = false)]
        public string FreezeAmount { get; set; }

        /// <summary>
        /// 支付宝账户的余额总数，仅当查询日终余额明细时返回。单位：元
        /// </summary>
        /// <value>支付宝账户的余额总数，仅当查询日终余额明细时返回。单位：元</value>
        [DataMember(Name = "total_amount", EmitDefaultValue = false)]
        public string TotalAmount { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class AlipayFundAccountQueryResponseModel {\n");
            sb.Append("  AmountDetail: ").Append(AmountDetail).Append("\n");
            sb.Append("  AvailableAmount: ").Append(AvailableAmount).Append("\n");
            sb.Append("  ExtCardInfo: ").Append(ExtCardInfo).Append("\n");
            sb.Append("  FreezeAmount: ").Append(FreezeAmount).Append("\n");
            sb.Append("  TotalAmount: ").Append(TotalAmount).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as AlipayFundAccountQueryResponseModel);
        }

        /// <summary>
        /// Returns true if AlipayFundAccountQueryResponseModel instances are equal
        /// </summary>
        /// <param name="input">Instance of AlipayFundAccountQueryResponseModel to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AlipayFundAccountQueryResponseModel input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.AmountDetail == input.AmountDetail ||
                    (this.AmountDetail != null &&
                    this.AmountDetail.Equals(input.AmountDetail))
                ) && 
                (
                    this.AvailableAmount == input.AvailableAmount ||
                    (this.AvailableAmount != null &&
                    this.AvailableAmount.Equals(input.AvailableAmount))
                ) && 
                (
                    this.ExtCardInfo == input.ExtCardInfo ||
                    (this.ExtCardInfo != null &&
                    this.ExtCardInfo.Equals(input.ExtCardInfo))
                ) && 
                (
                    this.FreezeAmount == input.FreezeAmount ||
                    (this.FreezeAmount != null &&
                    this.FreezeAmount.Equals(input.FreezeAmount))
                ) && 
                (
                    this.TotalAmount == input.TotalAmount ||
                    (this.TotalAmount != null &&
                    this.TotalAmount.Equals(input.TotalAmount))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.AmountDetail != null)
                {
                    hashCode = (hashCode * 59) + this.AmountDetail.GetHashCode();
                }
                if (this.AvailableAmount != null)
                {
                    hashCode = (hashCode * 59) + this.AvailableAmount.GetHashCode();
                }
                if (this.ExtCardInfo != null)
                {
                    hashCode = (hashCode * 59) + this.ExtCardInfo.GetHashCode();
                }
                if (this.FreezeAmount != null)
                {
                    hashCode = (hashCode * 59) + this.FreezeAmount.GetHashCode();
                }
                if (this.TotalAmount != null)
                {
                    hashCode = (hashCode * 59) + this.TotalAmount.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
