/*
 * 支付宝开放平台API
 *
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2025-02-19
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = AlipaySDKNet.OpenAPI.Client.OpenAPIDateConverter;

namespace AlipaySDKNet.OpenAPI.Model
{
    /// <summary>
    /// AlipayMerchantOrderSyncErrorResponseModel
    /// </summary>
    [DataContract(Name = "AlipayMerchantOrderSyncErrorResponseModel")]
    public partial class AlipayMerchantOrderSyncErrorResponseModel : IEquatable<AlipayMerchantOrderSyncErrorResponseModel>, IValidatableObject
    {
        /// <summary>
        /// 错误码
        /// </summary>
        /// <value>错误码</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum CodeEnum
        {
            /// <summary>
            /// Enum SYSTEMERROR for value: SYSTEM_ERROR
            /// </summary>
            [EnumMember(Value = "SYSTEM_ERROR")]
            SYSTEMERROR = 1,

            /// <summary>
            /// Enum INVALIDPARAMETER for value: INVALID_PARAMETER
            /// </summary>
            [EnumMember(Value = "INVALID_PARAMETER")]
            INVALIDPARAMETER = 2,

            /// <summary>
            /// Enum MATERIALIDILLEGAL for value: MATERIAL_ID_ILLEGAL
            /// </summary>
            [EnumMember(Value = "MATERIAL_ID_ILLEGAL")]
            MATERIALIDILLEGAL = 3,

            /// <summary>
            /// Enum CONTENTILLEGAL for value: CONTENT_ILLEGAL
            /// </summary>
            [EnumMember(Value = "CONTENT_ILLEGAL")]
            CONTENTILLEGAL = 4,

            /// <summary>
            /// Enum TINYAPPIDNULL for value: TINY_APP_ID_NULL
            /// </summary>
            [EnumMember(Value = "TINY_APP_ID_NULL")]
            TINYAPPIDNULL = 5,

            /// <summary>
            /// Enum TINYAPPIDILLEGAL for value: TINY_APP_ID_ILLEGAL
            /// </summary>
            [EnumMember(Value = "TINY_APP_ID_ILLEGAL")]
            TINYAPPIDILLEGAL = 6,

            /// <summary>
            /// Enum LOGISTICSINFOEXIST for value: LOGISTICS_INFO_EXIST
            /// </summary>
            [EnumMember(Value = "LOGISTICS_INFO_EXIST")]
            LOGISTICSINFOEXIST = 7,

            /// <summary>
            /// Enum TRADENOTEXIST for value: TRADE_NOT_EXIST
            /// </summary>
            [EnumMember(Value = "TRADE_NOT_EXIST")]
            TRADENOTEXIST = 8,

            /// <summary>
            /// Enum ITEMINFONOTCOMPLETE for value: ITEM_INFO_NOT_COMPLETE
            /// </summary>
            [EnumMember(Value = "ITEM_INFO_NOT_COMPLETE")]
            ITEMINFONOTCOMPLETE = 9,

            /// <summary>
            /// Enum NOPERMISSOON for value: NO_PERMISSOON
            /// </summary>
            [EnumMember(Value = "NO_PERMISSOON")]
            NOPERMISSOON = 10,

            /// <summary>
            /// Enum ORDERERRORSTATUS for value: ORDER_ERROR_STATUS
            /// </summary>
            [EnumMember(Value = "ORDER_ERROR_STATUS")]
            ORDERERRORSTATUS = 11,

            /// <summary>
            /// Enum LOGISTICSSIZELARGE for value: LOGISTICS_SIZE_LARGE
            /// </summary>
            [EnumMember(Value = "LOGISTICS_SIZE_LARGE")]
            LOGISTICSSIZELARGE = 12,

            /// <summary>
            /// Enum ITEMHASEXIST for value: ITEM_HAS_EXIST
            /// </summary>
            [EnumMember(Value = "ITEM_HAS_EXIST")]
            ITEMHASEXIST = 13,

            /// <summary>
            /// Enum AMOUNTILLEGAL for value: AMOUNT_ILLEGAL
            /// </summary>
            [EnumMember(Value = "AMOUNT_ILLEGAL")]
            AMOUNTILLEGAL = 14,

            /// <summary>
            /// Enum RECORDNOTEXIST for value: RECORD_NOT_EXIST
            /// </summary>
            [EnumMember(Value = "RECORD_NOT_EXIST")]
            RECORDNOTEXIST = 15,

            /// <summary>
            /// Enum DATAINCONSISTENT for value: DATA_INCONSISTENT
            /// </summary>
            [EnumMember(Value = "DATA_INCONSISTENT")]
            DATAINCONSISTENT = 16,

            /// <summary>
            /// Enum ITEMDUPLICATED for value: ITEM_DUPLICATED
            /// </summary>
            [EnumMember(Value = "ITEM_DUPLICATED")]
            ITEMDUPLICATED = 17,

            /// <summary>
            /// Enum BUYERSTATUSERROR for value: BUYER_STATUS_ERROR
            /// </summary>
            [EnumMember(Value = "BUYER_STATUS_ERROR")]
            BUYERSTATUSERROR = 18,

            /// <summary>
            /// Enum RECORDIDISNULL for value: RECORD_ID_IS_NULL
            /// </summary>
            [EnumMember(Value = "RECORD_ID_IS_NULL")]
            RECORDIDISNULL = 19,

            /// <summary>
            /// Enum OUTBIZNOISNULL for value: OUT_BIZ_NO_IS_NULL
            /// </summary>
            [EnumMember(Value = "OUT_BIZ_NO_IS_NULL")]
            OUTBIZNOISNULL = 20,

            /// <summary>
            /// Enum BUYERIDISNULL for value: BUYER_ID_IS_NULL
            /// </summary>
            [EnumMember(Value = "BUYER_ID_IS_NULL")]
            BUYERIDISNULL = 21,

            /// <summary>
            /// Enum BUYERINFOISNULL for value: BUYER_INFO_IS_NULL
            /// </summary>
            [EnumMember(Value = "BUYER_INFO_IS_NULL")]
            BUYERINFOISNULL = 22,

            /// <summary>
            /// Enum BUYERNAMEISNULL for value: BUYER_NAME_IS_NULL
            /// </summary>
            [EnumMember(Value = "BUYER_NAME_IS_NULL")]
            BUYERNAMEISNULL = 23,

            /// <summary>
            /// Enum BUYERMOBILEILLEGAL for value: BUYER_MOBILE_ILLEGAL
            /// </summary>
            [EnumMember(Value = "BUYER_MOBILE_ILLEGAL")]
            BUYERMOBILEILLEGAL = 24,

            /// <summary>
            /// Enum BUYERMOBILEISNULL for value: BUYER_MOBILE_IS_NULL
            /// </summary>
            [EnumMember(Value = "BUYER_MOBILE_IS_NULL")]
            BUYERMOBILEISNULL = 25,

            /// <summary>
            /// Enum BUYERCERTNOISNULL for value: BUYER_CERT_NO_IS_NULL
            /// </summary>
            [EnumMember(Value = "BUYER_CERT_NO_IS_NULL")]
            BUYERCERTNOISNULL = 26,

            /// <summary>
            /// Enum SELLERIDISNULL for value: SELLER_ID_IS_NULL
            /// </summary>
            [EnumMember(Value = "SELLER_ID_IS_NULL")]
            SELLERIDISNULL = 27,

            /// <summary>
            /// Enum AMOUNTISNULL for value: AMOUNT_IS_NULL
            /// </summary>
            [EnumMember(Value = "AMOUNT_IS_NULL")]
            AMOUNTISNULL = 28,

            /// <summary>
            /// Enum PAYAMOUNTISNULL for value: PAY_AMOUNT_IS_NULL
            /// </summary>
            [EnumMember(Value = "PAY_AMOUNT_IS_NULL")]
            PAYAMOUNTISNULL = 29,

            /// <summary>
            /// Enum PAYTIMEOUTEXPRESSILLEGAL for value: PAY_TIMEOUT_EXPRESS_ILLEGAL
            /// </summary>
            [EnumMember(Value = "PAY_TIMEOUT_EXPRESS_ILLEGAL")]
            PAYTIMEOUTEXPRESSILLEGAL = 30,

            /// <summary>
            /// Enum MERCHANTORDERSTATUSILLEGAL for value: MERCHANT_ORDER_STATUS_ILLEGAL
            /// </summary>
            [EnumMember(Value = "MERCHANT_ORDER_STATUS_ILLEGAL")]
            MERCHANTORDERSTATUSILLEGAL = 31,

            /// <summary>
            /// Enum BUYERNOTFOUND for value: BUYER_NOT_FOUND
            /// </summary>
            [EnumMember(Value = "BUYER_NOT_FOUND")]
            BUYERNOTFOUND = 32,

            /// <summary>
            /// Enum BUYERINFOERROR for value: BUYER_INFO_ERROR
            /// </summary>
            [EnumMember(Value = "BUYER_INFO_ERROR")]
            BUYERINFOERROR = 33,

            /// <summary>
            /// Enum RECORDIDILLEGAL for value: RECORD_ID_ILLEGAL
            /// </summary>
            [EnumMember(Value = "RECORD_ID_ILLEGAL")]
            RECORDIDILLEGAL = 34,

            /// <summary>
            /// Enum MINICENTERINVOKEERROR for value: MINICENTER_INVOKE_ERROR
            /// </summary>
            [EnumMember(Value = "MINICENTER_INVOKE_ERROR")]
            MINICENTERINVOKEERROR = 35,

            /// <summary>
            /// Enum MERCHANTLINKEXIST for value: MERCHANT_LINK_EXIST
            /// </summary>
            [EnumMember(Value = "MERCHANT_LINK_EXIST")]
            MERCHANTLINKEXIST = 36,

            /// <summary>
            /// Enum ARGUMENTNULL for value: ARGUMENT_NULL
            /// </summary>
            [EnumMember(Value = "ARGUMENT_NULL")]
            ARGUMENTNULL = 37,

            /// <summary>
            /// Enum PAYCHANNELISNULL for value: PAY_CHANNEL_IS_NULL
            /// </summary>
            [EnumMember(Value = "PAY_CHANNEL_IS_NULL")]
            PAYCHANNELISNULL = 38,

            /// <summary>
            /// Enum PAYCHANNELERROR for value: PAY_CHANNEL_ERROR
            /// </summary>
            [EnumMember(Value = "PAY_CHANNEL_ERROR")]
            PAYCHANNELERROR = 39,

            /// <summary>
            /// Enum TRADENONOTMATCH for value: TRADE_NO_NOT_MATCH
            /// </summary>
            [EnumMember(Value = "TRADE_NO_NOT_MATCH")]
            TRADENONOTMATCH = 40,

            /// <summary>
            /// Enum INFOSECERROR for value: INFO_SEC_ERROR
            /// </summary>
            [EnumMember(Value = "INFO_SEC_ERROR")]
            INFOSECERROR = 41,

            /// <summary>
            /// Enum ITEMNOTMATCH for value: ITEM_NOT_MATCH
            /// </summary>
            [EnumMember(Value = "ITEM_NOT_MATCH")]
            ITEMNOTMATCH = 42,

            /// <summary>
            /// Enum TINYAPPISNOTONLINE for value: TINY_APP_IS_NOT_ONLINE
            /// </summary>
            [EnumMember(Value = "TINY_APP_IS_NOT_ONLINE")]
            TINYAPPISNOTONLINE = 43,

            /// <summary>
            /// Enum TINYAPPIDNOTSYNCEQUALTRADE for value: TINY_APP_ID_NOT_SYNC_EQUAL_TRADE
            /// </summary>
            [EnumMember(Value = "TINY_APP_ID_NOT_SYNC_EQUAL_TRADE")]
            TINYAPPIDNOTSYNCEQUALTRADE = 44,

            /// <summary>
            /// Enum DATAACCESSEXCEPTION for value: DATA_ACCESS_EXCEPTION
            /// </summary>
            [EnumMember(Value = "DATA_ACCESS_EXCEPTION")]
            DATAACCESSEXCEPTION = 45,

            /// <summary>
            /// Enum INVALIDORDERAUTHCODE for value: INVALID_ORDER_AUTH_CODE
            /// </summary>
            [EnumMember(Value = "INVALID_ORDER_AUTH_CODE")]
            INVALIDORDERAUTHCODE = 46,

            /// <summary>
            /// Enum SERVICEREFUSED for value: SERVICE_REFUSED
            /// </summary>
            [EnumMember(Value = "SERVICE_REFUSED")]
            SERVICEREFUSED = 47,

            /// <summary>
            /// Enum DUPLICATEREQUEST for value: DUPLICATE_REQUEST
            /// </summary>
            [EnumMember(Value = "DUPLICATE_REQUEST")]
            DUPLICATEREQUEST = 48,

            /// <summary>
            /// Enum NONEEDRETRYERROR for value: NO_NEED_RETRY_ERROR
            /// </summary>
            [EnumMember(Value = "NO_NEED_RETRY_ERROR")]
            NONEEDRETRYERROR = 49,

            /// <summary>
            /// Enum SERVICECODESTATUSERROR for value: SERVICE_CODE_STATUS_ERROR
            /// </summary>
            [EnumMember(Value = "SERVICE_CODE_STATUS_ERROR")]
            SERVICECODESTATUSERROR = 50,

            /// <summary>
            /// Enum USERNOTAUTHORIZED for value: USER_NOT_AUTHORIZED
            /// </summary>
            [EnumMember(Value = "USER_NOT_AUTHORIZED")]
            USERNOTAUTHORIZED = 51

        }


        /// <summary>
        /// 错误码
        /// </summary>
        /// <value>错误码</value>
        [DataMember(Name = "code", EmitDefaultValue = false)]
        public CodeEnum Code { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="AlipayMerchantOrderSyncErrorResponseModel" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected AlipayMerchantOrderSyncErrorResponseModel() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="AlipayMerchantOrderSyncErrorResponseModel" /> class.
        /// </summary>
        /// <param name="code">错误码 (required).</param>
        /// <param name="links">解决方案链接.</param>
        /// <param name="message">错误描述 (required).</param>
        public AlipayMerchantOrderSyncErrorResponseModel(CodeEnum code = default(CodeEnum), string links = default(string), string message = default(string))
        {
            this.Code = code;
            // to ensure "message" is required (not null)
            // if (message == null)
            // {
            //     throw new ArgumentNullException("message is a required property for AlipayMerchantOrderSyncErrorResponseModel and cannot be null");
            // }
            this.Message = message;
            this.Links = links;
        }

        /// <summary>
        /// 解决方案链接
        /// </summary>
        /// <value>解决方案链接</value>
        [DataMember(Name = "links", EmitDefaultValue = false)]
        public string Links { get; set; }

        /// <summary>
        /// 错误描述
        /// </summary>
        /// <value>错误描述</value>
        [DataMember(Name = "message", EmitDefaultValue = false)]
        public string Message { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class AlipayMerchantOrderSyncErrorResponseModel {\n");
            sb.Append("  Code: ").Append(Code).Append("\n");
            sb.Append("  Links: ").Append(Links).Append("\n");
            sb.Append("  Message: ").Append(Message).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as AlipayMerchantOrderSyncErrorResponseModel);
        }

        /// <summary>
        /// Returns true if AlipayMerchantOrderSyncErrorResponseModel instances are equal
        /// </summary>
        /// <param name="input">Instance of AlipayMerchantOrderSyncErrorResponseModel to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AlipayMerchantOrderSyncErrorResponseModel input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.Code == input.Code ||
                    this.Code.Equals(input.Code)
                ) && 
                (
                    this.Links == input.Links ||
                    (this.Links != null &&
                    this.Links.Equals(input.Links))
                ) && 
                (
                    this.Message == input.Message ||
                    (this.Message != null &&
                    this.Message.Equals(input.Message))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                hashCode = (hashCode * 59) + this.Code.GetHashCode();
                if (this.Links != null)
                {
                    hashCode = (hashCode * 59) + this.Links.GetHashCode();
                }
                if (this.Message != null)
                {
                    hashCode = (hashCode * 59) + this.Message.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
