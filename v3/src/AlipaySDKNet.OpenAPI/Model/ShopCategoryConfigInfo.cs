/*
 * 支付宝开放平台API
 *
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2025-02-19
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = AlipaySDKNet.OpenAPI.Client.OpenAPIDateConverter;

namespace AlipaySDKNet.OpenAPI.Model
{
    /// <summary>
    /// ShopCategoryConfigInfo
    /// </summary>
    [DataContract(Name = "ShopCategoryConfigInfo")]
    public partial class ShopCategoryConfigInfo : IEquatable<ShopCategoryConfigInfo>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ShopCategoryConfigInfo" /> class.
        /// </summary>
        /// <param name="id">类目ID.</param>
        /// <param name="isLeaf">是否是叶子节点.</param>
        /// <param name="level">类目层级.</param>
        /// <param name="link">类目层级路径.</param>
        /// <param name="nm">类目名称.</param>
        public ShopCategoryConfigInfo(string id = default(string), string isLeaf = default(string), string level = default(string), string link = default(string), string nm = default(string))
        {
            this.Id = id;
            this.IsLeaf = isLeaf;
            this.Level = level;
            this.Link = link;
            this.Nm = nm;
        }

        /// <summary>
        /// 类目ID
        /// </summary>
        /// <value>类目ID</value>
        [DataMember(Name = "id", EmitDefaultValue = false)]
        public string Id { get; set; }

        /// <summary>
        /// 是否是叶子节点
        /// </summary>
        /// <value>是否是叶子节点</value>
        [DataMember(Name = "is_leaf", EmitDefaultValue = false)]
        public string IsLeaf { get; set; }

        /// <summary>
        /// 类目层级
        /// </summary>
        /// <value>类目层级</value>
        [DataMember(Name = "level", EmitDefaultValue = false)]
        public string Level { get; set; }

        /// <summary>
        /// 类目层级路径
        /// </summary>
        /// <value>类目层级路径</value>
        [DataMember(Name = "link", EmitDefaultValue = false)]
        public string Link { get; set; }

        /// <summary>
        /// 类目名称
        /// </summary>
        /// <value>类目名称</value>
        [DataMember(Name = "nm", EmitDefaultValue = false)]
        public string Nm { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ShopCategoryConfigInfo {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  IsLeaf: ").Append(IsLeaf).Append("\n");
            sb.Append("  Level: ").Append(Level).Append("\n");
            sb.Append("  Link: ").Append(Link).Append("\n");
            sb.Append("  Nm: ").Append(Nm).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ShopCategoryConfigInfo);
        }

        /// <summary>
        /// Returns true if ShopCategoryConfigInfo instances are equal
        /// </summary>
        /// <param name="input">Instance of ShopCategoryConfigInfo to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ShopCategoryConfigInfo input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.IsLeaf == input.IsLeaf ||
                    (this.IsLeaf != null &&
                    this.IsLeaf.Equals(input.IsLeaf))
                ) && 
                (
                    this.Level == input.Level ||
                    (this.Level != null &&
                    this.Level.Equals(input.Level))
                ) && 
                (
                    this.Link == input.Link ||
                    (this.Link != null &&
                    this.Link.Equals(input.Link))
                ) && 
                (
                    this.Nm == input.Nm ||
                    (this.Nm != null &&
                    this.Nm.Equals(input.Nm))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Id != null)
                {
                    hashCode = (hashCode * 59) + this.Id.GetHashCode();
                }
                if (this.IsLeaf != null)
                {
                    hashCode = (hashCode * 59) + this.IsLeaf.GetHashCode();
                }
                if (this.Level != null)
                {
                    hashCode = (hashCode * 59) + this.Level.GetHashCode();
                }
                if (this.Link != null)
                {
                    hashCode = (hashCode * 59) + this.Link.GetHashCode();
                }
                if (this.Nm != null)
                {
                    hashCode = (hashCode * 59) + this.Nm.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
