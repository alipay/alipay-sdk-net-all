/*
 * 支付宝开放平台API
 *
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2025-02-19
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = AlipaySDKNet.OpenAPI.Client.OpenAPIDateConverter;

namespace AlipaySDKNet.OpenAPI.Model
{
    /// <summary>
    /// ExtendParams
    /// </summary>
    [DataContract(Name = "ExtendParams")]
    public partial class ExtendParams : IEquatable<ExtendParams>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ExtendParams" /> class.
        /// </summary>
        /// <param name="cardType">卡类型.</param>
        /// <param name="creditExtInfo">信用参数，可选，如有需要请与芝麻约定后传入，信用服务说明见.</param>
        /// <param name="hbFqNum">使用花呗分期要进行的分期数.</param>
        /// <param name="hbFqSellerPercent">使用花呗分期需要卖家承担的手续费比例的百分值，传入100代表100%.</param>
        /// <param name="industryRefluxInfo">行业数据回流信息, 详见：地铁支付接口参数补充说明.</param>
        /// <param name="royaltyFreeze">是否进行资金冻结，用于后续分账，true表示资金冻结，false或不传表示资金不冻结.</param>
        /// <param name="specifiedSellerName">特殊场景下，允许商户指定交易展示的卖家名称.</param>
        /// <param name="sysServiceProviderId">系统商编号  该参数作为系统商返佣数据提取的依据，请填写系统商签约协议的PID.</param>
        /// <param name="tcInstallmentOrderId">公域商品交易分期单ID，小程序交易组件订单特殊场景使用，请传入 订单分期接口(alipay.open.mini.order.installment.create)中返回的installment_order_id.</param>
        /// <param name="tradeComponentOrderId">公域商品交易业务订单ID.</param>
        public ExtendParams(string cardType = default(string), string creditExtInfo = default(string), string hbFqNum = default(string), string hbFqSellerPercent = default(string), string industryRefluxInfo = default(string), string royaltyFreeze = default(string), string specifiedSellerName = default(string), string sysServiceProviderId = default(string), string tcInstallmentOrderId = default(string), string tradeComponentOrderId = default(string))
        {
            this.CardType = cardType;
            this.CreditExtInfo = creditExtInfo;
            this.HbFqNum = hbFqNum;
            this.HbFqSellerPercent = hbFqSellerPercent;
            this.IndustryRefluxInfo = industryRefluxInfo;
            this.RoyaltyFreeze = royaltyFreeze;
            this.SpecifiedSellerName = specifiedSellerName;
            this.SysServiceProviderId = sysServiceProviderId;
            this.TcInstallmentOrderId = tcInstallmentOrderId;
            this.TradeComponentOrderId = tradeComponentOrderId;
        }

        /// <summary>
        /// 卡类型
        /// </summary>
        /// <value>卡类型</value>
        [DataMember(Name = "card_type", EmitDefaultValue = false)]
        public string CardType { get; set; }

        /// <summary>
        /// 信用参数，可选，如有需要请与芝麻约定后传入，信用服务说明见
        /// </summary>
        /// <value>信用参数，可选，如有需要请与芝麻约定后传入，信用服务说明见</value>
        [DataMember(Name = "credit_ext_info", EmitDefaultValue = false)]
        public string CreditExtInfo { get; set; }

        /// <summary>
        /// 使用花呗分期要进行的分期数
        /// </summary>
        /// <value>使用花呗分期要进行的分期数</value>
        [DataMember(Name = "hb_fq_num", EmitDefaultValue = false)]
        public string HbFqNum { get; set; }

        /// <summary>
        /// 使用花呗分期需要卖家承担的手续费比例的百分值，传入100代表100%
        /// </summary>
        /// <value>使用花呗分期需要卖家承担的手续费比例的百分值，传入100代表100%</value>
        [DataMember(Name = "hb_fq_seller_percent", EmitDefaultValue = false)]
        public string HbFqSellerPercent { get; set; }

        /// <summary>
        /// 行业数据回流信息, 详见：地铁支付接口参数补充说明
        /// </summary>
        /// <value>行业数据回流信息, 详见：地铁支付接口参数补充说明</value>
        [DataMember(Name = "industry_reflux_info", EmitDefaultValue = false)]
        public string IndustryRefluxInfo { get; set; }

        /// <summary>
        /// 是否进行资金冻结，用于后续分账，true表示资金冻结，false或不传表示资金不冻结
        /// </summary>
        /// <value>是否进行资金冻结，用于后续分账，true表示资金冻结，false或不传表示资金不冻结</value>
        [DataMember(Name = "royalty_freeze", EmitDefaultValue = false)]
        public string RoyaltyFreeze { get; set; }

        /// <summary>
        /// 特殊场景下，允许商户指定交易展示的卖家名称
        /// </summary>
        /// <value>特殊场景下，允许商户指定交易展示的卖家名称</value>
        [DataMember(Name = "specified_seller_name", EmitDefaultValue = false)]
        public string SpecifiedSellerName { get; set; }

        /// <summary>
        /// 系统商编号  该参数作为系统商返佣数据提取的依据，请填写系统商签约协议的PID
        /// </summary>
        /// <value>系统商编号  该参数作为系统商返佣数据提取的依据，请填写系统商签约协议的PID</value>
        [DataMember(Name = "sys_service_provider_id", EmitDefaultValue = false)]
        public string SysServiceProviderId { get; set; }

        /// <summary>
        /// 公域商品交易分期单ID，小程序交易组件订单特殊场景使用，请传入 订单分期接口(alipay.open.mini.order.installment.create)中返回的installment_order_id
        /// </summary>
        /// <value>公域商品交易分期单ID，小程序交易组件订单特殊场景使用，请传入 订单分期接口(alipay.open.mini.order.installment.create)中返回的installment_order_id</value>
        [DataMember(Name = "tc_installment_order_id", EmitDefaultValue = false)]
        public string TcInstallmentOrderId { get; set; }

        /// <summary>
        /// 公域商品交易业务订单ID
        /// </summary>
        /// <value>公域商品交易业务订单ID</value>
        [DataMember(Name = "trade_component_order_id", EmitDefaultValue = false)]
        public string TradeComponentOrderId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ExtendParams {\n");
            sb.Append("  CardType: ").Append(CardType).Append("\n");
            sb.Append("  CreditExtInfo: ").Append(CreditExtInfo).Append("\n");
            sb.Append("  HbFqNum: ").Append(HbFqNum).Append("\n");
            sb.Append("  HbFqSellerPercent: ").Append(HbFqSellerPercent).Append("\n");
            sb.Append("  IndustryRefluxInfo: ").Append(IndustryRefluxInfo).Append("\n");
            sb.Append("  RoyaltyFreeze: ").Append(RoyaltyFreeze).Append("\n");
            sb.Append("  SpecifiedSellerName: ").Append(SpecifiedSellerName).Append("\n");
            sb.Append("  SysServiceProviderId: ").Append(SysServiceProviderId).Append("\n");
            sb.Append("  TcInstallmentOrderId: ").Append(TcInstallmentOrderId).Append("\n");
            sb.Append("  TradeComponentOrderId: ").Append(TradeComponentOrderId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ExtendParams);
        }

        /// <summary>
        /// Returns true if ExtendParams instances are equal
        /// </summary>
        /// <param name="input">Instance of ExtendParams to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ExtendParams input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.CardType == input.CardType ||
                    (this.CardType != null &&
                    this.CardType.Equals(input.CardType))
                ) && 
                (
                    this.CreditExtInfo == input.CreditExtInfo ||
                    (this.CreditExtInfo != null &&
                    this.CreditExtInfo.Equals(input.CreditExtInfo))
                ) && 
                (
                    this.HbFqNum == input.HbFqNum ||
                    (this.HbFqNum != null &&
                    this.HbFqNum.Equals(input.HbFqNum))
                ) && 
                (
                    this.HbFqSellerPercent == input.HbFqSellerPercent ||
                    (this.HbFqSellerPercent != null &&
                    this.HbFqSellerPercent.Equals(input.HbFqSellerPercent))
                ) && 
                (
                    this.IndustryRefluxInfo == input.IndustryRefluxInfo ||
                    (this.IndustryRefluxInfo != null &&
                    this.IndustryRefluxInfo.Equals(input.IndustryRefluxInfo))
                ) && 
                (
                    this.RoyaltyFreeze == input.RoyaltyFreeze ||
                    (this.RoyaltyFreeze != null &&
                    this.RoyaltyFreeze.Equals(input.RoyaltyFreeze))
                ) && 
                (
                    this.SpecifiedSellerName == input.SpecifiedSellerName ||
                    (this.SpecifiedSellerName != null &&
                    this.SpecifiedSellerName.Equals(input.SpecifiedSellerName))
                ) && 
                (
                    this.SysServiceProviderId == input.SysServiceProviderId ||
                    (this.SysServiceProviderId != null &&
                    this.SysServiceProviderId.Equals(input.SysServiceProviderId))
                ) && 
                (
                    this.TcInstallmentOrderId == input.TcInstallmentOrderId ||
                    (this.TcInstallmentOrderId != null &&
                    this.TcInstallmentOrderId.Equals(input.TcInstallmentOrderId))
                ) && 
                (
                    this.TradeComponentOrderId == input.TradeComponentOrderId ||
                    (this.TradeComponentOrderId != null &&
                    this.TradeComponentOrderId.Equals(input.TradeComponentOrderId))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.CardType != null)
                {
                    hashCode = (hashCode * 59) + this.CardType.GetHashCode();
                }
                if (this.CreditExtInfo != null)
                {
                    hashCode = (hashCode * 59) + this.CreditExtInfo.GetHashCode();
                }
                if (this.HbFqNum != null)
                {
                    hashCode = (hashCode * 59) + this.HbFqNum.GetHashCode();
                }
                if (this.HbFqSellerPercent != null)
                {
                    hashCode = (hashCode * 59) + this.HbFqSellerPercent.GetHashCode();
                }
                if (this.IndustryRefluxInfo != null)
                {
                    hashCode = (hashCode * 59) + this.IndustryRefluxInfo.GetHashCode();
                }
                if (this.RoyaltyFreeze != null)
                {
                    hashCode = (hashCode * 59) + this.RoyaltyFreeze.GetHashCode();
                }
                if (this.SpecifiedSellerName != null)
                {
                    hashCode = (hashCode * 59) + this.SpecifiedSellerName.GetHashCode();
                }
                if (this.SysServiceProviderId != null)
                {
                    hashCode = (hashCode * 59) + this.SysServiceProviderId.GetHashCode();
                }
                if (this.TcInstallmentOrderId != null)
                {
                    hashCode = (hashCode * 59) + this.TcInstallmentOrderId.GetHashCode();
                }
                if (this.TradeComponentOrderId != null)
                {
                    hashCode = (hashCode * 59) + this.TradeComponentOrderId.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
