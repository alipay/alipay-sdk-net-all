/*
 * 支付宝开放平台API
 *
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2025-02-19
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = AlipaySDKNet.OpenAPI.Client.OpenAPIDateConverter;

namespace AlipaySDKNet.OpenAPI.Model
{
    /// <summary>
    /// AlipayEbppPdeductSignAddResponseModel
    /// </summary>
    [DataContract(Name = "AlipayEbppPdeductSignAddResponseModel")]
    public partial class AlipayEbppPdeductSignAddResponseModel : IEquatable<AlipayEbppPdeductSignAddResponseModel>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AlipayEbppPdeductSignAddResponseModel" /> class.
        /// </summary>
        /// <param name="agreementId">支付宝代扣协议ID.</param>
        /// <param name="agreementStatus">支付宝协议状态。签约成功则返回success.</param>
        /// <param name="extendField">扩展参数，可为空.</param>
        /// <param name="notifyConfig">通知方式设置。.</param>
        /// <param name="outAgreementId">商户生成的代扣协议ID.</param>
        /// <param name="payConfig">支付方式设置.</param>
        /// <param name="signDate">签约时间.</param>
        public AlipayEbppPdeductSignAddResponseModel(string agreementId = default(string), string agreementStatus = default(string), string extendField = default(string), string notifyConfig = default(string), string outAgreementId = default(string), List<string> payConfig = default(List<string>), string signDate = default(string))
        {
            this.AgreementId = agreementId;
            this.AgreementStatus = agreementStatus;
            this.ExtendField = extendField;
            this.NotifyConfig = notifyConfig;
            this.OutAgreementId = outAgreementId;
            this.PayConfig = payConfig;
            this.SignDate = signDate;
        }

        /// <summary>
        /// 支付宝代扣协议ID
        /// </summary>
        /// <value>支付宝代扣协议ID</value>
        [DataMember(Name = "agreement_id", EmitDefaultValue = false)]
        public string AgreementId { get; set; }

        /// <summary>
        /// 支付宝协议状态。签约成功则返回success
        /// </summary>
        /// <value>支付宝协议状态。签约成功则返回success</value>
        [DataMember(Name = "agreement_status", EmitDefaultValue = false)]
        public string AgreementStatus { get; set; }

        /// <summary>
        /// 扩展参数，可为空
        /// </summary>
        /// <value>扩展参数，可为空</value>
        [DataMember(Name = "extend_field", EmitDefaultValue = false)]
        public string ExtendField { get; set; }

        /// <summary>
        /// 通知方式设置。
        /// </summary>
        /// <value>通知方式设置。</value>
        [DataMember(Name = "notify_config", EmitDefaultValue = false)]
        public string NotifyConfig { get; set; }

        /// <summary>
        /// 商户生成的代扣协议ID
        /// </summary>
        /// <value>商户生成的代扣协议ID</value>
        [DataMember(Name = "out_agreement_id", EmitDefaultValue = false)]
        public string OutAgreementId { get; set; }

        /// <summary>
        /// 支付方式设置
        /// </summary>
        /// <value>支付方式设置</value>
        [DataMember(Name = "pay_config", EmitDefaultValue = false)]
        public List<string> PayConfig { get; set; }

        /// <summary>
        /// 签约时间
        /// </summary>
        /// <value>签约时间</value>
        [DataMember(Name = "sign_date", EmitDefaultValue = false)]
        public string SignDate { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class AlipayEbppPdeductSignAddResponseModel {\n");
            sb.Append("  AgreementId: ").Append(AgreementId).Append("\n");
            sb.Append("  AgreementStatus: ").Append(AgreementStatus).Append("\n");
            sb.Append("  ExtendField: ").Append(ExtendField).Append("\n");
            sb.Append("  NotifyConfig: ").Append(NotifyConfig).Append("\n");
            sb.Append("  OutAgreementId: ").Append(OutAgreementId).Append("\n");
            sb.Append("  PayConfig: ").Append(PayConfig).Append("\n");
            sb.Append("  SignDate: ").Append(SignDate).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as AlipayEbppPdeductSignAddResponseModel);
        }

        /// <summary>
        /// Returns true if AlipayEbppPdeductSignAddResponseModel instances are equal
        /// </summary>
        /// <param name="input">Instance of AlipayEbppPdeductSignAddResponseModel to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AlipayEbppPdeductSignAddResponseModel input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.AgreementId == input.AgreementId ||
                    (this.AgreementId != null &&
                    this.AgreementId.Equals(input.AgreementId))
                ) && 
                (
                    this.AgreementStatus == input.AgreementStatus ||
                    (this.AgreementStatus != null &&
                    this.AgreementStatus.Equals(input.AgreementStatus))
                ) && 
                (
                    this.ExtendField == input.ExtendField ||
                    (this.ExtendField != null &&
                    this.ExtendField.Equals(input.ExtendField))
                ) && 
                (
                    this.NotifyConfig == input.NotifyConfig ||
                    (this.NotifyConfig != null &&
                    this.NotifyConfig.Equals(input.NotifyConfig))
                ) && 
                (
                    this.OutAgreementId == input.OutAgreementId ||
                    (this.OutAgreementId != null &&
                    this.OutAgreementId.Equals(input.OutAgreementId))
                ) && 
                (
                    this.PayConfig == input.PayConfig ||
                    this.PayConfig != null &&
                    input.PayConfig != null &&
                    this.PayConfig.SequenceEqual(input.PayConfig)
                ) && 
                (
                    this.SignDate == input.SignDate ||
                    (this.SignDate != null &&
                    this.SignDate.Equals(input.SignDate))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.AgreementId != null)
                {
                    hashCode = (hashCode * 59) + this.AgreementId.GetHashCode();
                }
                if (this.AgreementStatus != null)
                {
                    hashCode = (hashCode * 59) + this.AgreementStatus.GetHashCode();
                }
                if (this.ExtendField != null)
                {
                    hashCode = (hashCode * 59) + this.ExtendField.GetHashCode();
                }
                if (this.NotifyConfig != null)
                {
                    hashCode = (hashCode * 59) + this.NotifyConfig.GetHashCode();
                }
                if (this.OutAgreementId != null)
                {
                    hashCode = (hashCode * 59) + this.OutAgreementId.GetHashCode();
                }
                if (this.PayConfig != null)
                {
                    hashCode = (hashCode * 59) + this.PayConfig.GetHashCode();
                }
                if (this.SignDate != null)
                {
                    hashCode = (hashCode * 59) + this.SignDate.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
