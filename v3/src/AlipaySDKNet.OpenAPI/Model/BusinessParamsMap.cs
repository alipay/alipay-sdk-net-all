/*
 * 支付宝开放平台API
 *
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2025-02-19
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = AlipaySDKNet.OpenAPI.Client.OpenAPIDateConverter;

namespace AlipaySDKNet.OpenAPI.Model
{
    /// <summary>
    /// BusinessParamsMap
    /// </summary>
    [DataContract(Name = "BusinessParamsMap")]
    public partial class BusinessParamsMap : IEquatable<BusinessParamsMap>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="BusinessParamsMap" /> class.
        /// </summary>
        /// <param name="changeTime">服务变更时间.</param>
        /// <param name="newAmount">服务变更后新金额.</param>
        /// <param name="oriAmount">原始价格.</param>
        public BusinessParamsMap(string changeTime = default(string), string newAmount = default(string), string oriAmount = default(string))
        {
            this.ChangeTime = changeTime;
            this.NewAmount = newAmount;
            this.OriAmount = oriAmount;
        }

        /// <summary>
        /// 服务变更时间
        /// </summary>
        /// <value>服务变更时间</value>
        [DataMember(Name = "change_time", EmitDefaultValue = false)]
        public string ChangeTime { get; set; }

        /// <summary>
        /// 服务变更后新金额
        /// </summary>
        /// <value>服务变更后新金额</value>
        [DataMember(Name = "new_amount", EmitDefaultValue = false)]
        public string NewAmount { get; set; }

        /// <summary>
        /// 原始价格
        /// </summary>
        /// <value>原始价格</value>
        [DataMember(Name = "ori_amount", EmitDefaultValue = false)]
        public string OriAmount { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class BusinessParamsMap {\n");
            sb.Append("  ChangeTime: ").Append(ChangeTime).Append("\n");
            sb.Append("  NewAmount: ").Append(NewAmount).Append("\n");
            sb.Append("  OriAmount: ").Append(OriAmount).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as BusinessParamsMap);
        }

        /// <summary>
        /// Returns true if BusinessParamsMap instances are equal
        /// </summary>
        /// <param name="input">Instance of BusinessParamsMap to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(BusinessParamsMap input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.ChangeTime == input.ChangeTime ||
                    (this.ChangeTime != null &&
                    this.ChangeTime.Equals(input.ChangeTime))
                ) && 
                (
                    this.NewAmount == input.NewAmount ||
                    (this.NewAmount != null &&
                    this.NewAmount.Equals(input.NewAmount))
                ) && 
                (
                    this.OriAmount == input.OriAmount ||
                    (this.OriAmount != null &&
                    this.OriAmount.Equals(input.OriAmount))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ChangeTime != null)
                {
                    hashCode = (hashCode * 59) + this.ChangeTime.GetHashCode();
                }
                if (this.NewAmount != null)
                {
                    hashCode = (hashCode * 59) + this.NewAmount.GetHashCode();
                }
                if (this.OriAmount != null)
                {
                    hashCode = (hashCode * 59) + this.OriAmount.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
