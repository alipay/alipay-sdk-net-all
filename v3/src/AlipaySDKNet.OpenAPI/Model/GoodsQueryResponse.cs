/*
 * 支付宝开放平台API
 *
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2025-02-19
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = AlipaySDKNet.OpenAPI.Client.OpenAPIDateConverter;

namespace AlipaySDKNet.OpenAPI.Model
{
    /// <summary>
    /// GoodsQueryResponse
    /// </summary>
    [DataContract(Name = "GoodsQueryResponse")]
    public partial class GoodsQueryResponse : IEquatable<GoodsQueryResponse>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="GoodsQueryResponse" /> class.
        /// </summary>
        /// <param name="alipayGoodsId">支付宝内部商品唯一标识.</param>
        /// <param name="buyingUrl">该商品的小程序购买链接.</param>
        /// <param name="goodsComment">商品辅助说明文案.</param>
        /// <param name="goodsDescriptionLabel">商品说明标签（如-随心退）.</param>
        /// <param name="goodsId">商品的唯一标识，同一个小部件下，该标识唯一，请开发者自行保证.</param>
        /// <param name="goodsLabel">营销标签（如-限量特价），每个商品仅支持一个营销标签.</param>
        /// <param name="goodsName">商品名称.</param>
        /// <param name="goodsType">商品所属品类.</param>
        /// <param name="mainPicUrl">商品主图片地址.</param>
        /// <param name="miniAppId">小程序ID.</param>
        /// <param name="orderNumber">商品排序，自然整数, 数字越小越靠前.</param>
        /// <param name="originalPrice">单位\&quot;元\&quot;的商品原价，传入数字，不需要传入\&quot;元\&quot;.</param>
        /// <param name="pid">品的售卖商家，即承接该品的小程序背后的商家。和mini_app_id要求对应.</param>
        /// <param name="publishCities">投放城市的列表，详见https://www.mca.gov.cn/article/sj/xzqh/2020/2020/202007170301.html，有多个用英文,分隔。如果没有限制则不传入.</param>
        /// <param name="remainingQuantity">剩余库存.</param>
        /// <param name="sellPrice">单位\&quot;元\&quot;的售价，传入数字，不需要传入\&quot;元\&quot;.</param>
        /// <param name="soldQuantity">已售数量.</param>
        /// <param name="totalQuantity">总库存量.</param>
        public GoodsQueryResponse(string alipayGoodsId = default(string), string buyingUrl = default(string), string goodsComment = default(string), string goodsDescriptionLabel = default(string), string goodsId = default(string), string goodsLabel = default(string), string goodsName = default(string), string goodsType = default(string), string mainPicUrl = default(string), string miniAppId = default(string), string orderNumber = default(string), string originalPrice = default(string), string pid = default(string), string publishCities = default(string), int remainingQuantity = default(int), string sellPrice = default(string), int soldQuantity = default(int), string totalQuantity = default(string))
        {
            this.AlipayGoodsId = alipayGoodsId;
            this.BuyingUrl = buyingUrl;
            this.GoodsComment = goodsComment;
            this.GoodsDescriptionLabel = goodsDescriptionLabel;
            this.GoodsId = goodsId;
            this.GoodsLabel = goodsLabel;
            this.GoodsName = goodsName;
            this.GoodsType = goodsType;
            this.MainPicUrl = mainPicUrl;
            this.MiniAppId = miniAppId;
            this.OrderNumber = orderNumber;
            this.OriginalPrice = originalPrice;
            this.Pid = pid;
            this.PublishCities = publishCities;
            this.RemainingQuantity = remainingQuantity;
            this.SellPrice = sellPrice;
            this.SoldQuantity = soldQuantity;
            this.TotalQuantity = totalQuantity;
        }

        /// <summary>
        /// 支付宝内部商品唯一标识
        /// </summary>
        /// <value>支付宝内部商品唯一标识</value>
        [DataMember(Name = "alipay_goods_id", EmitDefaultValue = false)]
        public string AlipayGoodsId { get; set; }

        /// <summary>
        /// 该商品的小程序购买链接
        /// </summary>
        /// <value>该商品的小程序购买链接</value>
        [DataMember(Name = "buying_url", EmitDefaultValue = false)]
        public string BuyingUrl { get; set; }

        /// <summary>
        /// 商品辅助说明文案
        /// </summary>
        /// <value>商品辅助说明文案</value>
        [DataMember(Name = "goods_comment", EmitDefaultValue = false)]
        public string GoodsComment { get; set; }

        /// <summary>
        /// 商品说明标签（如-随心退）
        /// </summary>
        /// <value>商品说明标签（如-随心退）</value>
        [DataMember(Name = "goods_description_label", EmitDefaultValue = false)]
        public string GoodsDescriptionLabel { get; set; }

        /// <summary>
        /// 商品的唯一标识，同一个小部件下，该标识唯一，请开发者自行保证
        /// </summary>
        /// <value>商品的唯一标识，同一个小部件下，该标识唯一，请开发者自行保证</value>
        [DataMember(Name = "goods_id", EmitDefaultValue = false)]
        public string GoodsId { get; set; }

        /// <summary>
        /// 营销标签（如-限量特价），每个商品仅支持一个营销标签
        /// </summary>
        /// <value>营销标签（如-限量特价），每个商品仅支持一个营销标签</value>
        [DataMember(Name = "goods_label", EmitDefaultValue = false)]
        public string GoodsLabel { get; set; }

        /// <summary>
        /// 商品名称
        /// </summary>
        /// <value>商品名称</value>
        [DataMember(Name = "goods_name", EmitDefaultValue = false)]
        public string GoodsName { get; set; }

        /// <summary>
        /// 商品所属品类
        /// </summary>
        /// <value>商品所属品类</value>
        [DataMember(Name = "goods_type", EmitDefaultValue = false)]
        public string GoodsType { get; set; }

        /// <summary>
        /// 商品主图片地址
        /// </summary>
        /// <value>商品主图片地址</value>
        [DataMember(Name = "main_pic_url", EmitDefaultValue = false)]
        public string MainPicUrl { get; set; }

        /// <summary>
        /// 小程序ID
        /// </summary>
        /// <value>小程序ID</value>
        [DataMember(Name = "mini_app_id", EmitDefaultValue = false)]
        public string MiniAppId { get; set; }

        /// <summary>
        /// 商品排序，自然整数, 数字越小越靠前
        /// </summary>
        /// <value>商品排序，自然整数, 数字越小越靠前</value>
        [DataMember(Name = "order_number", EmitDefaultValue = false)]
        public string OrderNumber { get; set; }

        /// <summary>
        /// 单位\&quot;元\&quot;的商品原价，传入数字，不需要传入\&quot;元\&quot;
        /// </summary>
        /// <value>单位\&quot;元\&quot;的商品原价，传入数字，不需要传入\&quot;元\&quot;</value>
        [DataMember(Name = "original_price", EmitDefaultValue = false)]
        public string OriginalPrice { get; set; }

        /// <summary>
        /// 品的售卖商家，即承接该品的小程序背后的商家。和mini_app_id要求对应
        /// </summary>
        /// <value>品的售卖商家，即承接该品的小程序背后的商家。和mini_app_id要求对应</value>
        [DataMember(Name = "pid", EmitDefaultValue = false)]
        public string Pid { get; set; }

        /// <summary>
        /// 投放城市的列表，详见https://www.mca.gov.cn/article/sj/xzqh/2020/2020/202007170301.html，有多个用英文,分隔。如果没有限制则不传入
        /// </summary>
        /// <value>投放城市的列表，详见https://www.mca.gov.cn/article/sj/xzqh/2020/2020/202007170301.html，有多个用英文,分隔。如果没有限制则不传入</value>
        [DataMember(Name = "publish_cities", EmitDefaultValue = false)]
        public string PublishCities { get; set; }

        /// <summary>
        /// 剩余库存
        /// </summary>
        /// <value>剩余库存</value>
        [DataMember(Name = "remaining_quantity", EmitDefaultValue = false)]
        public int RemainingQuantity { get; set; }

        /// <summary>
        /// 单位\&quot;元\&quot;的售价，传入数字，不需要传入\&quot;元\&quot;
        /// </summary>
        /// <value>单位\&quot;元\&quot;的售价，传入数字，不需要传入\&quot;元\&quot;</value>
        [DataMember(Name = "sell_price", EmitDefaultValue = false)]
        public string SellPrice { get; set; }

        /// <summary>
        /// 已售数量
        /// </summary>
        /// <value>已售数量</value>
        [DataMember(Name = "sold_quantity", EmitDefaultValue = false)]
        public int SoldQuantity { get; set; }

        /// <summary>
        /// 总库存量
        /// </summary>
        /// <value>总库存量</value>
        [DataMember(Name = "total_quantity", EmitDefaultValue = false)]
        public string TotalQuantity { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class GoodsQueryResponse {\n");
            sb.Append("  AlipayGoodsId: ").Append(AlipayGoodsId).Append("\n");
            sb.Append("  BuyingUrl: ").Append(BuyingUrl).Append("\n");
            sb.Append("  GoodsComment: ").Append(GoodsComment).Append("\n");
            sb.Append("  GoodsDescriptionLabel: ").Append(GoodsDescriptionLabel).Append("\n");
            sb.Append("  GoodsId: ").Append(GoodsId).Append("\n");
            sb.Append("  GoodsLabel: ").Append(GoodsLabel).Append("\n");
            sb.Append("  GoodsName: ").Append(GoodsName).Append("\n");
            sb.Append("  GoodsType: ").Append(GoodsType).Append("\n");
            sb.Append("  MainPicUrl: ").Append(MainPicUrl).Append("\n");
            sb.Append("  MiniAppId: ").Append(MiniAppId).Append("\n");
            sb.Append("  OrderNumber: ").Append(OrderNumber).Append("\n");
            sb.Append("  OriginalPrice: ").Append(OriginalPrice).Append("\n");
            sb.Append("  Pid: ").Append(Pid).Append("\n");
            sb.Append("  PublishCities: ").Append(PublishCities).Append("\n");
            sb.Append("  RemainingQuantity: ").Append(RemainingQuantity).Append("\n");
            sb.Append("  SellPrice: ").Append(SellPrice).Append("\n");
            sb.Append("  SoldQuantity: ").Append(SoldQuantity).Append("\n");
            sb.Append("  TotalQuantity: ").Append(TotalQuantity).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as GoodsQueryResponse);
        }

        /// <summary>
        /// Returns true if GoodsQueryResponse instances are equal
        /// </summary>
        /// <param name="input">Instance of GoodsQueryResponse to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(GoodsQueryResponse input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.AlipayGoodsId == input.AlipayGoodsId ||
                    (this.AlipayGoodsId != null &&
                    this.AlipayGoodsId.Equals(input.AlipayGoodsId))
                ) && 
                (
                    this.BuyingUrl == input.BuyingUrl ||
                    (this.BuyingUrl != null &&
                    this.BuyingUrl.Equals(input.BuyingUrl))
                ) && 
                (
                    this.GoodsComment == input.GoodsComment ||
                    (this.GoodsComment != null &&
                    this.GoodsComment.Equals(input.GoodsComment))
                ) && 
                (
                    this.GoodsDescriptionLabel == input.GoodsDescriptionLabel ||
                    (this.GoodsDescriptionLabel != null &&
                    this.GoodsDescriptionLabel.Equals(input.GoodsDescriptionLabel))
                ) && 
                (
                    this.GoodsId == input.GoodsId ||
                    (this.GoodsId != null &&
                    this.GoodsId.Equals(input.GoodsId))
                ) && 
                (
                    this.GoodsLabel == input.GoodsLabel ||
                    (this.GoodsLabel != null &&
                    this.GoodsLabel.Equals(input.GoodsLabel))
                ) && 
                (
                    this.GoodsName == input.GoodsName ||
                    (this.GoodsName != null &&
                    this.GoodsName.Equals(input.GoodsName))
                ) && 
                (
                    this.GoodsType == input.GoodsType ||
                    (this.GoodsType != null &&
                    this.GoodsType.Equals(input.GoodsType))
                ) && 
                (
                    this.MainPicUrl == input.MainPicUrl ||
                    (this.MainPicUrl != null &&
                    this.MainPicUrl.Equals(input.MainPicUrl))
                ) && 
                (
                    this.MiniAppId == input.MiniAppId ||
                    (this.MiniAppId != null &&
                    this.MiniAppId.Equals(input.MiniAppId))
                ) && 
                (
                    this.OrderNumber == input.OrderNumber ||
                    (this.OrderNumber != null &&
                    this.OrderNumber.Equals(input.OrderNumber))
                ) && 
                (
                    this.OriginalPrice == input.OriginalPrice ||
                    (this.OriginalPrice != null &&
                    this.OriginalPrice.Equals(input.OriginalPrice))
                ) && 
                (
                    this.Pid == input.Pid ||
                    (this.Pid != null &&
                    this.Pid.Equals(input.Pid))
                ) && 
                (
                    this.PublishCities == input.PublishCities ||
                    (this.PublishCities != null &&
                    this.PublishCities.Equals(input.PublishCities))
                ) && 
                (
                    this.RemainingQuantity == input.RemainingQuantity ||
                    this.RemainingQuantity.Equals(input.RemainingQuantity)
                ) && 
                (
                    this.SellPrice == input.SellPrice ||
                    (this.SellPrice != null &&
                    this.SellPrice.Equals(input.SellPrice))
                ) && 
                (
                    this.SoldQuantity == input.SoldQuantity ||
                    this.SoldQuantity.Equals(input.SoldQuantity)
                ) && 
                (
                    this.TotalQuantity == input.TotalQuantity ||
                    (this.TotalQuantity != null &&
                    this.TotalQuantity.Equals(input.TotalQuantity))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.AlipayGoodsId != null)
                {
                    hashCode = (hashCode * 59) + this.AlipayGoodsId.GetHashCode();
                }
                if (this.BuyingUrl != null)
                {
                    hashCode = (hashCode * 59) + this.BuyingUrl.GetHashCode();
                }
                if (this.GoodsComment != null)
                {
                    hashCode = (hashCode * 59) + this.GoodsComment.GetHashCode();
                }
                if (this.GoodsDescriptionLabel != null)
                {
                    hashCode = (hashCode * 59) + this.GoodsDescriptionLabel.GetHashCode();
                }
                if (this.GoodsId != null)
                {
                    hashCode = (hashCode * 59) + this.GoodsId.GetHashCode();
                }
                if (this.GoodsLabel != null)
                {
                    hashCode = (hashCode * 59) + this.GoodsLabel.GetHashCode();
                }
                if (this.GoodsName != null)
                {
                    hashCode = (hashCode * 59) + this.GoodsName.GetHashCode();
                }
                if (this.GoodsType != null)
                {
                    hashCode = (hashCode * 59) + this.GoodsType.GetHashCode();
                }
                if (this.MainPicUrl != null)
                {
                    hashCode = (hashCode * 59) + this.MainPicUrl.GetHashCode();
                }
                if (this.MiniAppId != null)
                {
                    hashCode = (hashCode * 59) + this.MiniAppId.GetHashCode();
                }
                if (this.OrderNumber != null)
                {
                    hashCode = (hashCode * 59) + this.OrderNumber.GetHashCode();
                }
                if (this.OriginalPrice != null)
                {
                    hashCode = (hashCode * 59) + this.OriginalPrice.GetHashCode();
                }
                if (this.Pid != null)
                {
                    hashCode = (hashCode * 59) + this.Pid.GetHashCode();
                }
                if (this.PublishCities != null)
                {
                    hashCode = (hashCode * 59) + this.PublishCities.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.RemainingQuantity.GetHashCode();
                if (this.SellPrice != null)
                {
                    hashCode = (hashCode * 59) + this.SellPrice.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.SoldQuantity.GetHashCode();
                if (this.TotalQuantity != null)
                {
                    hashCode = (hashCode * 59) + this.TotalQuantity.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
