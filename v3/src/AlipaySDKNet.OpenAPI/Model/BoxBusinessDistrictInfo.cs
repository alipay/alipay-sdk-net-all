/*
 * 支付宝开放平台API
 *
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2025-02-19
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = AlipaySDKNet.OpenAPI.Client.OpenAPIDateConverter;

namespace AlipaySDKNet.OpenAPI.Model
{
    /// <summary>
    /// BoxBusinessDistrictInfo
    /// </summary>
    [DataContract(Name = "BoxBusinessDistrictInfo")]
    public partial class BoxBusinessDistrictInfo : IEquatable<BoxBusinessDistrictInfo>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="BoxBusinessDistrictInfo" /> class.
        /// </summary>
        /// <param name="appName">应用名.</param>
        /// <param name="businessDistrictId">商圈ID.</param>
        /// <param name="businessDistrictName">商圈名称.</param>
        /// <param name="relateAppid">商圈所属小程序对应的服务编码.</param>
        /// <param name="serviceCode">商圈所属小程序对应的服务编码.</param>
        public BoxBusinessDistrictInfo(string appName = default(string), string businessDistrictId = default(string), string businessDistrictName = default(string), string relateAppid = default(string), string serviceCode = default(string))
        {
            this.AppName = appName;
            this.BusinessDistrictId = businessDistrictId;
            this.BusinessDistrictName = businessDistrictName;
            this.RelateAppid = relateAppid;
            this.ServiceCode = serviceCode;
        }

        /// <summary>
        /// 应用名
        /// </summary>
        /// <value>应用名</value>
        [DataMember(Name = "app_name", EmitDefaultValue = false)]
        public string AppName { get; set; }

        /// <summary>
        /// 商圈ID
        /// </summary>
        /// <value>商圈ID</value>
        [DataMember(Name = "business_district_id", EmitDefaultValue = false)]
        public string BusinessDistrictId { get; set; }

        /// <summary>
        /// 商圈名称
        /// </summary>
        /// <value>商圈名称</value>
        [DataMember(Name = "business_district_name", EmitDefaultValue = false)]
        public string BusinessDistrictName { get; set; }

        /// <summary>
        /// 商圈所属小程序对应的服务编码
        /// </summary>
        /// <value>商圈所属小程序对应的服务编码</value>
        [DataMember(Name = "relate_appid", EmitDefaultValue = false)]
        public string RelateAppid { get; set; }

        /// <summary>
        /// 商圈所属小程序对应的服务编码
        /// </summary>
        /// <value>商圈所属小程序对应的服务编码</value>
        [DataMember(Name = "service_code", EmitDefaultValue = false)]
        public string ServiceCode { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class BoxBusinessDistrictInfo {\n");
            sb.Append("  AppName: ").Append(AppName).Append("\n");
            sb.Append("  BusinessDistrictId: ").Append(BusinessDistrictId).Append("\n");
            sb.Append("  BusinessDistrictName: ").Append(BusinessDistrictName).Append("\n");
            sb.Append("  RelateAppid: ").Append(RelateAppid).Append("\n");
            sb.Append("  ServiceCode: ").Append(ServiceCode).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as BoxBusinessDistrictInfo);
        }

        /// <summary>
        /// Returns true if BoxBusinessDistrictInfo instances are equal
        /// </summary>
        /// <param name="input">Instance of BoxBusinessDistrictInfo to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(BoxBusinessDistrictInfo input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.AppName == input.AppName ||
                    (this.AppName != null &&
                    this.AppName.Equals(input.AppName))
                ) && 
                (
                    this.BusinessDistrictId == input.BusinessDistrictId ||
                    (this.BusinessDistrictId != null &&
                    this.BusinessDistrictId.Equals(input.BusinessDistrictId))
                ) && 
                (
                    this.BusinessDistrictName == input.BusinessDistrictName ||
                    (this.BusinessDistrictName != null &&
                    this.BusinessDistrictName.Equals(input.BusinessDistrictName))
                ) && 
                (
                    this.RelateAppid == input.RelateAppid ||
                    (this.RelateAppid != null &&
                    this.RelateAppid.Equals(input.RelateAppid))
                ) && 
                (
                    this.ServiceCode == input.ServiceCode ||
                    (this.ServiceCode != null &&
                    this.ServiceCode.Equals(input.ServiceCode))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.AppName != null)
                {
                    hashCode = (hashCode * 59) + this.AppName.GetHashCode();
                }
                if (this.BusinessDistrictId != null)
                {
                    hashCode = (hashCode * 59) + this.BusinessDistrictId.GetHashCode();
                }
                if (this.BusinessDistrictName != null)
                {
                    hashCode = (hashCode * 59) + this.BusinessDistrictName.GetHashCode();
                }
                if (this.RelateAppid != null)
                {
                    hashCode = (hashCode * 59) + this.RelateAppid.GetHashCode();
                }
                if (this.ServiceCode != null)
                {
                    hashCode = (hashCode * 59) + this.ServiceCode.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
