/*
 * 支付宝开放平台API
 *
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2025-09-04
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = AlipaySDKNet.OpenAPI.Client.OpenAPIDateConverter;

namespace AlipaySDKNet.OpenAPI.Model
{
    /// <summary>
    /// ReliableEnterpriseProfilesDTO
    /// </summary>
    [DataContract(Name = "ReliableEnterpriseProfilesDTO")]
    public partial class ReliableEnterpriseProfilesDTO : IEquatable<ReliableEnterpriseProfilesDTO>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ReliableEnterpriseProfilesDTO" /> class.
        /// </summary>
        /// <param name="accessChannel">企业注册来源渠道.</param>
        /// <param name="activityLevel">企业在来源渠道（如钉钉）的活跃度.</param>
        /// <param name="authType">企业在来源渠道（如钉钉）的认证类型.</param>
        /// <param name="bizLicenseNo">企业营业执照编码，适用于未三证合一的企业.</param>
        /// <param name="bizLicenseUrl">企业在来源渠道（如钉钉）的营业执照照片URL.</param>
        /// <param name="countEmployee">企业当前的员工数规模区间.</param>
        /// <param name="legalPersonCertNo">企业法人的身份证号码.</param>
        /// <param name="platformGmtCreate">企业在来源渠道（如钉钉）的注册时间.</param>
        /// <param name="taxNo">企业纳税人识别号，适用于未三证合一的企业.</param>
        public ReliableEnterpriseProfilesDTO(string accessChannel = default(string), string activityLevel = default(string), string authType = default(string), string bizLicenseNo = default(string), string bizLicenseUrl = default(string), string countEmployee = default(string), string legalPersonCertNo = default(string), string platformGmtCreate = default(string), string taxNo = default(string))
        {
            this.AccessChannel = accessChannel;
            this.ActivityLevel = activityLevel;
            this.AuthType = authType;
            this.BizLicenseNo = bizLicenseNo;
            this.BizLicenseUrl = bizLicenseUrl;
            this.CountEmployee = countEmployee;
            this.LegalPersonCertNo = legalPersonCertNo;
            this.PlatformGmtCreate = platformGmtCreate;
            this.TaxNo = taxNo;
        }

        /// <summary>
        /// 企业注册来源渠道
        /// </summary>
        /// <value>企业注册来源渠道</value>
        [DataMember(Name = "access_channel", EmitDefaultValue = false)]
        public string AccessChannel { get; set; }

        /// <summary>
        /// 企业在来源渠道（如钉钉）的活跃度
        /// </summary>
        /// <value>企业在来源渠道（如钉钉）的活跃度</value>
        [DataMember(Name = "activity_level", EmitDefaultValue = false)]
        public string ActivityLevel { get; set; }

        /// <summary>
        /// 企业在来源渠道（如钉钉）的认证类型
        /// </summary>
        /// <value>企业在来源渠道（如钉钉）的认证类型</value>
        [DataMember(Name = "auth_type", EmitDefaultValue = false)]
        public string AuthType { get; set; }

        /// <summary>
        /// 企业营业执照编码，适用于未三证合一的企业
        /// </summary>
        /// <value>企业营业执照编码，适用于未三证合一的企业</value>
        [DataMember(Name = "biz_license_no", EmitDefaultValue = false)]
        public string BizLicenseNo { get; set; }

        /// <summary>
        /// 企业在来源渠道（如钉钉）的营业执照照片URL
        /// </summary>
        /// <value>企业在来源渠道（如钉钉）的营业执照照片URL</value>
        [DataMember(Name = "biz_license_url", EmitDefaultValue = false)]
        public string BizLicenseUrl { get; set; }

        /// <summary>
        /// 企业当前的员工数规模区间
        /// </summary>
        /// <value>企业当前的员工数规模区间</value>
        [DataMember(Name = "count_employee", EmitDefaultValue = false)]
        public string CountEmployee { get; set; }

        /// <summary>
        /// 企业法人的身份证号码
        /// </summary>
        /// <value>企业法人的身份证号码</value>
        [DataMember(Name = "legal_person_cert_no", EmitDefaultValue = false)]
        public string LegalPersonCertNo { get; set; }

        /// <summary>
        /// 企业在来源渠道（如钉钉）的注册时间
        /// </summary>
        /// <value>企业在来源渠道（如钉钉）的注册时间</value>
        [DataMember(Name = "platform_gmt_create", EmitDefaultValue = false)]
        public string PlatformGmtCreate { get; set; }

        /// <summary>
        /// 企业纳税人识别号，适用于未三证合一的企业
        /// </summary>
        /// <value>企业纳税人识别号，适用于未三证合一的企业</value>
        [DataMember(Name = "tax_no", EmitDefaultValue = false)]
        public string TaxNo { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ReliableEnterpriseProfilesDTO {\n");
            sb.Append("  AccessChannel: ").Append(AccessChannel).Append("\n");
            sb.Append("  ActivityLevel: ").Append(ActivityLevel).Append("\n");
            sb.Append("  AuthType: ").Append(AuthType).Append("\n");
            sb.Append("  BizLicenseNo: ").Append(BizLicenseNo).Append("\n");
            sb.Append("  BizLicenseUrl: ").Append(BizLicenseUrl).Append("\n");
            sb.Append("  CountEmployee: ").Append(CountEmployee).Append("\n");
            sb.Append("  LegalPersonCertNo: ").Append(LegalPersonCertNo).Append("\n");
            sb.Append("  PlatformGmtCreate: ").Append(PlatformGmtCreate).Append("\n");
            sb.Append("  TaxNo: ").Append(TaxNo).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ReliableEnterpriseProfilesDTO);
        }

        /// <summary>
        /// Returns true if ReliableEnterpriseProfilesDTO instances are equal
        /// </summary>
        /// <param name="input">Instance of ReliableEnterpriseProfilesDTO to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ReliableEnterpriseProfilesDTO input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.AccessChannel == input.AccessChannel ||
                    (this.AccessChannel != null &&
                    this.AccessChannel.Equals(input.AccessChannel))
                ) && 
                (
                    this.ActivityLevel == input.ActivityLevel ||
                    (this.ActivityLevel != null &&
                    this.ActivityLevel.Equals(input.ActivityLevel))
                ) && 
                (
                    this.AuthType == input.AuthType ||
                    (this.AuthType != null &&
                    this.AuthType.Equals(input.AuthType))
                ) && 
                (
                    this.BizLicenseNo == input.BizLicenseNo ||
                    (this.BizLicenseNo != null &&
                    this.BizLicenseNo.Equals(input.BizLicenseNo))
                ) && 
                (
                    this.BizLicenseUrl == input.BizLicenseUrl ||
                    (this.BizLicenseUrl != null &&
                    this.BizLicenseUrl.Equals(input.BizLicenseUrl))
                ) && 
                (
                    this.CountEmployee == input.CountEmployee ||
                    (this.CountEmployee != null &&
                    this.CountEmployee.Equals(input.CountEmployee))
                ) && 
                (
                    this.LegalPersonCertNo == input.LegalPersonCertNo ||
                    (this.LegalPersonCertNo != null &&
                    this.LegalPersonCertNo.Equals(input.LegalPersonCertNo))
                ) && 
                (
                    this.PlatformGmtCreate == input.PlatformGmtCreate ||
                    (this.PlatformGmtCreate != null &&
                    this.PlatformGmtCreate.Equals(input.PlatformGmtCreate))
                ) && 
                (
                    this.TaxNo == input.TaxNo ||
                    (this.TaxNo != null &&
                    this.TaxNo.Equals(input.TaxNo))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.AccessChannel != null)
                {
                    hashCode = (hashCode * 59) + this.AccessChannel.GetHashCode();
                }
                if (this.ActivityLevel != null)
                {
                    hashCode = (hashCode * 59) + this.ActivityLevel.GetHashCode();
                }
                if (this.AuthType != null)
                {
                    hashCode = (hashCode * 59) + this.AuthType.GetHashCode();
                }
                if (this.BizLicenseNo != null)
                {
                    hashCode = (hashCode * 59) + this.BizLicenseNo.GetHashCode();
                }
                if (this.BizLicenseUrl != null)
                {
                    hashCode = (hashCode * 59) + this.BizLicenseUrl.GetHashCode();
                }
                if (this.CountEmployee != null)
                {
                    hashCode = (hashCode * 59) + this.CountEmployee.GetHashCode();
                }
                if (this.LegalPersonCertNo != null)
                {
                    hashCode = (hashCode * 59) + this.LegalPersonCertNo.GetHashCode();
                }
                if (this.PlatformGmtCreate != null)
                {
                    hashCode = (hashCode * 59) + this.PlatformGmtCreate.GetHashCode();
                }
                if (this.TaxNo != null)
                {
                    hashCode = (hashCode * 59) + this.TaxNo.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
