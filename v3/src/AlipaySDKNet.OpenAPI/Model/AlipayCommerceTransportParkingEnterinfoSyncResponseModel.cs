/*
 * 支付宝开放平台API
 *
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2025-02-19
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = AlipaySDKNet.OpenAPI.Client.OpenAPIDateConverter;

namespace AlipaySDKNet.OpenAPI.Model
{
    /// <summary>
    /// AlipayCommerceTransportParkingEnterinfoSyncResponseModel
    /// </summary>
    [DataContract(Name = "AlipayCommerceTransportParkingEnterinfoSyncResponseModel")]
    public partial class AlipayCommerceTransportParkingEnterinfoSyncResponseModel : IEquatable<AlipayCommerceTransportParkingEnterinfoSyncResponseModel>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AlipayCommerceTransportParkingEnterinfoSyncResponseModel" /> class.
        /// </summary>
        /// <param name="agreementScene">用户签约的代扣场景字符集，多个英文逗号分割，当车场为ORC识别车牌的场景，返回值包含PLATE_PAY时，表示代扣协议可用。 当车场为ETC设备识别车牌，返回值包含ETC_PAY时表示协议可用。当用户未签约任何代扣场景时返回NO_AGREEMENT_SCENE.</param>
        /// <param name="bizCode">具体错误code.</param>
        /// <param name="bizMsg">具体错误描述.</param>
        /// <param name="serialNo">支付宝停车纪录流水号，串联一次停车行为；.</param>
        public AlipayCommerceTransportParkingEnterinfoSyncResponseModel(string agreementScene = default(string), string bizCode = default(string), string bizMsg = default(string), string serialNo = default(string))
        {
            this.AgreementScene = agreementScene;
            this.BizCode = bizCode;
            this.BizMsg = bizMsg;
            this.SerialNo = serialNo;
        }

        /// <summary>
        /// 用户签约的代扣场景字符集，多个英文逗号分割，当车场为ORC识别车牌的场景，返回值包含PLATE_PAY时，表示代扣协议可用。 当车场为ETC设备识别车牌，返回值包含ETC_PAY时表示协议可用。当用户未签约任何代扣场景时返回NO_AGREEMENT_SCENE
        /// </summary>
        /// <value>用户签约的代扣场景字符集，多个英文逗号分割，当车场为ORC识别车牌的场景，返回值包含PLATE_PAY时，表示代扣协议可用。 当车场为ETC设备识别车牌，返回值包含ETC_PAY时表示协议可用。当用户未签约任何代扣场景时返回NO_AGREEMENT_SCENE</value>
        [DataMember(Name = "agreement_scene", EmitDefaultValue = false)]
        public string AgreementScene { get; set; }

        /// <summary>
        /// 具体错误code
        /// </summary>
        /// <value>具体错误code</value>
        [DataMember(Name = "biz_code", EmitDefaultValue = false)]
        public string BizCode { get; set; }

        /// <summary>
        /// 具体错误描述
        /// </summary>
        /// <value>具体错误描述</value>
        [DataMember(Name = "biz_msg", EmitDefaultValue = false)]
        public string BizMsg { get; set; }

        /// <summary>
        /// 支付宝停车纪录流水号，串联一次停车行为；
        /// </summary>
        /// <value>支付宝停车纪录流水号，串联一次停车行为；</value>
        [DataMember(Name = "serial_no", EmitDefaultValue = false)]
        public string SerialNo { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class AlipayCommerceTransportParkingEnterinfoSyncResponseModel {\n");
            sb.Append("  AgreementScene: ").Append(AgreementScene).Append("\n");
            sb.Append("  BizCode: ").Append(BizCode).Append("\n");
            sb.Append("  BizMsg: ").Append(BizMsg).Append("\n");
            sb.Append("  SerialNo: ").Append(SerialNo).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as AlipayCommerceTransportParkingEnterinfoSyncResponseModel);
        }

        /// <summary>
        /// Returns true if AlipayCommerceTransportParkingEnterinfoSyncResponseModel instances are equal
        /// </summary>
        /// <param name="input">Instance of AlipayCommerceTransportParkingEnterinfoSyncResponseModel to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AlipayCommerceTransportParkingEnterinfoSyncResponseModel input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.AgreementScene == input.AgreementScene ||
                    (this.AgreementScene != null &&
                    this.AgreementScene.Equals(input.AgreementScene))
                ) && 
                (
                    this.BizCode == input.BizCode ||
                    (this.BizCode != null &&
                    this.BizCode.Equals(input.BizCode))
                ) && 
                (
                    this.BizMsg == input.BizMsg ||
                    (this.BizMsg != null &&
                    this.BizMsg.Equals(input.BizMsg))
                ) && 
                (
                    this.SerialNo == input.SerialNo ||
                    (this.SerialNo != null &&
                    this.SerialNo.Equals(input.SerialNo))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.AgreementScene != null)
                {
                    hashCode = (hashCode * 59) + this.AgreementScene.GetHashCode();
                }
                if (this.BizCode != null)
                {
                    hashCode = (hashCode * 59) + this.BizCode.GetHashCode();
                }
                if (this.BizMsg != null)
                {
                    hashCode = (hashCode * 59) + this.BizMsg.GetHashCode();
                }
                if (this.SerialNo != null)
                {
                    hashCode = (hashCode * 59) + this.SerialNo.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
