/*
 * 支付宝开放平台API
 *
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2025-02-19
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = AlipaySDKNet.OpenAPI.Client.OpenAPIDateConverter;

namespace AlipaySDKNet.OpenAPI.Model
{
    /// <summary>
    /// VoucherUseTimeRuleInfo
    /// </summary>
    [DataContract(Name = "VoucherUseTimeRuleInfo")]
    public partial class VoucherUseTimeRuleInfo : IEquatable<VoucherUseTimeRuleInfo>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="VoucherUseTimeRuleInfo" /> class.
        /// </summary>
        /// <param name="dateRuleInfo">dateRuleInfo.</param>
        /// <param name="holidayRuleInfo">holidayRuleInfo.</param>
        /// <param name="ruleType">规则类型.</param>
        /// <param name="weekRuleInfo">weekRuleInfo.</param>
        public VoucherUseTimeRuleInfo(DateRuleInfo dateRuleInfo = default(DateRuleInfo), HolidayRuleInfo holidayRuleInfo = default(HolidayRuleInfo), string ruleType = default(string), WeekRuleInfo weekRuleInfo = default(WeekRuleInfo))
        {
            this.DateRuleInfo = dateRuleInfo;
            this.HolidayRuleInfo = holidayRuleInfo;
            this.RuleType = ruleType;
            this.WeekRuleInfo = weekRuleInfo;
        }

        /// <summary>
        /// Gets or Sets DateRuleInfo
        /// </summary>
        [DataMember(Name = "date_rule_info", EmitDefaultValue = false)]
        public DateRuleInfo DateRuleInfo { get; set; }

        /// <summary>
        /// Gets or Sets HolidayRuleInfo
        /// </summary>
        [DataMember(Name = "holiday_rule_info", EmitDefaultValue = false)]
        public HolidayRuleInfo HolidayRuleInfo { get; set; }

        /// <summary>
        /// 规则类型
        /// </summary>
        /// <value>规则类型</value>
        [DataMember(Name = "rule_type", EmitDefaultValue = false)]
        public string RuleType { get; set; }

        /// <summary>
        /// Gets or Sets WeekRuleInfo
        /// </summary>
        [DataMember(Name = "week_rule_info", EmitDefaultValue = false)]
        public WeekRuleInfo WeekRuleInfo { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class VoucherUseTimeRuleInfo {\n");
            sb.Append("  DateRuleInfo: ").Append(DateRuleInfo).Append("\n");
            sb.Append("  HolidayRuleInfo: ").Append(HolidayRuleInfo).Append("\n");
            sb.Append("  RuleType: ").Append(RuleType).Append("\n");
            sb.Append("  WeekRuleInfo: ").Append(WeekRuleInfo).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as VoucherUseTimeRuleInfo);
        }

        /// <summary>
        /// Returns true if VoucherUseTimeRuleInfo instances are equal
        /// </summary>
        /// <param name="input">Instance of VoucherUseTimeRuleInfo to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(VoucherUseTimeRuleInfo input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.DateRuleInfo == input.DateRuleInfo ||
                    (this.DateRuleInfo != null &&
                    this.DateRuleInfo.Equals(input.DateRuleInfo))
                ) && 
                (
                    this.HolidayRuleInfo == input.HolidayRuleInfo ||
                    (this.HolidayRuleInfo != null &&
                    this.HolidayRuleInfo.Equals(input.HolidayRuleInfo))
                ) && 
                (
                    this.RuleType == input.RuleType ||
                    (this.RuleType != null &&
                    this.RuleType.Equals(input.RuleType))
                ) && 
                (
                    this.WeekRuleInfo == input.WeekRuleInfo ||
                    (this.WeekRuleInfo != null &&
                    this.WeekRuleInfo.Equals(input.WeekRuleInfo))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.DateRuleInfo != null)
                {
                    hashCode = (hashCode * 59) + this.DateRuleInfo.GetHashCode();
                }
                if (this.HolidayRuleInfo != null)
                {
                    hashCode = (hashCode * 59) + this.HolidayRuleInfo.GetHashCode();
                }
                if (this.RuleType != null)
                {
                    hashCode = (hashCode * 59) + this.RuleType.GetHashCode();
                }
                if (this.WeekRuleInfo != null)
                {
                    hashCode = (hashCode * 59) + this.WeekRuleInfo.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
