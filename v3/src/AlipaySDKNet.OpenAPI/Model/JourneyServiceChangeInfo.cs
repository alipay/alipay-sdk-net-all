/*
 * 支付宝开放平台API
 *
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2025-02-19
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = AlipaySDKNet.OpenAPI.Client.OpenAPIDateConverter;

namespace AlipaySDKNet.OpenAPI.Model
{
    /// <summary>
    /// JourneyServiceChangeInfo
    /// </summary>
    [DataContract(Name = "JourneyServiceChangeInfo")]
    public partial class JourneyServiceChangeInfo : IEquatable<JourneyServiceChangeInfo>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="JourneyServiceChangeInfo" /> class.
        /// </summary>
        /// <param name="changeStatus">变更状态.</param>
        /// <param name="detailUrl">详情url.</param>
        /// <param name="extInfo">扩展信息.</param>
        /// <param name="remindContent">提醒内容.</param>
        public JourneyServiceChangeInfo(string changeStatus = default(string), string detailUrl = default(string), List<OrderExtInfo> extInfo = default(List<OrderExtInfo>), string remindContent = default(string))
        {
            this.ChangeStatus = changeStatus;
            this.DetailUrl = detailUrl;
            this.ExtInfo = extInfo;
            this.RemindContent = remindContent;
        }

        /// <summary>
        /// 变更状态
        /// </summary>
        /// <value>变更状态</value>
        [DataMember(Name = "change_status", EmitDefaultValue = false)]
        public string ChangeStatus { get; set; }

        /// <summary>
        /// 详情url
        /// </summary>
        /// <value>详情url</value>
        [DataMember(Name = "detail_url", EmitDefaultValue = false)]
        public string DetailUrl { get; set; }

        /// <summary>
        /// 扩展信息
        /// </summary>
        /// <value>扩展信息</value>
        [DataMember(Name = "ext_info", EmitDefaultValue = false)]
        public List<OrderExtInfo> ExtInfo { get; set; }

        /// <summary>
        /// 提醒内容
        /// </summary>
        /// <value>提醒内容</value>
        [DataMember(Name = "remind_content", EmitDefaultValue = false)]
        public string RemindContent { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class JourneyServiceChangeInfo {\n");
            sb.Append("  ChangeStatus: ").Append(ChangeStatus).Append("\n");
            sb.Append("  DetailUrl: ").Append(DetailUrl).Append("\n");
            sb.Append("  ExtInfo: ").Append(ExtInfo).Append("\n");
            sb.Append("  RemindContent: ").Append(RemindContent).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as JourneyServiceChangeInfo);
        }

        /// <summary>
        /// Returns true if JourneyServiceChangeInfo instances are equal
        /// </summary>
        /// <param name="input">Instance of JourneyServiceChangeInfo to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(JourneyServiceChangeInfo input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.ChangeStatus == input.ChangeStatus ||
                    (this.ChangeStatus != null &&
                    this.ChangeStatus.Equals(input.ChangeStatus))
                ) && 
                (
                    this.DetailUrl == input.DetailUrl ||
                    (this.DetailUrl != null &&
                    this.DetailUrl.Equals(input.DetailUrl))
                ) && 
                (
                    this.ExtInfo == input.ExtInfo ||
                    this.ExtInfo != null &&
                    input.ExtInfo != null &&
                    this.ExtInfo.SequenceEqual(input.ExtInfo)
                ) && 
                (
                    this.RemindContent == input.RemindContent ||
                    (this.RemindContent != null &&
                    this.RemindContent.Equals(input.RemindContent))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ChangeStatus != null)
                {
                    hashCode = (hashCode * 59) + this.ChangeStatus.GetHashCode();
                }
                if (this.DetailUrl != null)
                {
                    hashCode = (hashCode * 59) + this.DetailUrl.GetHashCode();
                }
                if (this.ExtInfo != null)
                {
                    hashCode = (hashCode * 59) + this.ExtInfo.GetHashCode();
                }
                if (this.RemindContent != null)
                {
                    hashCode = (hashCode * 59) + this.RemindContent.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
