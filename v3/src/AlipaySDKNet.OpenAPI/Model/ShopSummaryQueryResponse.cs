/*
 * 支付宝开放平台API
 *
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2025-02-19
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = AlipaySDKNet.OpenAPI.Client.OpenAPIDateConverter;

namespace AlipaySDKNet.OpenAPI.Model
{
    /// <summary>
    /// ShopSummaryQueryResponse
    /// </summary>
    [DataContract(Name = "ShopSummaryQueryResponse")]
    public partial class ShopSummaryQueryResponse : IEquatable<ShopSummaryQueryResponse>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ShopSummaryQueryResponse" /> class.
        /// </summary>
        /// <param name="address">门店地址.</param>
        /// <param name="branchShopName">分店名.</param>
        /// <param name="brandName">品牌名，不填写则默认为其它品牌.</param>
        /// <param name="businessTime">经营时间.</param>
        /// <param name="categoryInfos">门店类目列表.</param>
        /// <param name="cityCode">城市编码，国标码，详见国家统计局数据 &lt;a href&#x3D;\&quot;http://aopsdkdownload.cn-hangzhou.alipay-pub.aliyun-inc.com/doc/AreaCodeList.zip\&quot;&gt;点此下载&lt;/a&gt;.</param>
        /// <param name="districtCode">区县编码，国标码，详见国家统计局数据 &lt;a href&#x3D;\&quot;http://aopsdkdownload.cn-hangzhou.alipay-pub.aliyun-inc.com/doc/AreaCodeList.zip\&quot;&gt;点此下载&lt;/a&gt;.</param>
        /// <param name="extInfo">json 字符串表示额外信息;    order_biz_mode: 点餐营业模式, REGULAR-正餐、LIGHT_FAST-轻快餐;  pre_order: 预点餐服务可用状态, 1-服务可用、0-服务不可用  order: 到店点餐服务可用状态：1-服务可用、0-服务不可用.</param>
        /// <param name="gmtCreate">创建时间.</param>
        /// <param name="isShow">门店是否在客户端显示，T表示显示，F表示隐藏.</param>
        /// <param name="latitude">纬度，只有在query_type&#x3D;KB_PROMOTER非空.</param>
        /// <param name="longitude">经度，只有在query_type&#x3D;KB_PROMOTER非空.</param>
        /// <param name="mainImage">门店首图.</param>
        /// <param name="mainShopName">主门店名.</param>
        /// <param name="perPay">人均价格。单位是分。例如：2000，表示20元.</param>
        /// <param name="picColl">图片集，是map转化成的json串，key是图片id,value是图片url.</param>
        /// <param name="provinceCode">省份编码，国标码，详见国家统计局数据 &lt;a href&#x3D;\&quot;http://aopsdkdownload.cn-hangzhou.alipay-pub.aliyun-inc.com/doc/AreaCodeList.zip\&quot;&gt;点此下载&lt;/a&gt;.</param>
        /// <param name="shopCommentInfo">shopCommentInfo.</param>
        /// <param name="shopId">门店ID.</param>
        /// <param name="shopType">COMMON（普通门店）、MALL（商圈）.</param>
        /// <param name="status">门店状态，OPEN：营业中、PAUSE：暂停营业、FREEZE：已冻结、CLOSE:门店已关闭.</param>
        public ShopSummaryQueryResponse(string address = default(string), string branchShopName = default(string), string brandName = default(string), string businessTime = default(string), List<ShopCategoryInfo> categoryInfos = default(List<ShopCategoryInfo>), string cityCode = default(string), string districtCode = default(string), string extInfo = default(string), string gmtCreate = default(string), string isShow = default(string), string latitude = default(string), string longitude = default(string), string mainImage = default(string), string mainShopName = default(string), string perPay = default(string), string picColl = default(string), string provinceCode = default(string), ShopCommentInfo shopCommentInfo = default(ShopCommentInfo), string shopId = default(string), string shopType = default(string), string status = default(string))
        {
            this.Address = address;
            this.BranchShopName = branchShopName;
            this.BrandName = brandName;
            this.BusinessTime = businessTime;
            this.CategoryInfos = categoryInfos;
            this.CityCode = cityCode;
            this.DistrictCode = districtCode;
            this.ExtInfo = extInfo;
            this.GmtCreate = gmtCreate;
            this.IsShow = isShow;
            this.Latitude = latitude;
            this.Longitude = longitude;
            this.MainImage = mainImage;
            this.MainShopName = mainShopName;
            this.PerPay = perPay;
            this.PicColl = picColl;
            this.ProvinceCode = provinceCode;
            this.ShopCommentInfo = shopCommentInfo;
            this.ShopId = shopId;
            this.ShopType = shopType;
            this.Status = status;
        }

        /// <summary>
        /// 门店地址
        /// </summary>
        /// <value>门店地址</value>
        [DataMember(Name = "address", EmitDefaultValue = false)]
        public string Address { get; set; }

        /// <summary>
        /// 分店名
        /// </summary>
        /// <value>分店名</value>
        [DataMember(Name = "branch_shop_name", EmitDefaultValue = false)]
        public string BranchShopName { get; set; }

        /// <summary>
        /// 品牌名，不填写则默认为其它品牌
        /// </summary>
        /// <value>品牌名，不填写则默认为其它品牌</value>
        [DataMember(Name = "brand_name", EmitDefaultValue = false)]
        public string BrandName { get; set; }

        /// <summary>
        /// 经营时间
        /// </summary>
        /// <value>经营时间</value>
        [DataMember(Name = "business_time", EmitDefaultValue = false)]
        public string BusinessTime { get; set; }

        /// <summary>
        /// 门店类目列表
        /// </summary>
        /// <value>门店类目列表</value>
        [DataMember(Name = "category_infos", EmitDefaultValue = false)]
        public List<ShopCategoryInfo> CategoryInfos { get; set; }

        /// <summary>
        /// 城市编码，国标码，详见国家统计局数据 &lt;a href&#x3D;\&quot;http://aopsdkdownload.cn-hangzhou.alipay-pub.aliyun-inc.com/doc/AreaCodeList.zip\&quot;&gt;点此下载&lt;/a&gt;
        /// </summary>
        /// <value>城市编码，国标码，详见国家统计局数据 &lt;a href&#x3D;\&quot;http://aopsdkdownload.cn-hangzhou.alipay-pub.aliyun-inc.com/doc/AreaCodeList.zip\&quot;&gt;点此下载&lt;/a&gt;</value>
        [DataMember(Name = "city_code", EmitDefaultValue = false)]
        public string CityCode { get; set; }

        /// <summary>
        /// 区县编码，国标码，详见国家统计局数据 &lt;a href&#x3D;\&quot;http://aopsdkdownload.cn-hangzhou.alipay-pub.aliyun-inc.com/doc/AreaCodeList.zip\&quot;&gt;点此下载&lt;/a&gt;
        /// </summary>
        /// <value>区县编码，国标码，详见国家统计局数据 &lt;a href&#x3D;\&quot;http://aopsdkdownload.cn-hangzhou.alipay-pub.aliyun-inc.com/doc/AreaCodeList.zip\&quot;&gt;点此下载&lt;/a&gt;</value>
        [DataMember(Name = "district_code", EmitDefaultValue = false)]
        public string DistrictCode { get; set; }

        /// <summary>
        /// json 字符串表示额外信息;    order_biz_mode: 点餐营业模式, REGULAR-正餐、LIGHT_FAST-轻快餐;  pre_order: 预点餐服务可用状态, 1-服务可用、0-服务不可用  order: 到店点餐服务可用状态：1-服务可用、0-服务不可用
        /// </summary>
        /// <value>json 字符串表示额外信息;    order_biz_mode: 点餐营业模式, REGULAR-正餐、LIGHT_FAST-轻快餐;  pre_order: 预点餐服务可用状态, 1-服务可用、0-服务不可用  order: 到店点餐服务可用状态：1-服务可用、0-服务不可用</value>
        [DataMember(Name = "ext_info", EmitDefaultValue = false)]
        public string ExtInfo { get; set; }

        /// <summary>
        /// 创建时间
        /// </summary>
        /// <value>创建时间</value>
        [DataMember(Name = "gmt_create", EmitDefaultValue = false)]
        public string GmtCreate { get; set; }

        /// <summary>
        /// 门店是否在客户端显示，T表示显示，F表示隐藏
        /// </summary>
        /// <value>门店是否在客户端显示，T表示显示，F表示隐藏</value>
        [DataMember(Name = "is_show", EmitDefaultValue = false)]
        public string IsShow { get; set; }

        /// <summary>
        /// 纬度，只有在query_type&#x3D;KB_PROMOTER非空
        /// </summary>
        /// <value>纬度，只有在query_type&#x3D;KB_PROMOTER非空</value>
        [DataMember(Name = "latitude", EmitDefaultValue = false)]
        public string Latitude { get; set; }

        /// <summary>
        /// 经度，只有在query_type&#x3D;KB_PROMOTER非空
        /// </summary>
        /// <value>经度，只有在query_type&#x3D;KB_PROMOTER非空</value>
        [DataMember(Name = "longitude", EmitDefaultValue = false)]
        public string Longitude { get; set; }

        /// <summary>
        /// 门店首图
        /// </summary>
        /// <value>门店首图</value>
        [DataMember(Name = "main_image", EmitDefaultValue = false)]
        public string MainImage { get; set; }

        /// <summary>
        /// 主门店名
        /// </summary>
        /// <value>主门店名</value>
        [DataMember(Name = "main_shop_name", EmitDefaultValue = false)]
        public string MainShopName { get; set; }

        /// <summary>
        /// 人均价格。单位是分。例如：2000，表示20元
        /// </summary>
        /// <value>人均价格。单位是分。例如：2000，表示20元</value>
        [DataMember(Name = "per_pay", EmitDefaultValue = false)]
        public string PerPay { get; set; }

        /// <summary>
        /// 图片集，是map转化成的json串，key是图片id,value是图片url
        /// </summary>
        /// <value>图片集，是map转化成的json串，key是图片id,value是图片url</value>
        [DataMember(Name = "pic_coll", EmitDefaultValue = false)]
        public string PicColl { get; set; }

        /// <summary>
        /// 省份编码，国标码，详见国家统计局数据 &lt;a href&#x3D;\&quot;http://aopsdkdownload.cn-hangzhou.alipay-pub.aliyun-inc.com/doc/AreaCodeList.zip\&quot;&gt;点此下载&lt;/a&gt;
        /// </summary>
        /// <value>省份编码，国标码，详见国家统计局数据 &lt;a href&#x3D;\&quot;http://aopsdkdownload.cn-hangzhou.alipay-pub.aliyun-inc.com/doc/AreaCodeList.zip\&quot;&gt;点此下载&lt;/a&gt;</value>
        [DataMember(Name = "province_code", EmitDefaultValue = false)]
        public string ProvinceCode { get; set; }

        /// <summary>
        /// Gets or Sets ShopCommentInfo
        /// </summary>
        [DataMember(Name = "shop_comment_info", EmitDefaultValue = false)]
        public ShopCommentInfo ShopCommentInfo { get; set; }

        /// <summary>
        /// 门店ID
        /// </summary>
        /// <value>门店ID</value>
        [DataMember(Name = "shop_id", EmitDefaultValue = false)]
        public string ShopId { get; set; }

        /// <summary>
        /// COMMON（普通门店）、MALL（商圈）
        /// </summary>
        /// <value>COMMON（普通门店）、MALL（商圈）</value>
        [DataMember(Name = "shop_type", EmitDefaultValue = false)]
        public string ShopType { get; set; }

        /// <summary>
        /// 门店状态，OPEN：营业中、PAUSE：暂停营业、FREEZE：已冻结、CLOSE:门店已关闭
        /// </summary>
        /// <value>门店状态，OPEN：营业中、PAUSE：暂停营业、FREEZE：已冻结、CLOSE:门店已关闭</value>
        [DataMember(Name = "status", EmitDefaultValue = false)]
        public string Status { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ShopSummaryQueryResponse {\n");
            sb.Append("  Address: ").Append(Address).Append("\n");
            sb.Append("  BranchShopName: ").Append(BranchShopName).Append("\n");
            sb.Append("  BrandName: ").Append(BrandName).Append("\n");
            sb.Append("  BusinessTime: ").Append(BusinessTime).Append("\n");
            sb.Append("  CategoryInfos: ").Append(CategoryInfos).Append("\n");
            sb.Append("  CityCode: ").Append(CityCode).Append("\n");
            sb.Append("  DistrictCode: ").Append(DistrictCode).Append("\n");
            sb.Append("  ExtInfo: ").Append(ExtInfo).Append("\n");
            sb.Append("  GmtCreate: ").Append(GmtCreate).Append("\n");
            sb.Append("  IsShow: ").Append(IsShow).Append("\n");
            sb.Append("  Latitude: ").Append(Latitude).Append("\n");
            sb.Append("  Longitude: ").Append(Longitude).Append("\n");
            sb.Append("  MainImage: ").Append(MainImage).Append("\n");
            sb.Append("  MainShopName: ").Append(MainShopName).Append("\n");
            sb.Append("  PerPay: ").Append(PerPay).Append("\n");
            sb.Append("  PicColl: ").Append(PicColl).Append("\n");
            sb.Append("  ProvinceCode: ").Append(ProvinceCode).Append("\n");
            sb.Append("  ShopCommentInfo: ").Append(ShopCommentInfo).Append("\n");
            sb.Append("  ShopId: ").Append(ShopId).Append("\n");
            sb.Append("  ShopType: ").Append(ShopType).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ShopSummaryQueryResponse);
        }

        /// <summary>
        /// Returns true if ShopSummaryQueryResponse instances are equal
        /// </summary>
        /// <param name="input">Instance of ShopSummaryQueryResponse to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ShopSummaryQueryResponse input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.Address == input.Address ||
                    (this.Address != null &&
                    this.Address.Equals(input.Address))
                ) && 
                (
                    this.BranchShopName == input.BranchShopName ||
                    (this.BranchShopName != null &&
                    this.BranchShopName.Equals(input.BranchShopName))
                ) && 
                (
                    this.BrandName == input.BrandName ||
                    (this.BrandName != null &&
                    this.BrandName.Equals(input.BrandName))
                ) && 
                (
                    this.BusinessTime == input.BusinessTime ||
                    (this.BusinessTime != null &&
                    this.BusinessTime.Equals(input.BusinessTime))
                ) && 
                (
                    this.CategoryInfos == input.CategoryInfos ||
                    this.CategoryInfos != null &&
                    input.CategoryInfos != null &&
                    this.CategoryInfos.SequenceEqual(input.CategoryInfos)
                ) && 
                (
                    this.CityCode == input.CityCode ||
                    (this.CityCode != null &&
                    this.CityCode.Equals(input.CityCode))
                ) && 
                (
                    this.DistrictCode == input.DistrictCode ||
                    (this.DistrictCode != null &&
                    this.DistrictCode.Equals(input.DistrictCode))
                ) && 
                (
                    this.ExtInfo == input.ExtInfo ||
                    (this.ExtInfo != null &&
                    this.ExtInfo.Equals(input.ExtInfo))
                ) && 
                (
                    this.GmtCreate == input.GmtCreate ||
                    (this.GmtCreate != null &&
                    this.GmtCreate.Equals(input.GmtCreate))
                ) && 
                (
                    this.IsShow == input.IsShow ||
                    (this.IsShow != null &&
                    this.IsShow.Equals(input.IsShow))
                ) && 
                (
                    this.Latitude == input.Latitude ||
                    (this.Latitude != null &&
                    this.Latitude.Equals(input.Latitude))
                ) && 
                (
                    this.Longitude == input.Longitude ||
                    (this.Longitude != null &&
                    this.Longitude.Equals(input.Longitude))
                ) && 
                (
                    this.MainImage == input.MainImage ||
                    (this.MainImage != null &&
                    this.MainImage.Equals(input.MainImage))
                ) && 
                (
                    this.MainShopName == input.MainShopName ||
                    (this.MainShopName != null &&
                    this.MainShopName.Equals(input.MainShopName))
                ) && 
                (
                    this.PerPay == input.PerPay ||
                    (this.PerPay != null &&
                    this.PerPay.Equals(input.PerPay))
                ) && 
                (
                    this.PicColl == input.PicColl ||
                    (this.PicColl != null &&
                    this.PicColl.Equals(input.PicColl))
                ) && 
                (
                    this.ProvinceCode == input.ProvinceCode ||
                    (this.ProvinceCode != null &&
                    this.ProvinceCode.Equals(input.ProvinceCode))
                ) && 
                (
                    this.ShopCommentInfo == input.ShopCommentInfo ||
                    (this.ShopCommentInfo != null &&
                    this.ShopCommentInfo.Equals(input.ShopCommentInfo))
                ) && 
                (
                    this.ShopId == input.ShopId ||
                    (this.ShopId != null &&
                    this.ShopId.Equals(input.ShopId))
                ) && 
                (
                    this.ShopType == input.ShopType ||
                    (this.ShopType != null &&
                    this.ShopType.Equals(input.ShopType))
                ) && 
                (
                    this.Status == input.Status ||
                    (this.Status != null &&
                    this.Status.Equals(input.Status))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Address != null)
                {
                    hashCode = (hashCode * 59) + this.Address.GetHashCode();
                }
                if (this.BranchShopName != null)
                {
                    hashCode = (hashCode * 59) + this.BranchShopName.GetHashCode();
                }
                if (this.BrandName != null)
                {
                    hashCode = (hashCode * 59) + this.BrandName.GetHashCode();
                }
                if (this.BusinessTime != null)
                {
                    hashCode = (hashCode * 59) + this.BusinessTime.GetHashCode();
                }
                if (this.CategoryInfos != null)
                {
                    hashCode = (hashCode * 59) + this.CategoryInfos.GetHashCode();
                }
                if (this.CityCode != null)
                {
                    hashCode = (hashCode * 59) + this.CityCode.GetHashCode();
                }
                if (this.DistrictCode != null)
                {
                    hashCode = (hashCode * 59) + this.DistrictCode.GetHashCode();
                }
                if (this.ExtInfo != null)
                {
                    hashCode = (hashCode * 59) + this.ExtInfo.GetHashCode();
                }
                if (this.GmtCreate != null)
                {
                    hashCode = (hashCode * 59) + this.GmtCreate.GetHashCode();
                }
                if (this.IsShow != null)
                {
                    hashCode = (hashCode * 59) + this.IsShow.GetHashCode();
                }
                if (this.Latitude != null)
                {
                    hashCode = (hashCode * 59) + this.Latitude.GetHashCode();
                }
                if (this.Longitude != null)
                {
                    hashCode = (hashCode * 59) + this.Longitude.GetHashCode();
                }
                if (this.MainImage != null)
                {
                    hashCode = (hashCode * 59) + this.MainImage.GetHashCode();
                }
                if (this.MainShopName != null)
                {
                    hashCode = (hashCode * 59) + this.MainShopName.GetHashCode();
                }
                if (this.PerPay != null)
                {
                    hashCode = (hashCode * 59) + this.PerPay.GetHashCode();
                }
                if (this.PicColl != null)
                {
                    hashCode = (hashCode * 59) + this.PicColl.GetHashCode();
                }
                if (this.ProvinceCode != null)
                {
                    hashCode = (hashCode * 59) + this.ProvinceCode.GetHashCode();
                }
                if (this.ShopCommentInfo != null)
                {
                    hashCode = (hashCode * 59) + this.ShopCommentInfo.GetHashCode();
                }
                if (this.ShopId != null)
                {
                    hashCode = (hashCode * 59) + this.ShopId.GetHashCode();
                }
                if (this.ShopType != null)
                {
                    hashCode = (hashCode * 59) + this.ShopType.GetHashCode();
                }
                if (this.Status != null)
                {
                    hashCode = (hashCode * 59) + this.Status.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
