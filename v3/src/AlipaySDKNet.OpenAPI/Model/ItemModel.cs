/*
 * 支付宝开放平台API
 *
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2025-02-19
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = AlipaySDKNet.OpenAPI.Client.OpenAPIDateConverter;

namespace AlipaySDKNet.OpenAPI.Model
{
    /// <summary>
    /// ItemModel
    /// </summary>
    [DataContract(Name = "ItemModel")]
    public partial class ItemModel : IEquatable<ItemModel>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ItemModel" /> class.
        /// </summary>
        /// <param name="creatorId">创建者id.</param>
        /// <param name="creatorType">创建者类型.</param>
        /// <param name="extInfo">商品扩展信息：可以解析成 Map&lt;String, String&gt; 的 json string.</param>
        /// <param name="frontCategoryId">前台类目id.</param>
        /// <param name="gmtCreate">商品创建时间.</param>
        /// <param name="gmtModified">商品更新时间.</param>
        /// <param name="itemId">商品id.</param>
        /// <param name="name">商品名称.</param>
        /// <param name="skuList">商品sku列表.</param>
        /// <param name="sort">商品排序.</param>
        /// <param name="status">商品状态.</param>
        /// <param name="targetId">商户归属主体id.</param>
        /// <param name="targetType">商品归属主体类型：5(商铺).</param>
        /// <param name="type">商品类型.</param>
        public ItemModel(string creatorId = default(string), string creatorType = default(string), string extInfo = default(string), string frontCategoryId = default(string), string gmtCreate = default(string), string gmtModified = default(string), string itemId = default(string), string name = default(string), List<ItemSkuInfo> skuList = default(List<ItemSkuInfo>), int sort = default(int), string status = default(string), string targetId = default(string), string targetType = default(string), string type = default(string))
        {
            this.CreatorId = creatorId;
            this.CreatorType = creatorType;
            this.ExtInfo = extInfo;
            this.FrontCategoryId = frontCategoryId;
            this.GmtCreate = gmtCreate;
            this.GmtModified = gmtModified;
            this.ItemId = itemId;
            this.Name = name;
            this.SkuList = skuList;
            this.Sort = sort;
            this.Status = status;
            this.TargetId = targetId;
            this.TargetType = targetType;
            this.Type = type;
        }

        /// <summary>
        /// 创建者id
        /// </summary>
        /// <value>创建者id</value>
        [DataMember(Name = "creator_id", EmitDefaultValue = false)]
        public string CreatorId { get; set; }

        /// <summary>
        /// 创建者类型
        /// </summary>
        /// <value>创建者类型</value>
        [DataMember(Name = "creator_type", EmitDefaultValue = false)]
        public string CreatorType { get; set; }

        /// <summary>
        /// 商品扩展信息：可以解析成 Map&lt;String, String&gt; 的 json string
        /// </summary>
        /// <value>商品扩展信息：可以解析成 Map&lt;String, String&gt; 的 json string</value>
        [DataMember(Name = "ext_info", EmitDefaultValue = false)]
        public string ExtInfo { get; set; }

        /// <summary>
        /// 前台类目id
        /// </summary>
        /// <value>前台类目id</value>
        [DataMember(Name = "front_category_id", EmitDefaultValue = false)]
        public string FrontCategoryId { get; set; }

        /// <summary>
        /// 商品创建时间
        /// </summary>
        /// <value>商品创建时间</value>
        [DataMember(Name = "gmt_create", EmitDefaultValue = false)]
        public string GmtCreate { get; set; }

        /// <summary>
        /// 商品更新时间
        /// </summary>
        /// <value>商品更新时间</value>
        [DataMember(Name = "gmt_modified", EmitDefaultValue = false)]
        public string GmtModified { get; set; }

        /// <summary>
        /// 商品id
        /// </summary>
        /// <value>商品id</value>
        [DataMember(Name = "item_id", EmitDefaultValue = false)]
        public string ItemId { get; set; }

        /// <summary>
        /// 商品名称
        /// </summary>
        /// <value>商品名称</value>
        [DataMember(Name = "name", EmitDefaultValue = false)]
        public string Name { get; set; }

        /// <summary>
        /// 商品sku列表
        /// </summary>
        /// <value>商品sku列表</value>
        [DataMember(Name = "sku_list", EmitDefaultValue = false)]
        public List<ItemSkuInfo> SkuList { get; set; }

        /// <summary>
        /// 商品排序
        /// </summary>
        /// <value>商品排序</value>
        [DataMember(Name = "sort", EmitDefaultValue = false)]
        public int Sort { get; set; }

        /// <summary>
        /// 商品状态
        /// </summary>
        /// <value>商品状态</value>
        [DataMember(Name = "status", EmitDefaultValue = false)]
        public string Status { get; set; }

        /// <summary>
        /// 商户归属主体id
        /// </summary>
        /// <value>商户归属主体id</value>
        [DataMember(Name = "target_id", EmitDefaultValue = false)]
        public string TargetId { get; set; }

        /// <summary>
        /// 商品归属主体类型：5(商铺)
        /// </summary>
        /// <value>商品归属主体类型：5(商铺)</value>
        [DataMember(Name = "target_type", EmitDefaultValue = false)]
        public string TargetType { get; set; }

        /// <summary>
        /// 商品类型
        /// </summary>
        /// <value>商品类型</value>
        [DataMember(Name = "type", EmitDefaultValue = false)]
        public string Type { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ItemModel {\n");
            sb.Append("  CreatorId: ").Append(CreatorId).Append("\n");
            sb.Append("  CreatorType: ").Append(CreatorType).Append("\n");
            sb.Append("  ExtInfo: ").Append(ExtInfo).Append("\n");
            sb.Append("  FrontCategoryId: ").Append(FrontCategoryId).Append("\n");
            sb.Append("  GmtCreate: ").Append(GmtCreate).Append("\n");
            sb.Append("  GmtModified: ").Append(GmtModified).Append("\n");
            sb.Append("  ItemId: ").Append(ItemId).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  SkuList: ").Append(SkuList).Append("\n");
            sb.Append("  Sort: ").Append(Sort).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("  TargetId: ").Append(TargetId).Append("\n");
            sb.Append("  TargetType: ").Append(TargetType).Append("\n");
            sb.Append("  Type: ").Append(Type).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ItemModel);
        }

        /// <summary>
        /// Returns true if ItemModel instances are equal
        /// </summary>
        /// <param name="input">Instance of ItemModel to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ItemModel input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.CreatorId == input.CreatorId ||
                    (this.CreatorId != null &&
                    this.CreatorId.Equals(input.CreatorId))
                ) && 
                (
                    this.CreatorType == input.CreatorType ||
                    (this.CreatorType != null &&
                    this.CreatorType.Equals(input.CreatorType))
                ) && 
                (
                    this.ExtInfo == input.ExtInfo ||
                    (this.ExtInfo != null &&
                    this.ExtInfo.Equals(input.ExtInfo))
                ) && 
                (
                    this.FrontCategoryId == input.FrontCategoryId ||
                    (this.FrontCategoryId != null &&
                    this.FrontCategoryId.Equals(input.FrontCategoryId))
                ) && 
                (
                    this.GmtCreate == input.GmtCreate ||
                    (this.GmtCreate != null &&
                    this.GmtCreate.Equals(input.GmtCreate))
                ) && 
                (
                    this.GmtModified == input.GmtModified ||
                    (this.GmtModified != null &&
                    this.GmtModified.Equals(input.GmtModified))
                ) && 
                (
                    this.ItemId == input.ItemId ||
                    (this.ItemId != null &&
                    this.ItemId.Equals(input.ItemId))
                ) && 
                (
                    this.Name == input.Name ||
                    (this.Name != null &&
                    this.Name.Equals(input.Name))
                ) && 
                (
                    this.SkuList == input.SkuList ||
                    this.SkuList != null &&
                    input.SkuList != null &&
                    this.SkuList.SequenceEqual(input.SkuList)
                ) && 
                (
                    this.Sort == input.Sort ||
                    this.Sort.Equals(input.Sort)
                ) && 
                (
                    this.Status == input.Status ||
                    (this.Status != null &&
                    this.Status.Equals(input.Status))
                ) && 
                (
                    this.TargetId == input.TargetId ||
                    (this.TargetId != null &&
                    this.TargetId.Equals(input.TargetId))
                ) && 
                (
                    this.TargetType == input.TargetType ||
                    (this.TargetType != null &&
                    this.TargetType.Equals(input.TargetType))
                ) && 
                (
                    this.Type == input.Type ||
                    (this.Type != null &&
                    this.Type.Equals(input.Type))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.CreatorId != null)
                {
                    hashCode = (hashCode * 59) + this.CreatorId.GetHashCode();
                }
                if (this.CreatorType != null)
                {
                    hashCode = (hashCode * 59) + this.CreatorType.GetHashCode();
                }
                if (this.ExtInfo != null)
                {
                    hashCode = (hashCode * 59) + this.ExtInfo.GetHashCode();
                }
                if (this.FrontCategoryId != null)
                {
                    hashCode = (hashCode * 59) + this.FrontCategoryId.GetHashCode();
                }
                if (this.GmtCreate != null)
                {
                    hashCode = (hashCode * 59) + this.GmtCreate.GetHashCode();
                }
                if (this.GmtModified != null)
                {
                    hashCode = (hashCode * 59) + this.GmtModified.GetHashCode();
                }
                if (this.ItemId != null)
                {
                    hashCode = (hashCode * 59) + this.ItemId.GetHashCode();
                }
                if (this.Name != null)
                {
                    hashCode = (hashCode * 59) + this.Name.GetHashCode();
                }
                if (this.SkuList != null)
                {
                    hashCode = (hashCode * 59) + this.SkuList.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.Sort.GetHashCode();
                if (this.Status != null)
                {
                    hashCode = (hashCode * 59) + this.Status.GetHashCode();
                }
                if (this.TargetId != null)
                {
                    hashCode = (hashCode * 59) + this.TargetId.GetHashCode();
                }
                if (this.TargetType != null)
                {
                    hashCode = (hashCode * 59) + this.TargetType.GetHashCode();
                }
                if (this.Type != null)
                {
                    hashCode = (hashCode * 59) + this.Type.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
