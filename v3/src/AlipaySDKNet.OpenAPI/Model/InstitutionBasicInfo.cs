/*
 * 支付宝开放平台API
 *
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2025-02-19
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = AlipaySDKNet.OpenAPI.Client.OpenAPIDateConverter;

namespace AlipaySDKNet.OpenAPI.Model
{
    /// <summary>
    /// InstitutionBasicInfo
    /// </summary>
    [DataContract(Name = "InstitutionBasicInfo")]
    public partial class InstitutionBasicInfo : IEquatable<InstitutionBasicInfo>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="InstitutionBasicInfo" /> class.
        /// </summary>
        /// <param name="consultMode">费控咨询模式.</param>
        /// <param name="currency">制度可发放资产币种.</param>
        /// <param name="effective">制度是否启用.</param>
        /// <param name="effectiveEndDate">制度生效结束时间.</param>
        /// <param name="effectiveStartDate">制度生效起始时间.</param>
        /// <param name="institutionDesc">制度描述.</param>
        /// <param name="institutionId">制度id.</param>
        /// <param name="institutionName">制度名称.</param>
        public InstitutionBasicInfo(string consultMode = default(string), string currency = default(string), string effective = default(string), string effectiveEndDate = default(string), string effectiveStartDate = default(string), string institutionDesc = default(string), string institutionId = default(string), string institutionName = default(string))
        {
            this.ConsultMode = consultMode;
            this.Currency = currency;
            this.Effective = effective;
            this.EffectiveEndDate = effectiveEndDate;
            this.EffectiveStartDate = effectiveStartDate;
            this.InstitutionDesc = institutionDesc;
            this.InstitutionId = institutionId;
            this.InstitutionName = institutionName;
        }

        /// <summary>
        /// 费控咨询模式
        /// </summary>
        /// <value>费控咨询模式</value>
        [DataMember(Name = "consult_mode", EmitDefaultValue = false)]
        public string ConsultMode { get; set; }

        /// <summary>
        /// 制度可发放资产币种
        /// </summary>
        /// <value>制度可发放资产币种</value>
        [DataMember(Name = "currency", EmitDefaultValue = false)]
        public string Currency { get; set; }

        /// <summary>
        /// 制度是否启用
        /// </summary>
        /// <value>制度是否启用</value>
        [DataMember(Name = "effective", EmitDefaultValue = false)]
        public string Effective { get; set; }

        /// <summary>
        /// 制度生效结束时间
        /// </summary>
        /// <value>制度生效结束时间</value>
        [DataMember(Name = "effective_end_date", EmitDefaultValue = false)]
        public string EffectiveEndDate { get; set; }

        /// <summary>
        /// 制度生效起始时间
        /// </summary>
        /// <value>制度生效起始时间</value>
        [DataMember(Name = "effective_start_date", EmitDefaultValue = false)]
        public string EffectiveStartDate { get; set; }

        /// <summary>
        /// 制度描述
        /// </summary>
        /// <value>制度描述</value>
        [DataMember(Name = "institution_desc", EmitDefaultValue = false)]
        public string InstitutionDesc { get; set; }

        /// <summary>
        /// 制度id
        /// </summary>
        /// <value>制度id</value>
        [DataMember(Name = "institution_id", EmitDefaultValue = false)]
        public string InstitutionId { get; set; }

        /// <summary>
        /// 制度名称
        /// </summary>
        /// <value>制度名称</value>
        [DataMember(Name = "institution_name", EmitDefaultValue = false)]
        public string InstitutionName { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class InstitutionBasicInfo {\n");
            sb.Append("  ConsultMode: ").Append(ConsultMode).Append("\n");
            sb.Append("  Currency: ").Append(Currency).Append("\n");
            sb.Append("  Effective: ").Append(Effective).Append("\n");
            sb.Append("  EffectiveEndDate: ").Append(EffectiveEndDate).Append("\n");
            sb.Append("  EffectiveStartDate: ").Append(EffectiveStartDate).Append("\n");
            sb.Append("  InstitutionDesc: ").Append(InstitutionDesc).Append("\n");
            sb.Append("  InstitutionId: ").Append(InstitutionId).Append("\n");
            sb.Append("  InstitutionName: ").Append(InstitutionName).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as InstitutionBasicInfo);
        }

        /// <summary>
        /// Returns true if InstitutionBasicInfo instances are equal
        /// </summary>
        /// <param name="input">Instance of InstitutionBasicInfo to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(InstitutionBasicInfo input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.ConsultMode == input.ConsultMode ||
                    (this.ConsultMode != null &&
                    this.ConsultMode.Equals(input.ConsultMode))
                ) && 
                (
                    this.Currency == input.Currency ||
                    (this.Currency != null &&
                    this.Currency.Equals(input.Currency))
                ) && 
                (
                    this.Effective == input.Effective ||
                    (this.Effective != null &&
                    this.Effective.Equals(input.Effective))
                ) && 
                (
                    this.EffectiveEndDate == input.EffectiveEndDate ||
                    (this.EffectiveEndDate != null &&
                    this.EffectiveEndDate.Equals(input.EffectiveEndDate))
                ) && 
                (
                    this.EffectiveStartDate == input.EffectiveStartDate ||
                    (this.EffectiveStartDate != null &&
                    this.EffectiveStartDate.Equals(input.EffectiveStartDate))
                ) && 
                (
                    this.InstitutionDesc == input.InstitutionDesc ||
                    (this.InstitutionDesc != null &&
                    this.InstitutionDesc.Equals(input.InstitutionDesc))
                ) && 
                (
                    this.InstitutionId == input.InstitutionId ||
                    (this.InstitutionId != null &&
                    this.InstitutionId.Equals(input.InstitutionId))
                ) && 
                (
                    this.InstitutionName == input.InstitutionName ||
                    (this.InstitutionName != null &&
                    this.InstitutionName.Equals(input.InstitutionName))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ConsultMode != null)
                {
                    hashCode = (hashCode * 59) + this.ConsultMode.GetHashCode();
                }
                if (this.Currency != null)
                {
                    hashCode = (hashCode * 59) + this.Currency.GetHashCode();
                }
                if (this.Effective != null)
                {
                    hashCode = (hashCode * 59) + this.Effective.GetHashCode();
                }
                if (this.EffectiveEndDate != null)
                {
                    hashCode = (hashCode * 59) + this.EffectiveEndDate.GetHashCode();
                }
                if (this.EffectiveStartDate != null)
                {
                    hashCode = (hashCode * 59) + this.EffectiveStartDate.GetHashCode();
                }
                if (this.InstitutionDesc != null)
                {
                    hashCode = (hashCode * 59) + this.InstitutionDesc.GetHashCode();
                }
                if (this.InstitutionId != null)
                {
                    hashCode = (hashCode * 59) + this.InstitutionId.GetHashCode();
                }
                if (this.InstitutionName != null)
                {
                    hashCode = (hashCode * 59) + this.InstitutionName.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
