/*
 * 支付宝开放平台API
 *
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2025-02-19
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = AlipaySDKNet.OpenAPI.Client.OpenAPIDateConverter;

namespace AlipaySDKNet.OpenAPI.Model
{
    /// <summary>
    /// AlipayOpenMiniVersionAuditApplyModel
    /// </summary>
    [DataContract(Name = "AlipayOpenMiniVersionAuditApplyModel")]
    public partial class AlipayOpenMiniVersionAuditApplyModel : IEquatable<AlipayOpenMiniVersionAuditApplyModel>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AlipayOpenMiniVersionAuditApplyModel" /> class.
        /// </summary>
        /// <param name="appCategoryIds">小程序类目，格式为 第一个一级类目_第一个二级类目;第二个一级类目_第二个二级类目，详细类目可以通过  &lt;a href&#x3D;\&quot;https://docs.open.alipay.com/api_49/alipay.open.mini.category.query\&quot;&gt;https://docs.open.alipay.com/api_49/alipay.open.mini.category.query&lt;/a&gt;接口查询，如果不填默认采用当前小程序应用类目。使用默认应用类目后不需要再次上传营业执照号、营业执照名、营业执照截图、营业执照有效期。.</param>
        /// <param name="appDesc">小程序描述，长度限制 20~400 个字符（中文字符按2个字符计算）。.</param>
        /// <param name="appEnglishName">小程序应用英文名称，长度限制 3～30 个字符（中文字符按2个字符计算）；仅支持英文和数字。.</param>
        /// <param name="appName">小程序名称，长度限制 3~40 个字符（中文字符按2个字符计算），仅支持包含中文、数字、英文、下划线、+、-。 如果不填默认采用当前小程序应用名称，如无默认值则必填，不可为空。.</param>
        /// <param name="appSlogan">小程序简介，一句话描述小程序功能，长度限制 10~32个字符（中文字符按2个字符计算）。.</param>
        /// <param name="appVersion">小程序版本号，请选择开发版本执行提交审核操作。.</param>
        /// <param name="auditRule">审核类型，建议设置成“BASE_PROMOTE”，小程序将会更容易上架。将小程序发布审核拆分成“准入”、“营销”。原先小程序需要两个环节都审核通过才能上架，现在小程序只需要准入通过即可上架，但是无法在营销场景（支付宝泛搜、支付宝首页推荐等）展现给用户，小程序可通过精搜或者扫码等方式使用。如果小程序需要进行营销，可发布新版本，当准入&amp;营销都通过后，小程序也可被营销。点击查看支付宝小程序营销规范：&lt;a href&#x3D;\&quot;https://opendocs.alipay.com/b/03al2q\&quot;&gt;https://opendocs.alipay.com/b/03al2q&lt;/a&gt;.</param>
        /// <param name="autoOnline">审核通过后是否自动上架， 自动上架：true；不自动上架（默认）：false。 如果小程序上架前无需特殊处理，建议设置成true，平台将会在小程序审核通过时自动将其上架。 注意：若审核通过时，小程序仍未完成备案，则将会进行自动受限发布上架（发布上线后小程序将无法被搜索，限制小程序用户数为 50 人/天，无法进行相关业务推广，只可通过扫码使用，完成备案即可解除限制，上架后90天内不未完成备案，小程序将无法打开。）若审核通过时小程序也完成备案，则会正常上架。.</param>
        /// <param name="bundleId">小程序投放的端参数。例如投放到支付宝钱包是支付宝端。默认支付宝端。支持： com.alipay.alipaywallet:支付宝端； com.alipay.iot.xpaas：支付宝IoT端。.</param>
        /// <param name="licenseName">营业执照名称，参照&lt;a href&#x3D;\&quot;https://opendocs.alipay.com/mini/operation/material\&quot;&gt;https://opendocs.alipay.com/mini/operation/material&lt;/a&gt;,要求填写营业执照信息。.</param>
        /// <param name="licenseNo">营业执照证件号，部分小程序类目需要提交，可通过&lt;a href&#x3D;\&quot;https://opendocs.alipay.com/mini/03l8c8 \&quot;&gt;https://opendocs.alipay.com/mini/03l8c8&lt;/a&gt;查询类目是否需要上传营业执照信息。参照&lt;a href&#x3D;\&quot;https://opendocs.alipay.com/mini/operation/material \&quot;&gt;https://opendocs.alipay.com/mini/operation/material &lt;/a&gt;要求填写营业执照信息。.</param>
        /// <param name="licenseValidDate">营业执照有效期，格式为 yyyy-MM-dd，9999-12-31表示长期有效。.</param>
        /// <param name="memo">小程序备注，小程序备注最多500字符（中文字符按2个字符计算）。.</param>
        /// <param name="miniCategoryIds">新小程序前台类目，格式为 第一个一级类目_第一个二级类目;第二个一级类目_第二个二级类目_第二个三级类目，详细类目可以通过 &lt;a href&#x3D;\&quot;https://docs.open.alipay.com/api_49/alipay.open.mini.category.query\&quot;&gt;https://docs.open.alipay.com/api_49/alipay.open.mini.category.query&lt;/a&gt; 接口查询mini_category_list。.</param>
        /// <param name="regionType">小程序服务区域类型.</param>
        /// <param name="serviceEmail">小程序客服邮箱，如果不填默认采用当前小程序的应用客服邮箱，小程序客服电话和邮箱至少输入一个。如果前期已经设置过该信息，本次可不填，平台将会为你默认上传该信息。.</param>
        /// <param name="servicePhone">小程序客服电话，长度限制5~30个字符，仅支持包含数字和-。如果不填默认采用当前小程序的应用客服电话，小程序客服电话和邮箱至少输入一个。如果前期已经设置过该信息，本次可不填，平台将会为你默认上传该信息。.</param>
        /// <param name="serviceRegionInfo">省市区信息。当region_type为LOCATION或传入city_code时，province_code不能为空；填写area_code时，province_code和city_code不能为空。只填province_code则全选该省；填写province_code和city_code则全选该市，以此类推。省市区code参见&lt;a href&#x3D;\&quot;https://gw.alipayobjects.com/os/bmw-prod/0aab0319-13de-42b9-85cf-13877a5f78ed.xlsx\&quot;&gt;https://gw.alipayobjects.com/os/bmw-prod/0aab0319-13de-42b9-85cf-13877a5f78ed.xlsx&lt;/a&gt;.</param>
        /// <param name="speedUp">如果有审核加急权益，是否使用审核加急权益加速审核： 加速（默认）：true 不加速：false.</param>
        /// <param name="testAccout">测试账号，是否需要填写请参见&lt;a href&#x3D;\&quot;https://opendocs.alipay.com/mini/operation/standard/case/akxg6r#3.%20%E6%B5%8B%E8%AF%95%E5%86%85%E5%AE%B9%E6%8F%90%E4%BA%A4%E4%B8%8D%E5%AE%8C%E6%95%B4\&quot;&gt;https://opendocs.alipay.com/mini/operation/standard/case/akxg6r#3.%20%E6%B5%8B%E8%AF%95%E5%86%85%E5%AE%B9%E6%8F%90%E4%BA%A4%E4%B8%8D%E5%AE%8C%E6%95%B4&lt;/a&gt;.</param>
        /// <param name="testPassword">测试账号密码.</param>
        /// <param name="versionDesc">小程序版本描述，介绍此版本的主要变更和功能，30-500个字符（中文字符按2个字符计算）。.</param>
        public AlipayOpenMiniVersionAuditApplyModel(string appCategoryIds = default(string), string appDesc = default(string), string appEnglishName = default(string), string appName = default(string), string appSlogan = default(string), string appVersion = default(string), string auditRule = default(string), string autoOnline = default(string), string bundleId = default(string), string licenseName = default(string), string licenseNo = default(string), string licenseValidDate = default(string), string memo = default(string), string miniCategoryIds = default(string), string regionType = default(string), string serviceEmail = default(string), string servicePhone = default(string), List<RegionInfo> serviceRegionInfo = default(List<RegionInfo>), string speedUp = default(string), string testAccout = default(string), string testPassword = default(string), string versionDesc = default(string))
        {
            this.AppCategoryIds = appCategoryIds;
            this.AppDesc = appDesc;
            this.AppEnglishName = appEnglishName;
            this.AppName = appName;
            this.AppSlogan = appSlogan;
            this.AppVersion = appVersion;
            this.AuditRule = auditRule;
            this.AutoOnline = autoOnline;
            this.BundleId = bundleId;
            this.LicenseName = licenseName;
            this.LicenseNo = licenseNo;
            this.LicenseValidDate = licenseValidDate;
            this.Memo = memo;
            this.MiniCategoryIds = miniCategoryIds;
            this.RegionType = regionType;
            this.ServiceEmail = serviceEmail;
            this.ServicePhone = servicePhone;
            this.ServiceRegionInfo = serviceRegionInfo;
            this.SpeedUp = speedUp;
            this.TestAccout = testAccout;
            this.TestPassword = testPassword;
            this.VersionDesc = versionDesc;
        }

        /// <summary>
        /// 小程序类目，格式为 第一个一级类目_第一个二级类目;第二个一级类目_第二个二级类目，详细类目可以通过  &lt;a href&#x3D;\&quot;https://docs.open.alipay.com/api_49/alipay.open.mini.category.query\&quot;&gt;https://docs.open.alipay.com/api_49/alipay.open.mini.category.query&lt;/a&gt;接口查询，如果不填默认采用当前小程序应用类目。使用默认应用类目后不需要再次上传营业执照号、营业执照名、营业执照截图、营业执照有效期。
        /// </summary>
        /// <value>小程序类目，格式为 第一个一级类目_第一个二级类目;第二个一级类目_第二个二级类目，详细类目可以通过  &lt;a href&#x3D;\&quot;https://docs.open.alipay.com/api_49/alipay.open.mini.category.query\&quot;&gt;https://docs.open.alipay.com/api_49/alipay.open.mini.category.query&lt;/a&gt;接口查询，如果不填默认采用当前小程序应用类目。使用默认应用类目后不需要再次上传营业执照号、营业执照名、营业执照截图、营业执照有效期。</value>
        [DataMember(Name = "app_category_ids", EmitDefaultValue = false)]
        public string AppCategoryIds { get; set; }

        /// <summary>
        /// 小程序描述，长度限制 20~400 个字符（中文字符按2个字符计算）。
        /// </summary>
        /// <value>小程序描述，长度限制 20~400 个字符（中文字符按2个字符计算）。</value>
        [DataMember(Name = "app_desc", EmitDefaultValue = false)]
        public string AppDesc { get; set; }

        /// <summary>
        /// 小程序应用英文名称，长度限制 3～30 个字符（中文字符按2个字符计算）；仅支持英文和数字。
        /// </summary>
        /// <value>小程序应用英文名称，长度限制 3～30 个字符（中文字符按2个字符计算）；仅支持英文和数字。</value>
        [DataMember(Name = "app_english_name", EmitDefaultValue = false)]
        public string AppEnglishName { get; set; }

        /// <summary>
        /// 小程序名称，长度限制 3~40 个字符（中文字符按2个字符计算），仅支持包含中文、数字、英文、下划线、+、-。 如果不填默认采用当前小程序应用名称，如无默认值则必填，不可为空。
        /// </summary>
        /// <value>小程序名称，长度限制 3~40 个字符（中文字符按2个字符计算），仅支持包含中文、数字、英文、下划线、+、-。 如果不填默认采用当前小程序应用名称，如无默认值则必填，不可为空。</value>
        [DataMember(Name = "app_name", EmitDefaultValue = false)]
        public string AppName { get; set; }

        /// <summary>
        /// 小程序简介，一句话描述小程序功能，长度限制 10~32个字符（中文字符按2个字符计算）。
        /// </summary>
        /// <value>小程序简介，一句话描述小程序功能，长度限制 10~32个字符（中文字符按2个字符计算）。</value>
        [DataMember(Name = "app_slogan", EmitDefaultValue = false)]
        public string AppSlogan { get; set; }

        /// <summary>
        /// 小程序版本号，请选择开发版本执行提交审核操作。
        /// </summary>
        /// <value>小程序版本号，请选择开发版本执行提交审核操作。</value>
        [DataMember(Name = "app_version", EmitDefaultValue = false)]
        public string AppVersion { get; set; }

        /// <summary>
        /// 审核类型，建议设置成“BASE_PROMOTE”，小程序将会更容易上架。将小程序发布审核拆分成“准入”、“营销”。原先小程序需要两个环节都审核通过才能上架，现在小程序只需要准入通过即可上架，但是无法在营销场景（支付宝泛搜、支付宝首页推荐等）展现给用户，小程序可通过精搜或者扫码等方式使用。如果小程序需要进行营销，可发布新版本，当准入&amp;营销都通过后，小程序也可被营销。点击查看支付宝小程序营销规范：&lt;a href&#x3D;\&quot;https://opendocs.alipay.com/b/03al2q\&quot;&gt;https://opendocs.alipay.com/b/03al2q&lt;/a&gt;
        /// </summary>
        /// <value>审核类型，建议设置成“BASE_PROMOTE”，小程序将会更容易上架。将小程序发布审核拆分成“准入”、“营销”。原先小程序需要两个环节都审核通过才能上架，现在小程序只需要准入通过即可上架，但是无法在营销场景（支付宝泛搜、支付宝首页推荐等）展现给用户，小程序可通过精搜或者扫码等方式使用。如果小程序需要进行营销，可发布新版本，当准入&amp;营销都通过后，小程序也可被营销。点击查看支付宝小程序营销规范：&lt;a href&#x3D;\&quot;https://opendocs.alipay.com/b/03al2q\&quot;&gt;https://opendocs.alipay.com/b/03al2q&lt;/a&gt;</value>
        [DataMember(Name = "audit_rule", EmitDefaultValue = false)]
        public string AuditRule { get; set; }

        /// <summary>
        /// 审核通过后是否自动上架， 自动上架：true；不自动上架（默认）：false。 如果小程序上架前无需特殊处理，建议设置成true，平台将会在小程序审核通过时自动将其上架。 注意：若审核通过时，小程序仍未完成备案，则将会进行自动受限发布上架（发布上线后小程序将无法被搜索，限制小程序用户数为 50 人/天，无法进行相关业务推广，只可通过扫码使用，完成备案即可解除限制，上架后90天内不未完成备案，小程序将无法打开。）若审核通过时小程序也完成备案，则会正常上架。
        /// </summary>
        /// <value>审核通过后是否自动上架， 自动上架：true；不自动上架（默认）：false。 如果小程序上架前无需特殊处理，建议设置成true，平台将会在小程序审核通过时自动将其上架。 注意：若审核通过时，小程序仍未完成备案，则将会进行自动受限发布上架（发布上线后小程序将无法被搜索，限制小程序用户数为 50 人/天，无法进行相关业务推广，只可通过扫码使用，完成备案即可解除限制，上架后90天内不未完成备案，小程序将无法打开。）若审核通过时小程序也完成备案，则会正常上架。</value>
        [DataMember(Name = "auto_online", EmitDefaultValue = false)]
        public string AutoOnline { get; set; }

        /// <summary>
        /// 小程序投放的端参数。例如投放到支付宝钱包是支付宝端。默认支付宝端。支持： com.alipay.alipaywallet:支付宝端； com.alipay.iot.xpaas：支付宝IoT端。
        /// </summary>
        /// <value>小程序投放的端参数。例如投放到支付宝钱包是支付宝端。默认支付宝端。支持： com.alipay.alipaywallet:支付宝端； com.alipay.iot.xpaas：支付宝IoT端。</value>
        [DataMember(Name = "bundle_id", EmitDefaultValue = false)]
        public string BundleId { get; set; }

        /// <summary>
        /// 营业执照名称，参照&lt;a href&#x3D;\&quot;https://opendocs.alipay.com/mini/operation/material\&quot;&gt;https://opendocs.alipay.com/mini/operation/material&lt;/a&gt;,要求填写营业执照信息。
        /// </summary>
        /// <value>营业执照名称，参照&lt;a href&#x3D;\&quot;https://opendocs.alipay.com/mini/operation/material\&quot;&gt;https://opendocs.alipay.com/mini/operation/material&lt;/a&gt;,要求填写营业执照信息。</value>
        [DataMember(Name = "license_name", EmitDefaultValue = false)]
        public string LicenseName { get; set; }

        /// <summary>
        /// 营业执照证件号，部分小程序类目需要提交，可通过&lt;a href&#x3D;\&quot;https://opendocs.alipay.com/mini/03l8c8 \&quot;&gt;https://opendocs.alipay.com/mini/03l8c8&lt;/a&gt;查询类目是否需要上传营业执照信息。参照&lt;a href&#x3D;\&quot;https://opendocs.alipay.com/mini/operation/material \&quot;&gt;https://opendocs.alipay.com/mini/operation/material &lt;/a&gt;要求填写营业执照信息。
        /// </summary>
        /// <value>营业执照证件号，部分小程序类目需要提交，可通过&lt;a href&#x3D;\&quot;https://opendocs.alipay.com/mini/03l8c8 \&quot;&gt;https://opendocs.alipay.com/mini/03l8c8&lt;/a&gt;查询类目是否需要上传营业执照信息。参照&lt;a href&#x3D;\&quot;https://opendocs.alipay.com/mini/operation/material \&quot;&gt;https://opendocs.alipay.com/mini/operation/material &lt;/a&gt;要求填写营业执照信息。</value>
        [DataMember(Name = "license_no", EmitDefaultValue = false)]
        public string LicenseNo { get; set; }

        /// <summary>
        /// 营业执照有效期，格式为 yyyy-MM-dd，9999-12-31表示长期有效。
        /// </summary>
        /// <value>营业执照有效期，格式为 yyyy-MM-dd，9999-12-31表示长期有效。</value>
        [DataMember(Name = "license_valid_date", EmitDefaultValue = false)]
        public string LicenseValidDate { get; set; }

        /// <summary>
        /// 小程序备注，小程序备注最多500字符（中文字符按2个字符计算）。
        /// </summary>
        /// <value>小程序备注，小程序备注最多500字符（中文字符按2个字符计算）。</value>
        [DataMember(Name = "memo", EmitDefaultValue = false)]
        public string Memo { get; set; }

        /// <summary>
        /// 新小程序前台类目，格式为 第一个一级类目_第一个二级类目;第二个一级类目_第二个二级类目_第二个三级类目，详细类目可以通过 &lt;a href&#x3D;\&quot;https://docs.open.alipay.com/api_49/alipay.open.mini.category.query\&quot;&gt;https://docs.open.alipay.com/api_49/alipay.open.mini.category.query&lt;/a&gt; 接口查询mini_category_list。
        /// </summary>
        /// <value>新小程序前台类目，格式为 第一个一级类目_第一个二级类目;第二个一级类目_第二个二级类目_第二个三级类目，详细类目可以通过 &lt;a href&#x3D;\&quot;https://docs.open.alipay.com/api_49/alipay.open.mini.category.query\&quot;&gt;https://docs.open.alipay.com/api_49/alipay.open.mini.category.query&lt;/a&gt; 接口查询mini_category_list。</value>
        [DataMember(Name = "mini_category_ids", EmitDefaultValue = false)]
        public string MiniCategoryIds { get; set; }

        /// <summary>
        /// 小程序服务区域类型
        /// </summary>
        /// <value>小程序服务区域类型</value>
        [DataMember(Name = "region_type", EmitDefaultValue = false)]
        public string RegionType { get; set; }

        /// <summary>
        /// 小程序客服邮箱，如果不填默认采用当前小程序的应用客服邮箱，小程序客服电话和邮箱至少输入一个。如果前期已经设置过该信息，本次可不填，平台将会为你默认上传该信息。
        /// </summary>
        /// <value>小程序客服邮箱，如果不填默认采用当前小程序的应用客服邮箱，小程序客服电话和邮箱至少输入一个。如果前期已经设置过该信息，本次可不填，平台将会为你默认上传该信息。</value>
        [DataMember(Name = "service_email", EmitDefaultValue = false)]
        public string ServiceEmail { get; set; }

        /// <summary>
        /// 小程序客服电话，长度限制5~30个字符，仅支持包含数字和-。如果不填默认采用当前小程序的应用客服电话，小程序客服电话和邮箱至少输入一个。如果前期已经设置过该信息，本次可不填，平台将会为你默认上传该信息。
        /// </summary>
        /// <value>小程序客服电话，长度限制5~30个字符，仅支持包含数字和-。如果不填默认采用当前小程序的应用客服电话，小程序客服电话和邮箱至少输入一个。如果前期已经设置过该信息，本次可不填，平台将会为你默认上传该信息。</value>
        [DataMember(Name = "service_phone", EmitDefaultValue = false)]
        public string ServicePhone { get; set; }

        /// <summary>
        /// 省市区信息。当region_type为LOCATION或传入city_code时，province_code不能为空；填写area_code时，province_code和city_code不能为空。只填province_code则全选该省；填写province_code和city_code则全选该市，以此类推。省市区code参见&lt;a href&#x3D;\&quot;https://gw.alipayobjects.com/os/bmw-prod/0aab0319-13de-42b9-85cf-13877a5f78ed.xlsx\&quot;&gt;https://gw.alipayobjects.com/os/bmw-prod/0aab0319-13de-42b9-85cf-13877a5f78ed.xlsx&lt;/a&gt;
        /// </summary>
        /// <value>省市区信息。当region_type为LOCATION或传入city_code时，province_code不能为空；填写area_code时，province_code和city_code不能为空。只填province_code则全选该省；填写province_code和city_code则全选该市，以此类推。省市区code参见&lt;a href&#x3D;\&quot;https://gw.alipayobjects.com/os/bmw-prod/0aab0319-13de-42b9-85cf-13877a5f78ed.xlsx\&quot;&gt;https://gw.alipayobjects.com/os/bmw-prod/0aab0319-13de-42b9-85cf-13877a5f78ed.xlsx&lt;/a&gt;</value>
        [DataMember(Name = "service_region_info", EmitDefaultValue = false)]
        public List<RegionInfo> ServiceRegionInfo { get; set; }

        /// <summary>
        /// 如果有审核加急权益，是否使用审核加急权益加速审核： 加速（默认）：true 不加速：false
        /// </summary>
        /// <value>如果有审核加急权益，是否使用审核加急权益加速审核： 加速（默认）：true 不加速：false</value>
        [DataMember(Name = "speed_up", EmitDefaultValue = false)]
        public string SpeedUp { get; set; }

        /// <summary>
        /// 测试账号，是否需要填写请参见&lt;a href&#x3D;\&quot;https://opendocs.alipay.com/mini/operation/standard/case/akxg6r#3.%20%E6%B5%8B%E8%AF%95%E5%86%85%E5%AE%B9%E6%8F%90%E4%BA%A4%E4%B8%8D%E5%AE%8C%E6%95%B4\&quot;&gt;https://opendocs.alipay.com/mini/operation/standard/case/akxg6r#3.%20%E6%B5%8B%E8%AF%95%E5%86%85%E5%AE%B9%E6%8F%90%E4%BA%A4%E4%B8%8D%E5%AE%8C%E6%95%B4&lt;/a&gt;
        /// </summary>
        /// <value>测试账号，是否需要填写请参见&lt;a href&#x3D;\&quot;https://opendocs.alipay.com/mini/operation/standard/case/akxg6r#3.%20%E6%B5%8B%E8%AF%95%E5%86%85%E5%AE%B9%E6%8F%90%E4%BA%A4%E4%B8%8D%E5%AE%8C%E6%95%B4\&quot;&gt;https://opendocs.alipay.com/mini/operation/standard/case/akxg6r#3.%20%E6%B5%8B%E8%AF%95%E5%86%85%E5%AE%B9%E6%8F%90%E4%BA%A4%E4%B8%8D%E5%AE%8C%E6%95%B4&lt;/a&gt;</value>
        [DataMember(Name = "test_accout", EmitDefaultValue = false)]
        public string TestAccout { get; set; }

        /// <summary>
        /// 测试账号密码
        /// </summary>
        /// <value>测试账号密码</value>
        [DataMember(Name = "test_password", EmitDefaultValue = false)]
        public string TestPassword { get; set; }

        /// <summary>
        /// 小程序版本描述，介绍此版本的主要变更和功能，30-500个字符（中文字符按2个字符计算）。
        /// </summary>
        /// <value>小程序版本描述，介绍此版本的主要变更和功能，30-500个字符（中文字符按2个字符计算）。</value>
        [DataMember(Name = "version_desc", EmitDefaultValue = false)]
        public string VersionDesc { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class AlipayOpenMiniVersionAuditApplyModel {\n");
            sb.Append("  AppCategoryIds: ").Append(AppCategoryIds).Append("\n");
            sb.Append("  AppDesc: ").Append(AppDesc).Append("\n");
            sb.Append("  AppEnglishName: ").Append(AppEnglishName).Append("\n");
            sb.Append("  AppName: ").Append(AppName).Append("\n");
            sb.Append("  AppSlogan: ").Append(AppSlogan).Append("\n");
            sb.Append("  AppVersion: ").Append(AppVersion).Append("\n");
            sb.Append("  AuditRule: ").Append(AuditRule).Append("\n");
            sb.Append("  AutoOnline: ").Append(AutoOnline).Append("\n");
            sb.Append("  BundleId: ").Append(BundleId).Append("\n");
            sb.Append("  LicenseName: ").Append(LicenseName).Append("\n");
            sb.Append("  LicenseNo: ").Append(LicenseNo).Append("\n");
            sb.Append("  LicenseValidDate: ").Append(LicenseValidDate).Append("\n");
            sb.Append("  Memo: ").Append(Memo).Append("\n");
            sb.Append("  MiniCategoryIds: ").Append(MiniCategoryIds).Append("\n");
            sb.Append("  RegionType: ").Append(RegionType).Append("\n");
            sb.Append("  ServiceEmail: ").Append(ServiceEmail).Append("\n");
            sb.Append("  ServicePhone: ").Append(ServicePhone).Append("\n");
            sb.Append("  ServiceRegionInfo: ").Append(ServiceRegionInfo).Append("\n");
            sb.Append("  SpeedUp: ").Append(SpeedUp).Append("\n");
            sb.Append("  TestAccout: ").Append(TestAccout).Append("\n");
            sb.Append("  TestPassword: ").Append(TestPassword).Append("\n");
            sb.Append("  VersionDesc: ").Append(VersionDesc).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as AlipayOpenMiniVersionAuditApplyModel);
        }

        /// <summary>
        /// Returns true if AlipayOpenMiniVersionAuditApplyModel instances are equal
        /// </summary>
        /// <param name="input">Instance of AlipayOpenMiniVersionAuditApplyModel to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AlipayOpenMiniVersionAuditApplyModel input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.AppCategoryIds == input.AppCategoryIds ||
                    (this.AppCategoryIds != null &&
                    this.AppCategoryIds.Equals(input.AppCategoryIds))
                ) && 
                (
                    this.AppDesc == input.AppDesc ||
                    (this.AppDesc != null &&
                    this.AppDesc.Equals(input.AppDesc))
                ) && 
                (
                    this.AppEnglishName == input.AppEnglishName ||
                    (this.AppEnglishName != null &&
                    this.AppEnglishName.Equals(input.AppEnglishName))
                ) && 
                (
                    this.AppName == input.AppName ||
                    (this.AppName != null &&
                    this.AppName.Equals(input.AppName))
                ) && 
                (
                    this.AppSlogan == input.AppSlogan ||
                    (this.AppSlogan != null &&
                    this.AppSlogan.Equals(input.AppSlogan))
                ) && 
                (
                    this.AppVersion == input.AppVersion ||
                    (this.AppVersion != null &&
                    this.AppVersion.Equals(input.AppVersion))
                ) && 
                (
                    this.AuditRule == input.AuditRule ||
                    (this.AuditRule != null &&
                    this.AuditRule.Equals(input.AuditRule))
                ) && 
                (
                    this.AutoOnline == input.AutoOnline ||
                    (this.AutoOnline != null &&
                    this.AutoOnline.Equals(input.AutoOnline))
                ) && 
                (
                    this.BundleId == input.BundleId ||
                    (this.BundleId != null &&
                    this.BundleId.Equals(input.BundleId))
                ) && 
                (
                    this.LicenseName == input.LicenseName ||
                    (this.LicenseName != null &&
                    this.LicenseName.Equals(input.LicenseName))
                ) && 
                (
                    this.LicenseNo == input.LicenseNo ||
                    (this.LicenseNo != null &&
                    this.LicenseNo.Equals(input.LicenseNo))
                ) && 
                (
                    this.LicenseValidDate == input.LicenseValidDate ||
                    (this.LicenseValidDate != null &&
                    this.LicenseValidDate.Equals(input.LicenseValidDate))
                ) && 
                (
                    this.Memo == input.Memo ||
                    (this.Memo != null &&
                    this.Memo.Equals(input.Memo))
                ) && 
                (
                    this.MiniCategoryIds == input.MiniCategoryIds ||
                    (this.MiniCategoryIds != null &&
                    this.MiniCategoryIds.Equals(input.MiniCategoryIds))
                ) && 
                (
                    this.RegionType == input.RegionType ||
                    (this.RegionType != null &&
                    this.RegionType.Equals(input.RegionType))
                ) && 
                (
                    this.ServiceEmail == input.ServiceEmail ||
                    (this.ServiceEmail != null &&
                    this.ServiceEmail.Equals(input.ServiceEmail))
                ) && 
                (
                    this.ServicePhone == input.ServicePhone ||
                    (this.ServicePhone != null &&
                    this.ServicePhone.Equals(input.ServicePhone))
                ) && 
                (
                    this.ServiceRegionInfo == input.ServiceRegionInfo ||
                    this.ServiceRegionInfo != null &&
                    input.ServiceRegionInfo != null &&
                    this.ServiceRegionInfo.SequenceEqual(input.ServiceRegionInfo)
                ) && 
                (
                    this.SpeedUp == input.SpeedUp ||
                    (this.SpeedUp != null &&
                    this.SpeedUp.Equals(input.SpeedUp))
                ) && 
                (
                    this.TestAccout == input.TestAccout ||
                    (this.TestAccout != null &&
                    this.TestAccout.Equals(input.TestAccout))
                ) && 
                (
                    this.TestPassword == input.TestPassword ||
                    (this.TestPassword != null &&
                    this.TestPassword.Equals(input.TestPassword))
                ) && 
                (
                    this.VersionDesc == input.VersionDesc ||
                    (this.VersionDesc != null &&
                    this.VersionDesc.Equals(input.VersionDesc))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.AppCategoryIds != null)
                {
                    hashCode = (hashCode * 59) + this.AppCategoryIds.GetHashCode();
                }
                if (this.AppDesc != null)
                {
                    hashCode = (hashCode * 59) + this.AppDesc.GetHashCode();
                }
                if (this.AppEnglishName != null)
                {
                    hashCode = (hashCode * 59) + this.AppEnglishName.GetHashCode();
                }
                if (this.AppName != null)
                {
                    hashCode = (hashCode * 59) + this.AppName.GetHashCode();
                }
                if (this.AppSlogan != null)
                {
                    hashCode = (hashCode * 59) + this.AppSlogan.GetHashCode();
                }
                if (this.AppVersion != null)
                {
                    hashCode = (hashCode * 59) + this.AppVersion.GetHashCode();
                }
                if (this.AuditRule != null)
                {
                    hashCode = (hashCode * 59) + this.AuditRule.GetHashCode();
                }
                if (this.AutoOnline != null)
                {
                    hashCode = (hashCode * 59) + this.AutoOnline.GetHashCode();
                }
                if (this.BundleId != null)
                {
                    hashCode = (hashCode * 59) + this.BundleId.GetHashCode();
                }
                if (this.LicenseName != null)
                {
                    hashCode = (hashCode * 59) + this.LicenseName.GetHashCode();
                }
                if (this.LicenseNo != null)
                {
                    hashCode = (hashCode * 59) + this.LicenseNo.GetHashCode();
                }
                if (this.LicenseValidDate != null)
                {
                    hashCode = (hashCode * 59) + this.LicenseValidDate.GetHashCode();
                }
                if (this.Memo != null)
                {
                    hashCode = (hashCode * 59) + this.Memo.GetHashCode();
                }
                if (this.MiniCategoryIds != null)
                {
                    hashCode = (hashCode * 59) + this.MiniCategoryIds.GetHashCode();
                }
                if (this.RegionType != null)
                {
                    hashCode = (hashCode * 59) + this.RegionType.GetHashCode();
                }
                if (this.ServiceEmail != null)
                {
                    hashCode = (hashCode * 59) + this.ServiceEmail.GetHashCode();
                }
                if (this.ServicePhone != null)
                {
                    hashCode = (hashCode * 59) + this.ServicePhone.GetHashCode();
                }
                if (this.ServiceRegionInfo != null)
                {
                    hashCode = (hashCode * 59) + this.ServiceRegionInfo.GetHashCode();
                }
                if (this.SpeedUp != null)
                {
                    hashCode = (hashCode * 59) + this.SpeedUp.GetHashCode();
                }
                if (this.TestAccout != null)
                {
                    hashCode = (hashCode * 59) + this.TestAccout.GetHashCode();
                }
                if (this.TestPassword != null)
                {
                    hashCode = (hashCode * 59) + this.TestPassword.GetHashCode();
                }
                if (this.VersionDesc != null)
                {
                    hashCode = (hashCode * 59) + this.VersionDesc.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
