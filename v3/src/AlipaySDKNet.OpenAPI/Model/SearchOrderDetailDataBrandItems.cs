/*
 * 支付宝开放平台API
 *
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2025-02-19
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = AlipaySDKNet.OpenAPI.Client.OpenAPIDateConverter;

namespace AlipaySDKNet.OpenAPI.Model
{
    /// <summary>
    /// SearchOrderDetailDataBrandItems
    /// </summary>
    [DataContract(Name = "SearchOrderDetailDataBrandItems")]
    public partial class SearchOrderDetailDataBrandItems : IEquatable<SearchOrderDetailDataBrandItems>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="SearchOrderDetailDataBrandItems" /> class.
        /// </summary>
        /// <param name="bizId">工单详情bizid.</param>
        /// <param name="boxStatus">上下架状态.</param>
        /// <param name="brandBoxKeywords">关键词信息.</param>
        /// <param name="brandDetailList">工单详情数据信息.</param>
        /// <param name="brandTemplateId">品牌展示模板类型.</param>
        /// <param name="channel">工单详情数据channel.</param>
        /// <param name="merchantType">工单详情数据merchant_type.</param>
        /// <param name="templateId">模板id.</param>
        public SearchOrderDetailDataBrandItems(string bizId = default(string), string boxStatus = default(string), string brandBoxKeywords = default(string), List<SearchOrderBrandDetail> brandDetailList = default(List<SearchOrderBrandDetail>), string brandTemplateId = default(string), string channel = default(string), string merchantType = default(string), string templateId = default(string))
        {
            this.BizId = bizId;
            this.BoxStatus = boxStatus;
            this.BrandBoxKeywords = brandBoxKeywords;
            this.BrandDetailList = brandDetailList;
            this.BrandTemplateId = brandTemplateId;
            this.Channel = channel;
            this.MerchantType = merchantType;
            this.TemplateId = templateId;
        }

        /// <summary>
        /// 工单详情bizid
        /// </summary>
        /// <value>工单详情bizid</value>
        [DataMember(Name = "biz_id", EmitDefaultValue = false)]
        public string BizId { get; set; }

        /// <summary>
        /// 上下架状态
        /// </summary>
        /// <value>上下架状态</value>
        [DataMember(Name = "box_status", EmitDefaultValue = false)]
        public string BoxStatus { get; set; }

        /// <summary>
        /// 关键词信息
        /// </summary>
        /// <value>关键词信息</value>
        [DataMember(Name = "brand_box_keywords", EmitDefaultValue = false)]
        public string BrandBoxKeywords { get; set; }

        /// <summary>
        /// 工单详情数据信息
        /// </summary>
        /// <value>工单详情数据信息</value>
        [DataMember(Name = "brand_detail_list", EmitDefaultValue = false)]
        public List<SearchOrderBrandDetail> BrandDetailList { get; set; }

        /// <summary>
        /// 品牌展示模板类型
        /// </summary>
        /// <value>品牌展示模板类型</value>
        [DataMember(Name = "brand_template_id", EmitDefaultValue = false)]
        public string BrandTemplateId { get; set; }

        /// <summary>
        /// 工单详情数据channel
        /// </summary>
        /// <value>工单详情数据channel</value>
        [DataMember(Name = "channel", EmitDefaultValue = false)]
        public string Channel { get; set; }

        /// <summary>
        /// 工单详情数据merchant_type
        /// </summary>
        /// <value>工单详情数据merchant_type</value>
        [DataMember(Name = "merchant_type", EmitDefaultValue = false)]
        public string MerchantType { get; set; }

        /// <summary>
        /// 模板id
        /// </summary>
        /// <value>模板id</value>
        [DataMember(Name = "template_id", EmitDefaultValue = false)]
        public string TemplateId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class SearchOrderDetailDataBrandItems {\n");
            sb.Append("  BizId: ").Append(BizId).Append("\n");
            sb.Append("  BoxStatus: ").Append(BoxStatus).Append("\n");
            sb.Append("  BrandBoxKeywords: ").Append(BrandBoxKeywords).Append("\n");
            sb.Append("  BrandDetailList: ").Append(BrandDetailList).Append("\n");
            sb.Append("  BrandTemplateId: ").Append(BrandTemplateId).Append("\n");
            sb.Append("  Channel: ").Append(Channel).Append("\n");
            sb.Append("  MerchantType: ").Append(MerchantType).Append("\n");
            sb.Append("  TemplateId: ").Append(TemplateId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as SearchOrderDetailDataBrandItems);
        }

        /// <summary>
        /// Returns true if SearchOrderDetailDataBrandItems instances are equal
        /// </summary>
        /// <param name="input">Instance of SearchOrderDetailDataBrandItems to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(SearchOrderDetailDataBrandItems input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.BizId == input.BizId ||
                    (this.BizId != null &&
                    this.BizId.Equals(input.BizId))
                ) && 
                (
                    this.BoxStatus == input.BoxStatus ||
                    (this.BoxStatus != null &&
                    this.BoxStatus.Equals(input.BoxStatus))
                ) && 
                (
                    this.BrandBoxKeywords == input.BrandBoxKeywords ||
                    (this.BrandBoxKeywords != null &&
                    this.BrandBoxKeywords.Equals(input.BrandBoxKeywords))
                ) && 
                (
                    this.BrandDetailList == input.BrandDetailList ||
                    this.BrandDetailList != null &&
                    input.BrandDetailList != null &&
                    this.BrandDetailList.SequenceEqual(input.BrandDetailList)
                ) && 
                (
                    this.BrandTemplateId == input.BrandTemplateId ||
                    (this.BrandTemplateId != null &&
                    this.BrandTemplateId.Equals(input.BrandTemplateId))
                ) && 
                (
                    this.Channel == input.Channel ||
                    (this.Channel != null &&
                    this.Channel.Equals(input.Channel))
                ) && 
                (
                    this.MerchantType == input.MerchantType ||
                    (this.MerchantType != null &&
                    this.MerchantType.Equals(input.MerchantType))
                ) && 
                (
                    this.TemplateId == input.TemplateId ||
                    (this.TemplateId != null &&
                    this.TemplateId.Equals(input.TemplateId))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.BizId != null)
                {
                    hashCode = (hashCode * 59) + this.BizId.GetHashCode();
                }
                if (this.BoxStatus != null)
                {
                    hashCode = (hashCode * 59) + this.BoxStatus.GetHashCode();
                }
                if (this.BrandBoxKeywords != null)
                {
                    hashCode = (hashCode * 59) + this.BrandBoxKeywords.GetHashCode();
                }
                if (this.BrandDetailList != null)
                {
                    hashCode = (hashCode * 59) + this.BrandDetailList.GetHashCode();
                }
                if (this.BrandTemplateId != null)
                {
                    hashCode = (hashCode * 59) + this.BrandTemplateId.GetHashCode();
                }
                if (this.Channel != null)
                {
                    hashCode = (hashCode * 59) + this.Channel.GetHashCode();
                }
                if (this.MerchantType != null)
                {
                    hashCode = (hashCode * 59) + this.MerchantType.GetHashCode();
                }
                if (this.TemplateId != null)
                {
                    hashCode = (hashCode * 59) + this.TemplateId.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
