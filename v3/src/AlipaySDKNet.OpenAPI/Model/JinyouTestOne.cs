/*
 * 支付宝开放平台API
 *
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2025-02-19
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = AlipaySDKNet.OpenAPI.Client.OpenAPIDateConverter;

namespace AlipaySDKNet.OpenAPI.Model
{
    /// <summary>
    /// JinyouTestOne
    /// </summary>
    [DataContract(Name = "JinyouTestOne")]
    public partial class JinyouTestOne : IEquatable<JinyouTestOne>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="JinyouTestOne" /> class.
        /// </summary>
        /// <param name="o1N">1.</param>
        /// <param name="o2Openid">o_2_y.</param>
        /// <param name="o2Y">o_2_y.</param>
        /// <param name="o3Openid">o_3_y.</param>
        /// <param name="o3Y">o_3_y.</param>
        public JinyouTestOne(string o1N = default(string), string o2Openid = default(string), string o2Y = default(string), string o3Openid = default(string), int o3Y = default(int))
        {
            this.O1N = o1N;
            this.O2Openid = o2Openid;
            this.O2Y = o2Y;
            this.O3Openid = o3Openid;
            this.O3Y = o3Y;
        }

        /// <summary>
        /// 1
        /// </summary>
        /// <value>1</value>
        [DataMember(Name = "o_1_n", EmitDefaultValue = false)]
        public string O1N { get; set; }

        /// <summary>
        /// o_2_y
        /// </summary>
        /// <value>o_2_y</value>
        [DataMember(Name = "o_2_openid", EmitDefaultValue = false)]
        public string O2Openid { get; set; }

        /// <summary>
        /// o_2_y
        /// </summary>
        /// <value>o_2_y</value>
        [DataMember(Name = "o_2_y", EmitDefaultValue = false)]
        public string O2Y { get; set; }

        /// <summary>
        /// o_3_y
        /// </summary>
        /// <value>o_3_y</value>
        [DataMember(Name = "o_3_openid", EmitDefaultValue = false)]
        public string O3Openid { get; set; }

        /// <summary>
        /// o_3_y
        /// </summary>
        /// <value>o_3_y</value>
        [DataMember(Name = "o_3_y", EmitDefaultValue = false)]
        public int O3Y { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class JinyouTestOne {\n");
            sb.Append("  O1N: ").Append(O1N).Append("\n");
            sb.Append("  O2Openid: ").Append(O2Openid).Append("\n");
            sb.Append("  O2Y: ").Append(O2Y).Append("\n");
            sb.Append("  O3Openid: ").Append(O3Openid).Append("\n");
            sb.Append("  O3Y: ").Append(O3Y).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as JinyouTestOne);
        }

        /// <summary>
        /// Returns true if JinyouTestOne instances are equal
        /// </summary>
        /// <param name="input">Instance of JinyouTestOne to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(JinyouTestOne input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.O1N == input.O1N ||
                    (this.O1N != null &&
                    this.O1N.Equals(input.O1N))
                ) && 
                (
                    this.O2Openid == input.O2Openid ||
                    (this.O2Openid != null &&
                    this.O2Openid.Equals(input.O2Openid))
                ) && 
                (
                    this.O2Y == input.O2Y ||
                    (this.O2Y != null &&
                    this.O2Y.Equals(input.O2Y))
                ) && 
                (
                    this.O3Openid == input.O3Openid ||
                    (this.O3Openid != null &&
                    this.O3Openid.Equals(input.O3Openid))
                ) && 
                (
                    this.O3Y == input.O3Y ||
                    this.O3Y.Equals(input.O3Y)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.O1N != null)
                {
                    hashCode = (hashCode * 59) + this.O1N.GetHashCode();
                }
                if (this.O2Openid != null)
                {
                    hashCode = (hashCode * 59) + this.O2Openid.GetHashCode();
                }
                if (this.O2Y != null)
                {
                    hashCode = (hashCode * 59) + this.O2Y.GetHashCode();
                }
                if (this.O3Openid != null)
                {
                    hashCode = (hashCode * 59) + this.O3Openid.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.O3Y.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
