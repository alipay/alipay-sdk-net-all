/*
 * 支付宝开放平台API
 *
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2025-02-19
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = AlipaySDKNet.OpenAPI.Client.OpenAPIDateConverter;

namespace AlipaySDKNet.OpenAPI.Model
{
    /// <summary>
    /// AlipayCommerceEcEmployeeInviteQueryResponseModel
    /// </summary>
    [DataContract(Name = "AlipayCommerceEcEmployeeInviteQueryResponseModel")]
    public partial class AlipayCommerceEcEmployeeInviteQueryResponseModel : IEquatable<AlipayCommerceEcEmployeeInviteQueryResponseModel>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AlipayCommerceEcEmployeeInviteQueryResponseModel" /> class.
        /// </summary>
        /// <param name="enterpriseId">企业id.</param>
        /// <param name="miniAppSignUrl">支付宝服务商小程序跳入企业码小程序签约链接.</param>
        /// <param name="shareCode">签约吱口令.</param>
        /// <param name="signUrl">邀请链接.</param>
        public AlipayCommerceEcEmployeeInviteQueryResponseModel(string enterpriseId = default(string), string miniAppSignUrl = default(string), string shareCode = default(string), string signUrl = default(string))
        {
            this.EnterpriseId = enterpriseId;
            this.MiniAppSignUrl = miniAppSignUrl;
            this.ShareCode = shareCode;
            this.SignUrl = signUrl;
        }

        /// <summary>
        /// 企业id
        /// </summary>
        /// <value>企业id</value>
        [DataMember(Name = "enterprise_id", EmitDefaultValue = false)]
        public string EnterpriseId { get; set; }

        /// <summary>
        /// 支付宝服务商小程序跳入企业码小程序签约链接
        /// </summary>
        /// <value>支付宝服务商小程序跳入企业码小程序签约链接</value>
        [DataMember(Name = "mini_app_sign_url", EmitDefaultValue = false)]
        public string MiniAppSignUrl { get; set; }

        /// <summary>
        /// 签约吱口令
        /// </summary>
        /// <value>签约吱口令</value>
        [DataMember(Name = "share_code", EmitDefaultValue = false)]
        public string ShareCode { get; set; }

        /// <summary>
        /// 邀请链接
        /// </summary>
        /// <value>邀请链接</value>
        [DataMember(Name = "sign_url", EmitDefaultValue = false)]
        public string SignUrl { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class AlipayCommerceEcEmployeeInviteQueryResponseModel {\n");
            sb.Append("  EnterpriseId: ").Append(EnterpriseId).Append("\n");
            sb.Append("  MiniAppSignUrl: ").Append(MiniAppSignUrl).Append("\n");
            sb.Append("  ShareCode: ").Append(ShareCode).Append("\n");
            sb.Append("  SignUrl: ").Append(SignUrl).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as AlipayCommerceEcEmployeeInviteQueryResponseModel);
        }

        /// <summary>
        /// Returns true if AlipayCommerceEcEmployeeInviteQueryResponseModel instances are equal
        /// </summary>
        /// <param name="input">Instance of AlipayCommerceEcEmployeeInviteQueryResponseModel to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AlipayCommerceEcEmployeeInviteQueryResponseModel input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.EnterpriseId == input.EnterpriseId ||
                    (this.EnterpriseId != null &&
                    this.EnterpriseId.Equals(input.EnterpriseId))
                ) && 
                (
                    this.MiniAppSignUrl == input.MiniAppSignUrl ||
                    (this.MiniAppSignUrl != null &&
                    this.MiniAppSignUrl.Equals(input.MiniAppSignUrl))
                ) && 
                (
                    this.ShareCode == input.ShareCode ||
                    (this.ShareCode != null &&
                    this.ShareCode.Equals(input.ShareCode))
                ) && 
                (
                    this.SignUrl == input.SignUrl ||
                    (this.SignUrl != null &&
                    this.SignUrl.Equals(input.SignUrl))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.EnterpriseId != null)
                {
                    hashCode = (hashCode * 59) + this.EnterpriseId.GetHashCode();
                }
                if (this.MiniAppSignUrl != null)
                {
                    hashCode = (hashCode * 59) + this.MiniAppSignUrl.GetHashCode();
                }
                if (this.ShareCode != null)
                {
                    hashCode = (hashCode * 59) + this.ShareCode.GetHashCode();
                }
                if (this.SignUrl != null)
                {
                    hashCode = (hashCode * 59) + this.SignUrl.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
