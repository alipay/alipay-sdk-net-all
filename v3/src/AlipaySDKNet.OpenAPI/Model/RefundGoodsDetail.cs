/*
 * 支付宝开放平台API
 *
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2025-02-19
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = AlipaySDKNet.OpenAPI.Client.OpenAPIDateConverter;

namespace AlipaySDKNet.OpenAPI.Model
{
    /// <summary>
    /// RefundGoodsDetail
    /// </summary>
    [DataContract(Name = "RefundGoodsDetail")]
    public partial class RefundGoodsDetail : IEquatable<RefundGoodsDetail>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="RefundGoodsDetail" /> class.
        /// </summary>
        /// <param name="goodsId">商品编号。 对应支付时传入的goods_id.</param>
        /// <param name="outCertificateNoList">外部商品凭证编号列表.</param>
        /// <param name="outItemId">商家侧小程序商品ID，对应支付时传入的out_item_id.</param>
        /// <param name="outSkuId">商家侧小程序商品sku ID，对应支付时传入的out_sku_id.</param>
        /// <param name="refundAmount">该商品的退款总金额，单位为元.</param>
        public RefundGoodsDetail(string goodsId = default(string), List<string> outCertificateNoList = default(List<string>), string outItemId = default(string), string outSkuId = default(string), string refundAmount = default(string))
        {
            this.GoodsId = goodsId;
            this.OutCertificateNoList = outCertificateNoList;
            this.OutItemId = outItemId;
            this.OutSkuId = outSkuId;
            this.RefundAmount = refundAmount;
        }

        /// <summary>
        /// 商品编号。 对应支付时传入的goods_id
        /// </summary>
        /// <value>商品编号。 对应支付时传入的goods_id</value>
        [DataMember(Name = "goods_id", EmitDefaultValue = false)]
        public string GoodsId { get; set; }

        /// <summary>
        /// 外部商品凭证编号列表
        /// </summary>
        /// <value>外部商品凭证编号列表</value>
        [DataMember(Name = "out_certificate_no_list", EmitDefaultValue = false)]
        public List<string> OutCertificateNoList { get; set; }

        /// <summary>
        /// 商家侧小程序商品ID，对应支付时传入的out_item_id
        /// </summary>
        /// <value>商家侧小程序商品ID，对应支付时传入的out_item_id</value>
        [DataMember(Name = "out_item_id", EmitDefaultValue = false)]
        public string OutItemId { get; set; }

        /// <summary>
        /// 商家侧小程序商品sku ID，对应支付时传入的out_sku_id
        /// </summary>
        /// <value>商家侧小程序商品sku ID，对应支付时传入的out_sku_id</value>
        [DataMember(Name = "out_sku_id", EmitDefaultValue = false)]
        public string OutSkuId { get; set; }

        /// <summary>
        /// 该商品的退款总金额，单位为元
        /// </summary>
        /// <value>该商品的退款总金额，单位为元</value>
        [DataMember(Name = "refund_amount", EmitDefaultValue = false)]
        public string RefundAmount { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class RefundGoodsDetail {\n");
            sb.Append("  GoodsId: ").Append(GoodsId).Append("\n");
            sb.Append("  OutCertificateNoList: ").Append(OutCertificateNoList).Append("\n");
            sb.Append("  OutItemId: ").Append(OutItemId).Append("\n");
            sb.Append("  OutSkuId: ").Append(OutSkuId).Append("\n");
            sb.Append("  RefundAmount: ").Append(RefundAmount).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as RefundGoodsDetail);
        }

        /// <summary>
        /// Returns true if RefundGoodsDetail instances are equal
        /// </summary>
        /// <param name="input">Instance of RefundGoodsDetail to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(RefundGoodsDetail input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.GoodsId == input.GoodsId ||
                    (this.GoodsId != null &&
                    this.GoodsId.Equals(input.GoodsId))
                ) && 
                (
                    this.OutCertificateNoList == input.OutCertificateNoList ||
                    this.OutCertificateNoList != null &&
                    input.OutCertificateNoList != null &&
                    this.OutCertificateNoList.SequenceEqual(input.OutCertificateNoList)
                ) && 
                (
                    this.OutItemId == input.OutItemId ||
                    (this.OutItemId != null &&
                    this.OutItemId.Equals(input.OutItemId))
                ) && 
                (
                    this.OutSkuId == input.OutSkuId ||
                    (this.OutSkuId != null &&
                    this.OutSkuId.Equals(input.OutSkuId))
                ) && 
                (
                    this.RefundAmount == input.RefundAmount ||
                    (this.RefundAmount != null &&
                    this.RefundAmount.Equals(input.RefundAmount))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.GoodsId != null)
                {
                    hashCode = (hashCode * 59) + this.GoodsId.GetHashCode();
                }
                if (this.OutCertificateNoList != null)
                {
                    hashCode = (hashCode * 59) + this.OutCertificateNoList.GetHashCode();
                }
                if (this.OutItemId != null)
                {
                    hashCode = (hashCode * 59) + this.OutItemId.GetHashCode();
                }
                if (this.OutSkuId != null)
                {
                    hashCode = (hashCode * 59) + this.OutSkuId.GetHashCode();
                }
                if (this.RefundAmount != null)
                {
                    hashCode = (hashCode * 59) + this.RefundAmount.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
