/*
 * 支付宝开放平台API
 *
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2025-02-19
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = AlipaySDKNet.OpenAPI.Client.OpenAPIDateConverter;

namespace AlipaySDKNet.OpenAPI.Model
{
    /// <summary>
    /// AlipayEcoMycarParkingOrderSyncModel
    /// </summary>
    [DataContract(Name = "AlipayEcoMycarParkingOrderSyncModel")]
    public partial class AlipayEcoMycarParkingOrderSyncModel : IEquatable<AlipayEcoMycarParkingOrderSyncModel>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AlipayEcoMycarParkingOrderSyncModel" /> class.
        /// </summary>
        /// <param name="agentPid">该笔停车交易需要返佣的对象实体PID，可能是商户，可能是ISV；只做下沉，用于离线表层面对账。.</param>
        /// <param name="carNumber">车牌.</param>
        /// <param name="cardNumber">如果是停车卡缴费，则填入停车卡卡号，否则为&#39;*&#39;.</param>
        /// <param name="inDuration">停车时长（以分为单位）.</param>
        /// <param name="inTime">入场时间，格式\&quot;YYYY-MM-DD HH:mm:ss\&quot;，24小时制.</param>
        /// <param name="openId">应用用户ID，唯一标识.</param>
        /// <param name="orderNo">支付宝支付流水，系统唯一.</param>
        /// <param name="orderStatus">设备商订单状态，枚举支持： * 0：成功。 * 1：失败。.</param>
        /// <param name="orderTime">订单创建时间，格式\&quot;YYYY-MM-DD HH:mm:ss\&quot;，24小时制.</param>
        /// <param name="outOrderNo">设备商订单号，由ISV系统生成.</param>
        /// <param name="outParkingId">ISV停车场ID，由ISV定义的停车场标识，同一个isv或商户范围内唯一。需与 &lt;a href&#x3D;\&quot;https://opendocs.alipay.com/apis/api_19/alipay.eco.mycar.parking.parkinglotinfo.create\&quot;&gt;alipay.eco.mycar.parking.parkinglotinfo.create&lt;/a&gt;(录入停车场信息)接口传入值一致。.</param>
        /// <param name="outTime">出场时间，格式\&quot;YYYY-MM-DD HH:mm:ss\&quot;，24小时制.</param>
        /// <param name="parkingId">支付宝停车平台ID，由支付宝定义的该停车场标识，同一个isv或商户范围内唯一。通过 &lt;a href&#x3D;\&quot;https://opendocs.alipay.com/apis/api_19/alipay.eco.mycar.parking.parkinglotinfo.create\&quot;&gt;alipay.eco.mycar.parking.parkinglotinfo.create&lt;/a&gt;(录入停车场信息)接口获取。.</param>
        /// <param name="parkingName">停车场名称，需与&lt;a href&#x3D;\&quot;https://opendocs.alipay.com/apis/api_19/alipay.eco.mycar.parking.parkinglotinfo.create\&quot;&gt;alipay.eco.mycar.parking.parkinglotinfo.create&lt;/a&gt;(录入停车场信息)接口传入值一致。.</param>
        /// <param name="parkingRecordId">支付宝业务流水号，用于记录车辆从驶入到驶出的全流程。通过 alipay.eco.mycar.parking.enterinfo.sync(车辆驶入接口)接口获取。.</param>
        /// <param name="payMoney">缴费金额，保留小数点后两位.</param>
        /// <param name="payScene">支付场景：INPARKINGLOT_PAY：场内在线缴费；ENTRANCE_EXIT_PAY：出入口缴费、VEH_DEVICE_PAY：车机缴费；会根据场景判断是否发放能量，当前只有场内支付场景会发能量，需要能量发放请与服务接入支持同学提前沟通。.</param>
        /// <param name="payTime">缴费时间, 格式\&quot;YYYYMM-DD HH:mm:ss\&quot;，24小时制.</param>
        /// <param name="payType">付款方式，枚举支持： *1：支付宝在线缴费。.</param>
        /// <param name="smid">间连商户ID.</param>
        /// <param name="userId">停车缴费用户 id，用户在支付宝的唯一标识，以 2088 开头的 16 位纯数字组成。 注意：ISV需保证用户 id的正确性，以免导致用户在停车平台查询不到相关的订单信息。.</param>
        public AlipayEcoMycarParkingOrderSyncModel(string agentPid = default(string), string carNumber = default(string), string cardNumber = default(string), string inDuration = default(string), string inTime = default(string), string openId = default(string), string orderNo = default(string), string orderStatus = default(string), string orderTime = default(string), string outOrderNo = default(string), string outParkingId = default(string), string outTime = default(string), string parkingId = default(string), string parkingName = default(string), string parkingRecordId = default(string), string payMoney = default(string), string payScene = default(string), string payTime = default(string), string payType = default(string), string smid = default(string), string userId = default(string))
        {
            this.AgentPid = agentPid;
            this.CarNumber = carNumber;
            this.CardNumber = cardNumber;
            this.InDuration = inDuration;
            this.InTime = inTime;
            this.OpenId = openId;
            this.OrderNo = orderNo;
            this.OrderStatus = orderStatus;
            this.OrderTime = orderTime;
            this.OutOrderNo = outOrderNo;
            this.OutParkingId = outParkingId;
            this.OutTime = outTime;
            this.ParkingId = parkingId;
            this.ParkingName = parkingName;
            this.ParkingRecordId = parkingRecordId;
            this.PayMoney = payMoney;
            this.PayScene = payScene;
            this.PayTime = payTime;
            this.PayType = payType;
            this.Smid = smid;
            this.UserId = userId;
        }

        /// <summary>
        /// 该笔停车交易需要返佣的对象实体PID，可能是商户，可能是ISV；只做下沉，用于离线表层面对账。
        /// </summary>
        /// <value>该笔停车交易需要返佣的对象实体PID，可能是商户，可能是ISV；只做下沉，用于离线表层面对账。</value>
        [DataMember(Name = "agent_pid", EmitDefaultValue = false)]
        public string AgentPid { get; set; }

        /// <summary>
        /// 车牌
        /// </summary>
        /// <value>车牌</value>
        [DataMember(Name = "car_number", EmitDefaultValue = false)]
        public string CarNumber { get; set; }

        /// <summary>
        /// 如果是停车卡缴费，则填入停车卡卡号，否则为&#39;*&#39;
        /// </summary>
        /// <value>如果是停车卡缴费，则填入停车卡卡号，否则为&#39;*&#39;</value>
        [DataMember(Name = "card_number", EmitDefaultValue = false)]
        public string CardNumber { get; set; }

        /// <summary>
        /// 停车时长（以分为单位）
        /// </summary>
        /// <value>停车时长（以分为单位）</value>
        [DataMember(Name = "in_duration", EmitDefaultValue = false)]
        public string InDuration { get; set; }

        /// <summary>
        /// 入场时间，格式\&quot;YYYY-MM-DD HH:mm:ss\&quot;，24小时制
        /// </summary>
        /// <value>入场时间，格式\&quot;YYYY-MM-DD HH:mm:ss\&quot;，24小时制</value>
        [DataMember(Name = "in_time", EmitDefaultValue = false)]
        public string InTime { get; set; }

        /// <summary>
        /// 应用用户ID，唯一标识
        /// </summary>
        /// <value>应用用户ID，唯一标识</value>
        [DataMember(Name = "open_id", EmitDefaultValue = false)]
        public string OpenId { get; set; }

        /// <summary>
        /// 支付宝支付流水，系统唯一
        /// </summary>
        /// <value>支付宝支付流水，系统唯一</value>
        [DataMember(Name = "order_no", EmitDefaultValue = false)]
        public string OrderNo { get; set; }

        /// <summary>
        /// 设备商订单状态，枚举支持： * 0：成功。 * 1：失败。
        /// </summary>
        /// <value>设备商订单状态，枚举支持： * 0：成功。 * 1：失败。</value>
        [DataMember(Name = "order_status", EmitDefaultValue = false)]
        public string OrderStatus { get; set; }

        /// <summary>
        /// 订单创建时间，格式\&quot;YYYY-MM-DD HH:mm:ss\&quot;，24小时制
        /// </summary>
        /// <value>订单创建时间，格式\&quot;YYYY-MM-DD HH:mm:ss\&quot;，24小时制</value>
        [DataMember(Name = "order_time", EmitDefaultValue = false)]
        public string OrderTime { get; set; }

        /// <summary>
        /// 设备商订单号，由ISV系统生成
        /// </summary>
        /// <value>设备商订单号，由ISV系统生成</value>
        [DataMember(Name = "out_order_no", EmitDefaultValue = false)]
        public string OutOrderNo { get; set; }

        /// <summary>
        /// ISV停车场ID，由ISV定义的停车场标识，同一个isv或商户范围内唯一。需与 &lt;a href&#x3D;\&quot;https://opendocs.alipay.com/apis/api_19/alipay.eco.mycar.parking.parkinglotinfo.create\&quot;&gt;alipay.eco.mycar.parking.parkinglotinfo.create&lt;/a&gt;(录入停车场信息)接口传入值一致。
        /// </summary>
        /// <value>ISV停车场ID，由ISV定义的停车场标识，同一个isv或商户范围内唯一。需与 &lt;a href&#x3D;\&quot;https://opendocs.alipay.com/apis/api_19/alipay.eco.mycar.parking.parkinglotinfo.create\&quot;&gt;alipay.eco.mycar.parking.parkinglotinfo.create&lt;/a&gt;(录入停车场信息)接口传入值一致。</value>
        [DataMember(Name = "out_parking_id", EmitDefaultValue = false)]
        public string OutParkingId { get; set; }

        /// <summary>
        /// 出场时间，格式\&quot;YYYY-MM-DD HH:mm:ss\&quot;，24小时制
        /// </summary>
        /// <value>出场时间，格式\&quot;YYYY-MM-DD HH:mm:ss\&quot;，24小时制</value>
        [DataMember(Name = "out_time", EmitDefaultValue = false)]
        public string OutTime { get; set; }

        /// <summary>
        /// 支付宝停车平台ID，由支付宝定义的该停车场标识，同一个isv或商户范围内唯一。通过 &lt;a href&#x3D;\&quot;https://opendocs.alipay.com/apis/api_19/alipay.eco.mycar.parking.parkinglotinfo.create\&quot;&gt;alipay.eco.mycar.parking.parkinglotinfo.create&lt;/a&gt;(录入停车场信息)接口获取。
        /// </summary>
        /// <value>支付宝停车平台ID，由支付宝定义的该停车场标识，同一个isv或商户范围内唯一。通过 &lt;a href&#x3D;\&quot;https://opendocs.alipay.com/apis/api_19/alipay.eco.mycar.parking.parkinglotinfo.create\&quot;&gt;alipay.eco.mycar.parking.parkinglotinfo.create&lt;/a&gt;(录入停车场信息)接口获取。</value>
        [DataMember(Name = "parking_id", EmitDefaultValue = false)]
        public string ParkingId { get; set; }

        /// <summary>
        /// 停车场名称，需与&lt;a href&#x3D;\&quot;https://opendocs.alipay.com/apis/api_19/alipay.eco.mycar.parking.parkinglotinfo.create\&quot;&gt;alipay.eco.mycar.parking.parkinglotinfo.create&lt;/a&gt;(录入停车场信息)接口传入值一致。
        /// </summary>
        /// <value>停车场名称，需与&lt;a href&#x3D;\&quot;https://opendocs.alipay.com/apis/api_19/alipay.eco.mycar.parking.parkinglotinfo.create\&quot;&gt;alipay.eco.mycar.parking.parkinglotinfo.create&lt;/a&gt;(录入停车场信息)接口传入值一致。</value>
        [DataMember(Name = "parking_name", EmitDefaultValue = false)]
        public string ParkingName { get; set; }

        /// <summary>
        /// 支付宝业务流水号，用于记录车辆从驶入到驶出的全流程。通过 alipay.eco.mycar.parking.enterinfo.sync(车辆驶入接口)接口获取。
        /// </summary>
        /// <value>支付宝业务流水号，用于记录车辆从驶入到驶出的全流程。通过 alipay.eco.mycar.parking.enterinfo.sync(车辆驶入接口)接口获取。</value>
        [DataMember(Name = "parking_record_id", EmitDefaultValue = false)]
        public string ParkingRecordId { get; set; }

        /// <summary>
        /// 缴费金额，保留小数点后两位
        /// </summary>
        /// <value>缴费金额，保留小数点后两位</value>
        [DataMember(Name = "pay_money", EmitDefaultValue = false)]
        public string PayMoney { get; set; }

        /// <summary>
        /// 支付场景：INPARKINGLOT_PAY：场内在线缴费；ENTRANCE_EXIT_PAY：出入口缴费、VEH_DEVICE_PAY：车机缴费；会根据场景判断是否发放能量，当前只有场内支付场景会发能量，需要能量发放请与服务接入支持同学提前沟通。
        /// </summary>
        /// <value>支付场景：INPARKINGLOT_PAY：场内在线缴费；ENTRANCE_EXIT_PAY：出入口缴费、VEH_DEVICE_PAY：车机缴费；会根据场景判断是否发放能量，当前只有场内支付场景会发能量，需要能量发放请与服务接入支持同学提前沟通。</value>
        [DataMember(Name = "pay_scene", EmitDefaultValue = false)]
        public string PayScene { get; set; }

        /// <summary>
        /// 缴费时间, 格式\&quot;YYYYMM-DD HH:mm:ss\&quot;，24小时制
        /// </summary>
        /// <value>缴费时间, 格式\&quot;YYYYMM-DD HH:mm:ss\&quot;，24小时制</value>
        [DataMember(Name = "pay_time", EmitDefaultValue = false)]
        public string PayTime { get; set; }

        /// <summary>
        /// 付款方式，枚举支持： *1：支付宝在线缴费。
        /// </summary>
        /// <value>付款方式，枚举支持： *1：支付宝在线缴费。</value>
        [DataMember(Name = "pay_type", EmitDefaultValue = false)]
        public string PayType { get; set; }

        /// <summary>
        /// 间连商户ID
        /// </summary>
        /// <value>间连商户ID</value>
        [DataMember(Name = "smid", EmitDefaultValue = false)]
        public string Smid { get; set; }

        /// <summary>
        /// 停车缴费用户 id，用户在支付宝的唯一标识，以 2088 开头的 16 位纯数字组成。 注意：ISV需保证用户 id的正确性，以免导致用户在停车平台查询不到相关的订单信息。
        /// </summary>
        /// <value>停车缴费用户 id，用户在支付宝的唯一标识，以 2088 开头的 16 位纯数字组成。 注意：ISV需保证用户 id的正确性，以免导致用户在停车平台查询不到相关的订单信息。</value>
        [DataMember(Name = "user_id", EmitDefaultValue = false)]
        public string UserId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class AlipayEcoMycarParkingOrderSyncModel {\n");
            sb.Append("  AgentPid: ").Append(AgentPid).Append("\n");
            sb.Append("  CarNumber: ").Append(CarNumber).Append("\n");
            sb.Append("  CardNumber: ").Append(CardNumber).Append("\n");
            sb.Append("  InDuration: ").Append(InDuration).Append("\n");
            sb.Append("  InTime: ").Append(InTime).Append("\n");
            sb.Append("  OpenId: ").Append(OpenId).Append("\n");
            sb.Append("  OrderNo: ").Append(OrderNo).Append("\n");
            sb.Append("  OrderStatus: ").Append(OrderStatus).Append("\n");
            sb.Append("  OrderTime: ").Append(OrderTime).Append("\n");
            sb.Append("  OutOrderNo: ").Append(OutOrderNo).Append("\n");
            sb.Append("  OutParkingId: ").Append(OutParkingId).Append("\n");
            sb.Append("  OutTime: ").Append(OutTime).Append("\n");
            sb.Append("  ParkingId: ").Append(ParkingId).Append("\n");
            sb.Append("  ParkingName: ").Append(ParkingName).Append("\n");
            sb.Append("  ParkingRecordId: ").Append(ParkingRecordId).Append("\n");
            sb.Append("  PayMoney: ").Append(PayMoney).Append("\n");
            sb.Append("  PayScene: ").Append(PayScene).Append("\n");
            sb.Append("  PayTime: ").Append(PayTime).Append("\n");
            sb.Append("  PayType: ").Append(PayType).Append("\n");
            sb.Append("  Smid: ").Append(Smid).Append("\n");
            sb.Append("  UserId: ").Append(UserId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as AlipayEcoMycarParkingOrderSyncModel);
        }

        /// <summary>
        /// Returns true if AlipayEcoMycarParkingOrderSyncModel instances are equal
        /// </summary>
        /// <param name="input">Instance of AlipayEcoMycarParkingOrderSyncModel to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AlipayEcoMycarParkingOrderSyncModel input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.AgentPid == input.AgentPid ||
                    (this.AgentPid != null &&
                    this.AgentPid.Equals(input.AgentPid))
                ) && 
                (
                    this.CarNumber == input.CarNumber ||
                    (this.CarNumber != null &&
                    this.CarNumber.Equals(input.CarNumber))
                ) && 
                (
                    this.CardNumber == input.CardNumber ||
                    (this.CardNumber != null &&
                    this.CardNumber.Equals(input.CardNumber))
                ) && 
                (
                    this.InDuration == input.InDuration ||
                    (this.InDuration != null &&
                    this.InDuration.Equals(input.InDuration))
                ) && 
                (
                    this.InTime == input.InTime ||
                    (this.InTime != null &&
                    this.InTime.Equals(input.InTime))
                ) && 
                (
                    this.OpenId == input.OpenId ||
                    (this.OpenId != null &&
                    this.OpenId.Equals(input.OpenId))
                ) && 
                (
                    this.OrderNo == input.OrderNo ||
                    (this.OrderNo != null &&
                    this.OrderNo.Equals(input.OrderNo))
                ) && 
                (
                    this.OrderStatus == input.OrderStatus ||
                    (this.OrderStatus != null &&
                    this.OrderStatus.Equals(input.OrderStatus))
                ) && 
                (
                    this.OrderTime == input.OrderTime ||
                    (this.OrderTime != null &&
                    this.OrderTime.Equals(input.OrderTime))
                ) && 
                (
                    this.OutOrderNo == input.OutOrderNo ||
                    (this.OutOrderNo != null &&
                    this.OutOrderNo.Equals(input.OutOrderNo))
                ) && 
                (
                    this.OutParkingId == input.OutParkingId ||
                    (this.OutParkingId != null &&
                    this.OutParkingId.Equals(input.OutParkingId))
                ) && 
                (
                    this.OutTime == input.OutTime ||
                    (this.OutTime != null &&
                    this.OutTime.Equals(input.OutTime))
                ) && 
                (
                    this.ParkingId == input.ParkingId ||
                    (this.ParkingId != null &&
                    this.ParkingId.Equals(input.ParkingId))
                ) && 
                (
                    this.ParkingName == input.ParkingName ||
                    (this.ParkingName != null &&
                    this.ParkingName.Equals(input.ParkingName))
                ) && 
                (
                    this.ParkingRecordId == input.ParkingRecordId ||
                    (this.ParkingRecordId != null &&
                    this.ParkingRecordId.Equals(input.ParkingRecordId))
                ) && 
                (
                    this.PayMoney == input.PayMoney ||
                    (this.PayMoney != null &&
                    this.PayMoney.Equals(input.PayMoney))
                ) && 
                (
                    this.PayScene == input.PayScene ||
                    (this.PayScene != null &&
                    this.PayScene.Equals(input.PayScene))
                ) && 
                (
                    this.PayTime == input.PayTime ||
                    (this.PayTime != null &&
                    this.PayTime.Equals(input.PayTime))
                ) && 
                (
                    this.PayType == input.PayType ||
                    (this.PayType != null &&
                    this.PayType.Equals(input.PayType))
                ) && 
                (
                    this.Smid == input.Smid ||
                    (this.Smid != null &&
                    this.Smid.Equals(input.Smid))
                ) && 
                (
                    this.UserId == input.UserId ||
                    (this.UserId != null &&
                    this.UserId.Equals(input.UserId))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.AgentPid != null)
                {
                    hashCode = (hashCode * 59) + this.AgentPid.GetHashCode();
                }
                if (this.CarNumber != null)
                {
                    hashCode = (hashCode * 59) + this.CarNumber.GetHashCode();
                }
                if (this.CardNumber != null)
                {
                    hashCode = (hashCode * 59) + this.CardNumber.GetHashCode();
                }
                if (this.InDuration != null)
                {
                    hashCode = (hashCode * 59) + this.InDuration.GetHashCode();
                }
                if (this.InTime != null)
                {
                    hashCode = (hashCode * 59) + this.InTime.GetHashCode();
                }
                if (this.OpenId != null)
                {
                    hashCode = (hashCode * 59) + this.OpenId.GetHashCode();
                }
                if (this.OrderNo != null)
                {
                    hashCode = (hashCode * 59) + this.OrderNo.GetHashCode();
                }
                if (this.OrderStatus != null)
                {
                    hashCode = (hashCode * 59) + this.OrderStatus.GetHashCode();
                }
                if (this.OrderTime != null)
                {
                    hashCode = (hashCode * 59) + this.OrderTime.GetHashCode();
                }
                if (this.OutOrderNo != null)
                {
                    hashCode = (hashCode * 59) + this.OutOrderNo.GetHashCode();
                }
                if (this.OutParkingId != null)
                {
                    hashCode = (hashCode * 59) + this.OutParkingId.GetHashCode();
                }
                if (this.OutTime != null)
                {
                    hashCode = (hashCode * 59) + this.OutTime.GetHashCode();
                }
                if (this.ParkingId != null)
                {
                    hashCode = (hashCode * 59) + this.ParkingId.GetHashCode();
                }
                if (this.ParkingName != null)
                {
                    hashCode = (hashCode * 59) + this.ParkingName.GetHashCode();
                }
                if (this.ParkingRecordId != null)
                {
                    hashCode = (hashCode * 59) + this.ParkingRecordId.GetHashCode();
                }
                if (this.PayMoney != null)
                {
                    hashCode = (hashCode * 59) + this.PayMoney.GetHashCode();
                }
                if (this.PayScene != null)
                {
                    hashCode = (hashCode * 59) + this.PayScene.GetHashCode();
                }
                if (this.PayTime != null)
                {
                    hashCode = (hashCode * 59) + this.PayTime.GetHashCode();
                }
                if (this.PayType != null)
                {
                    hashCode = (hashCode * 59) + this.PayType.GetHashCode();
                }
                if (this.Smid != null)
                {
                    hashCode = (hashCode * 59) + this.Smid.GetHashCode();
                }
                if (this.UserId != null)
                {
                    hashCode = (hashCode * 59) + this.UserId.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
