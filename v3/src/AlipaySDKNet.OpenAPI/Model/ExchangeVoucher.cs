/*
 * 支付宝开放平台API
 *
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2025-02-19
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = AlipaySDKNet.OpenAPI.Client.OpenAPIDateConverter;

namespace AlipaySDKNet.OpenAPI.Model
{
    /// <summary>
    /// ExchangeVoucher
    /// </summary>
    [DataContract(Name = "ExchangeVoucher")]
    public partial class ExchangeVoucher : IEquatable<ExchangeVoucher>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ExchangeVoucher" /> class.
        /// </summary>
        /// <param name="amount">券的价值.</param>
        /// <param name="bizType">兑换券业务类型。  枚举值 团购券：GROUP_BUY_EXCHANGE_VOUCHER 代金券：FIX_EXCHANGE_VOUCHER 注意：兑换券通过&lt;a href&#x3D;\&quot;https://opendocs.alipay.com/pre-open/repo-00tbta\&quot;&gt;大促活动权益报名&lt;/a&gt;能力推广至支付宝会场时，本参数必填。.</param>
        /// <param name="customerServiceMobile">客服电话.</param>
        /// <param name="customerServiceUrl">客服链接.</param>
        /// <param name="floorAmount">门槛金额。说明：该字段可不填，认为无门槛;.</param>
        /// <param name="overdueRefundable">是否支持优惠券过期后，自动退款给用户。 不填默认否，枚举值： true：是 false：否.</param>
        /// <param name="payeePid">收款账号。目前的结算规则是，每核销一笔优惠券，支付宝会打款到该收款账户。.</param>
        /// <param name="refundable">购买的优惠券是否允许退款。不填默认否，枚举值： true：是 false：否.</param>
        /// <param name="saleAmount">用户购买优惠券需要支付的金额.</param>
        /// <param name="settleType">解决类型。.</param>
        /// <param name="voucherDetailUrl">领(购)券详情页链接，从支付宝公域跳转到服务商(商户)自定义领(购)券详情页。.</param>
        /// <param name="voucherName">对消费者展示的券(商品)名称。.</param>
        public ExchangeVoucher(string amount = default(string), string bizType = default(string), string customerServiceMobile = default(string), string customerServiceUrl = default(string), string floorAmount = default(string), bool overdueRefundable = default(bool), string payeePid = default(string), bool refundable = default(bool), string saleAmount = default(string), string settleType = default(string), string voucherDetailUrl = default(string), string voucherName = default(string))
        {
            this.Amount = amount;
            this.BizType = bizType;
            this.CustomerServiceMobile = customerServiceMobile;
            this.CustomerServiceUrl = customerServiceUrl;
            this.FloorAmount = floorAmount;
            this.OverdueRefundable = overdueRefundable;
            this.PayeePid = payeePid;
            this.Refundable = refundable;
            this.SaleAmount = saleAmount;
            this.SettleType = settleType;
            this.VoucherDetailUrl = voucherDetailUrl;
            this.VoucherName = voucherName;
        }

        /// <summary>
        /// 券的价值
        /// </summary>
        /// <value>券的价值</value>
        [DataMember(Name = "amount", EmitDefaultValue = false)]
        public string Amount { get; set; }

        /// <summary>
        /// 兑换券业务类型。  枚举值 团购券：GROUP_BUY_EXCHANGE_VOUCHER 代金券：FIX_EXCHANGE_VOUCHER 注意：兑换券通过&lt;a href&#x3D;\&quot;https://opendocs.alipay.com/pre-open/repo-00tbta\&quot;&gt;大促活动权益报名&lt;/a&gt;能力推广至支付宝会场时，本参数必填。
        /// </summary>
        /// <value>兑换券业务类型。  枚举值 团购券：GROUP_BUY_EXCHANGE_VOUCHER 代金券：FIX_EXCHANGE_VOUCHER 注意：兑换券通过&lt;a href&#x3D;\&quot;https://opendocs.alipay.com/pre-open/repo-00tbta\&quot;&gt;大促活动权益报名&lt;/a&gt;能力推广至支付宝会场时，本参数必填。</value>
        [DataMember(Name = "biz_type", EmitDefaultValue = false)]
        public string BizType { get; set; }

        /// <summary>
        /// 客服电话
        /// </summary>
        /// <value>客服电话</value>
        [DataMember(Name = "customer_service_mobile", EmitDefaultValue = false)]
        public string CustomerServiceMobile { get; set; }

        /// <summary>
        /// 客服链接
        /// </summary>
        /// <value>客服链接</value>
        [DataMember(Name = "customer_service_url", EmitDefaultValue = false)]
        public string CustomerServiceUrl { get; set; }

        /// <summary>
        /// 门槛金额。说明：该字段可不填，认为无门槛;
        /// </summary>
        /// <value>门槛金额。说明：该字段可不填，认为无门槛;</value>
        [DataMember(Name = "floor_amount", EmitDefaultValue = false)]
        public string FloorAmount { get; set; }

        /// <summary>
        /// 是否支持优惠券过期后，自动退款给用户。 不填默认否，枚举值： true：是 false：否
        /// </summary>
        /// <value>是否支持优惠券过期后，自动退款给用户。 不填默认否，枚举值： true：是 false：否</value>
        [DataMember(Name = "overdue_refundable", EmitDefaultValue = true)]
        public bool OverdueRefundable { get; set; }

        /// <summary>
        /// 收款账号。目前的结算规则是，每核销一笔优惠券，支付宝会打款到该收款账户。
        /// </summary>
        /// <value>收款账号。目前的结算规则是，每核销一笔优惠券，支付宝会打款到该收款账户。</value>
        [DataMember(Name = "payee_pid", EmitDefaultValue = false)]
        public string PayeePid { get; set; }

        /// <summary>
        /// 购买的优惠券是否允许退款。不填默认否，枚举值： true：是 false：否
        /// </summary>
        /// <value>购买的优惠券是否允许退款。不填默认否，枚举值： true：是 false：否</value>
        [DataMember(Name = "refundable", EmitDefaultValue = true)]
        public bool Refundable { get; set; }

        /// <summary>
        /// 用户购买优惠券需要支付的金额
        /// </summary>
        /// <value>用户购买优惠券需要支付的金额</value>
        [DataMember(Name = "sale_amount", EmitDefaultValue = false)]
        public string SaleAmount { get; set; }

        /// <summary>
        /// 解决类型。
        /// </summary>
        /// <value>解决类型。</value>
        [DataMember(Name = "settle_type", EmitDefaultValue = false)]
        public string SettleType { get; set; }

        /// <summary>
        /// 领(购)券详情页链接，从支付宝公域跳转到服务商(商户)自定义领(购)券详情页。
        /// </summary>
        /// <value>领(购)券详情页链接，从支付宝公域跳转到服务商(商户)自定义领(购)券详情页。</value>
        [DataMember(Name = "voucher_detail_url", EmitDefaultValue = false)]
        public string VoucherDetailUrl { get; set; }

        /// <summary>
        /// 对消费者展示的券(商品)名称。
        /// </summary>
        /// <value>对消费者展示的券(商品)名称。</value>
        [DataMember(Name = "voucher_name", EmitDefaultValue = false)]
        public string VoucherName { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ExchangeVoucher {\n");
            sb.Append("  Amount: ").Append(Amount).Append("\n");
            sb.Append("  BizType: ").Append(BizType).Append("\n");
            sb.Append("  CustomerServiceMobile: ").Append(CustomerServiceMobile).Append("\n");
            sb.Append("  CustomerServiceUrl: ").Append(CustomerServiceUrl).Append("\n");
            sb.Append("  FloorAmount: ").Append(FloorAmount).Append("\n");
            sb.Append("  OverdueRefundable: ").Append(OverdueRefundable).Append("\n");
            sb.Append("  PayeePid: ").Append(PayeePid).Append("\n");
            sb.Append("  Refundable: ").Append(Refundable).Append("\n");
            sb.Append("  SaleAmount: ").Append(SaleAmount).Append("\n");
            sb.Append("  SettleType: ").Append(SettleType).Append("\n");
            sb.Append("  VoucherDetailUrl: ").Append(VoucherDetailUrl).Append("\n");
            sb.Append("  VoucherName: ").Append(VoucherName).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ExchangeVoucher);
        }

        /// <summary>
        /// Returns true if ExchangeVoucher instances are equal
        /// </summary>
        /// <param name="input">Instance of ExchangeVoucher to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ExchangeVoucher input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.Amount == input.Amount ||
                    (this.Amount != null &&
                    this.Amount.Equals(input.Amount))
                ) && 
                (
                    this.BizType == input.BizType ||
                    (this.BizType != null &&
                    this.BizType.Equals(input.BizType))
                ) && 
                (
                    this.CustomerServiceMobile == input.CustomerServiceMobile ||
                    (this.CustomerServiceMobile != null &&
                    this.CustomerServiceMobile.Equals(input.CustomerServiceMobile))
                ) && 
                (
                    this.CustomerServiceUrl == input.CustomerServiceUrl ||
                    (this.CustomerServiceUrl != null &&
                    this.CustomerServiceUrl.Equals(input.CustomerServiceUrl))
                ) && 
                (
                    this.FloorAmount == input.FloorAmount ||
                    (this.FloorAmount != null &&
                    this.FloorAmount.Equals(input.FloorAmount))
                ) && 
                (
                    this.OverdueRefundable == input.OverdueRefundable ||
                    this.OverdueRefundable.Equals(input.OverdueRefundable)
                ) && 
                (
                    this.PayeePid == input.PayeePid ||
                    (this.PayeePid != null &&
                    this.PayeePid.Equals(input.PayeePid))
                ) && 
                (
                    this.Refundable == input.Refundable ||
                    this.Refundable.Equals(input.Refundable)
                ) && 
                (
                    this.SaleAmount == input.SaleAmount ||
                    (this.SaleAmount != null &&
                    this.SaleAmount.Equals(input.SaleAmount))
                ) && 
                (
                    this.SettleType == input.SettleType ||
                    (this.SettleType != null &&
                    this.SettleType.Equals(input.SettleType))
                ) && 
                (
                    this.VoucherDetailUrl == input.VoucherDetailUrl ||
                    (this.VoucherDetailUrl != null &&
                    this.VoucherDetailUrl.Equals(input.VoucherDetailUrl))
                ) && 
                (
                    this.VoucherName == input.VoucherName ||
                    (this.VoucherName != null &&
                    this.VoucherName.Equals(input.VoucherName))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Amount != null)
                {
                    hashCode = (hashCode * 59) + this.Amount.GetHashCode();
                }
                if (this.BizType != null)
                {
                    hashCode = (hashCode * 59) + this.BizType.GetHashCode();
                }
                if (this.CustomerServiceMobile != null)
                {
                    hashCode = (hashCode * 59) + this.CustomerServiceMobile.GetHashCode();
                }
                if (this.CustomerServiceUrl != null)
                {
                    hashCode = (hashCode * 59) + this.CustomerServiceUrl.GetHashCode();
                }
                if (this.FloorAmount != null)
                {
                    hashCode = (hashCode * 59) + this.FloorAmount.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.OverdueRefundable.GetHashCode();
                if (this.PayeePid != null)
                {
                    hashCode = (hashCode * 59) + this.PayeePid.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.Refundable.GetHashCode();
                if (this.SaleAmount != null)
                {
                    hashCode = (hashCode * 59) + this.SaleAmount.GetHashCode();
                }
                if (this.SettleType != null)
                {
                    hashCode = (hashCode * 59) + this.SettleType.GetHashCode();
                }
                if (this.VoucherDetailUrl != null)
                {
                    hashCode = (hashCode * 59) + this.VoucherDetailUrl.GetHashCode();
                }
                if (this.VoucherName != null)
                {
                    hashCode = (hashCode * 59) + this.VoucherName.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
