/*
 * 支付宝开放平台API
 *
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2025-02-19
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = AlipaySDKNet.OpenAPI.Client.OpenAPIDateConverter;

namespace AlipaySDKNet.OpenAPI.Model
{
    /// <summary>
    /// AlipayOpenSearchBoxQueryResponseModel
    /// </summary>
    [DataContract(Name = "AlipayOpenSearchBoxQueryResponseModel")]
    public partial class AlipayOpenSearchBoxQueryResponseModel : IEquatable<AlipayOpenSearchBoxQueryResponseModel>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AlipayOpenSearchBoxQueryResponseModel" /> class.
        /// </summary>
        /// <param name="accountModule">accountModule.</param>
        /// <param name="basicInfoModule">basicInfoModule.</param>
        /// <param name="boxId">搜索直达配置id.</param>
        /// <param name="boxStatus">搜索直达配置状态，AUDIT-审核中/ONLINE-已上架/REJECT-驳回/OFFLINE-已下架.</param>
        /// <param name="businessDistrictModule">businessDistrictModule.</param>
        /// <param name="defaultKeywords">搜索直达默认触发词，由系统生成，无法修改.</param>
        /// <param name="keywordModule">keywordModule.</param>
        /// <param name="latestAuditImage">latestAuditImage.</param>
        /// <param name="serviceModule">serviceModule.</param>
        /// <param name="validImage">validImage.</param>
        public AlipayOpenSearchBoxQueryResponseModel(SearchBoxAccountModule accountModule = default(SearchBoxAccountModule), SearchBoxBasicInfoModule basicInfoModule = default(SearchBoxBasicInfoModule), string boxId = default(string), string boxStatus = default(string), BoxBusinessDistrictModule businessDistrictModule = default(BoxBusinessDistrictModule), List<string> defaultKeywords = default(List<string>), SearchBoxKeyWordModule keywordModule = default(SearchBoxKeyWordModule), SearchBoxImageModule latestAuditImage = default(SearchBoxImageModule), SearchBoxServiceModule serviceModule = default(SearchBoxServiceModule), SearchBoxImageModule validImage = default(SearchBoxImageModule))
        {
            this.AccountModule = accountModule;
            this.BasicInfoModule = basicInfoModule;
            this.BoxId = boxId;
            this.BoxStatus = boxStatus;
            this.BusinessDistrictModule = businessDistrictModule;
            this.DefaultKeywords = defaultKeywords;
            this.KeywordModule = keywordModule;
            this.LatestAuditImage = latestAuditImage;
            this.ServiceModule = serviceModule;
            this.ValidImage = validImage;
        }

        /// <summary>
        /// Gets or Sets AccountModule
        /// </summary>
        [DataMember(Name = "account_module", EmitDefaultValue = false)]
        public SearchBoxAccountModule AccountModule { get; set; }

        /// <summary>
        /// Gets or Sets BasicInfoModule
        /// </summary>
        [DataMember(Name = "basic_info_module", EmitDefaultValue = false)]
        public SearchBoxBasicInfoModule BasicInfoModule { get; set; }

        /// <summary>
        /// 搜索直达配置id
        /// </summary>
        /// <value>搜索直达配置id</value>
        [DataMember(Name = "box_id", EmitDefaultValue = false)]
        public string BoxId { get; set; }

        /// <summary>
        /// 搜索直达配置状态，AUDIT-审核中/ONLINE-已上架/REJECT-驳回/OFFLINE-已下架
        /// </summary>
        /// <value>搜索直达配置状态，AUDIT-审核中/ONLINE-已上架/REJECT-驳回/OFFLINE-已下架</value>
        [DataMember(Name = "box_status", EmitDefaultValue = false)]
        public string BoxStatus { get; set; }

        /// <summary>
        /// Gets or Sets BusinessDistrictModule
        /// </summary>
        [DataMember(Name = "business_district_module", EmitDefaultValue = false)]
        public BoxBusinessDistrictModule BusinessDistrictModule { get; set; }

        /// <summary>
        /// 搜索直达默认触发词，由系统生成，无法修改
        /// </summary>
        /// <value>搜索直达默认触发词，由系统生成，无法修改</value>
        [DataMember(Name = "default_keywords", EmitDefaultValue = false)]
        public List<string> DefaultKeywords { get; set; }

        /// <summary>
        /// Gets or Sets KeywordModule
        /// </summary>
        [DataMember(Name = "keyword_module", EmitDefaultValue = false)]
        public SearchBoxKeyWordModule KeywordModule { get; set; }

        /// <summary>
        /// Gets or Sets LatestAuditImage
        /// </summary>
        [DataMember(Name = "latest_audit_image", EmitDefaultValue = false)]
        public SearchBoxImageModule LatestAuditImage { get; set; }

        /// <summary>
        /// Gets or Sets ServiceModule
        /// </summary>
        [DataMember(Name = "service_module", EmitDefaultValue = false)]
        public SearchBoxServiceModule ServiceModule { get; set; }

        /// <summary>
        /// Gets or Sets ValidImage
        /// </summary>
        [DataMember(Name = "valid_image", EmitDefaultValue = false)]
        public SearchBoxImageModule ValidImage { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class AlipayOpenSearchBoxQueryResponseModel {\n");
            sb.Append("  AccountModule: ").Append(AccountModule).Append("\n");
            sb.Append("  BasicInfoModule: ").Append(BasicInfoModule).Append("\n");
            sb.Append("  BoxId: ").Append(BoxId).Append("\n");
            sb.Append("  BoxStatus: ").Append(BoxStatus).Append("\n");
            sb.Append("  BusinessDistrictModule: ").Append(BusinessDistrictModule).Append("\n");
            sb.Append("  DefaultKeywords: ").Append(DefaultKeywords).Append("\n");
            sb.Append("  KeywordModule: ").Append(KeywordModule).Append("\n");
            sb.Append("  LatestAuditImage: ").Append(LatestAuditImage).Append("\n");
            sb.Append("  ServiceModule: ").Append(ServiceModule).Append("\n");
            sb.Append("  ValidImage: ").Append(ValidImage).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as AlipayOpenSearchBoxQueryResponseModel);
        }

        /// <summary>
        /// Returns true if AlipayOpenSearchBoxQueryResponseModel instances are equal
        /// </summary>
        /// <param name="input">Instance of AlipayOpenSearchBoxQueryResponseModel to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AlipayOpenSearchBoxQueryResponseModel input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.AccountModule == input.AccountModule ||
                    (this.AccountModule != null &&
                    this.AccountModule.Equals(input.AccountModule))
                ) && 
                (
                    this.BasicInfoModule == input.BasicInfoModule ||
                    (this.BasicInfoModule != null &&
                    this.BasicInfoModule.Equals(input.BasicInfoModule))
                ) && 
                (
                    this.BoxId == input.BoxId ||
                    (this.BoxId != null &&
                    this.BoxId.Equals(input.BoxId))
                ) && 
                (
                    this.BoxStatus == input.BoxStatus ||
                    (this.BoxStatus != null &&
                    this.BoxStatus.Equals(input.BoxStatus))
                ) && 
                (
                    this.BusinessDistrictModule == input.BusinessDistrictModule ||
                    (this.BusinessDistrictModule != null &&
                    this.BusinessDistrictModule.Equals(input.BusinessDistrictModule))
                ) && 
                (
                    this.DefaultKeywords == input.DefaultKeywords ||
                    this.DefaultKeywords != null &&
                    input.DefaultKeywords != null &&
                    this.DefaultKeywords.SequenceEqual(input.DefaultKeywords)
                ) && 
                (
                    this.KeywordModule == input.KeywordModule ||
                    (this.KeywordModule != null &&
                    this.KeywordModule.Equals(input.KeywordModule))
                ) && 
                (
                    this.LatestAuditImage == input.LatestAuditImage ||
                    (this.LatestAuditImage != null &&
                    this.LatestAuditImage.Equals(input.LatestAuditImage))
                ) && 
                (
                    this.ServiceModule == input.ServiceModule ||
                    (this.ServiceModule != null &&
                    this.ServiceModule.Equals(input.ServiceModule))
                ) && 
                (
                    this.ValidImage == input.ValidImage ||
                    (this.ValidImage != null &&
                    this.ValidImage.Equals(input.ValidImage))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.AccountModule != null)
                {
                    hashCode = (hashCode * 59) + this.AccountModule.GetHashCode();
                }
                if (this.BasicInfoModule != null)
                {
                    hashCode = (hashCode * 59) + this.BasicInfoModule.GetHashCode();
                }
                if (this.BoxId != null)
                {
                    hashCode = (hashCode * 59) + this.BoxId.GetHashCode();
                }
                if (this.BoxStatus != null)
                {
                    hashCode = (hashCode * 59) + this.BoxStatus.GetHashCode();
                }
                if (this.BusinessDistrictModule != null)
                {
                    hashCode = (hashCode * 59) + this.BusinessDistrictModule.GetHashCode();
                }
                if (this.DefaultKeywords != null)
                {
                    hashCode = (hashCode * 59) + this.DefaultKeywords.GetHashCode();
                }
                if (this.KeywordModule != null)
                {
                    hashCode = (hashCode * 59) + this.KeywordModule.GetHashCode();
                }
                if (this.LatestAuditImage != null)
                {
                    hashCode = (hashCode * 59) + this.LatestAuditImage.GetHashCode();
                }
                if (this.ServiceModule != null)
                {
                    hashCode = (hashCode * 59) + this.ServiceModule.GetHashCode();
                }
                if (this.ValidImage != null)
                {
                    hashCode = (hashCode * 59) + this.ValidImage.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
