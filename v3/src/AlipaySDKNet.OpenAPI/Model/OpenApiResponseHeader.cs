/*
 * 支付宝开放平台API
 *
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2025-02-19
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = AlipaySDKNet.OpenAPI.Client.OpenAPIDateConverter;

namespace AlipaySDKNet.OpenAPI.Model
{
    /// <summary>
    /// OpenApiResponseHeader
    /// </summary>
    [DataContract(Name = "OpenApiResponseHeader")]
    public partial class OpenApiResponseHeader : IEquatable<OpenApiResponseHeader>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="OpenApiResponseHeader" /> class.
        /// </summary>
        /// <param name="conversationId">会话id，对应请求中的conversation_id，若请求中conversation_id非空，则该值非空.</param>
        /// <param name="responseId">响应id，对应请求中的request_id。如果请求中request_id非空，则response_id非空。.</param>
        /// <param name="statusCode">自定义状态码.</param>
        /// <param name="statusMessage">状态信息.</param>
        /// <param name="subStatusCode">子状态码.</param>
        public OpenApiResponseHeader(string conversationId = default(string), string responseId = default(string), string statusCode = default(string), string statusMessage = default(string), string subStatusCode = default(string))
        {
            this.ConversationId = conversationId;
            this.ResponseId = responseId;
            this.StatusCode = statusCode;
            this.StatusMessage = statusMessage;
            this.SubStatusCode = subStatusCode;
        }

        /// <summary>
        /// 会话id，对应请求中的conversation_id，若请求中conversation_id非空，则该值非空
        /// </summary>
        /// <value>会话id，对应请求中的conversation_id，若请求中conversation_id非空，则该值非空</value>
        [DataMember(Name = "conversation_id", EmitDefaultValue = false)]
        public string ConversationId { get; set; }

        /// <summary>
        /// 响应id，对应请求中的request_id。如果请求中request_id非空，则response_id非空。
        /// </summary>
        /// <value>响应id，对应请求中的request_id。如果请求中request_id非空，则response_id非空。</value>
        [DataMember(Name = "response_id", EmitDefaultValue = false)]
        public string ResponseId { get; set; }

        /// <summary>
        /// 自定义状态码
        /// </summary>
        /// <value>自定义状态码</value>
        [DataMember(Name = "status_code", EmitDefaultValue = false)]
        public string StatusCode { get; set; }

        /// <summary>
        /// 状态信息
        /// </summary>
        /// <value>状态信息</value>
        [DataMember(Name = "status_message", EmitDefaultValue = false)]
        public string StatusMessage { get; set; }

        /// <summary>
        /// 子状态码
        /// </summary>
        /// <value>子状态码</value>
        [DataMember(Name = "sub_status_code", EmitDefaultValue = false)]
        public string SubStatusCode { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class OpenApiResponseHeader {\n");
            sb.Append("  ConversationId: ").Append(ConversationId).Append("\n");
            sb.Append("  ResponseId: ").Append(ResponseId).Append("\n");
            sb.Append("  StatusCode: ").Append(StatusCode).Append("\n");
            sb.Append("  StatusMessage: ").Append(StatusMessage).Append("\n");
            sb.Append("  SubStatusCode: ").Append(SubStatusCode).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as OpenApiResponseHeader);
        }

        /// <summary>
        /// Returns true if OpenApiResponseHeader instances are equal
        /// </summary>
        /// <param name="input">Instance of OpenApiResponseHeader to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(OpenApiResponseHeader input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.ConversationId == input.ConversationId ||
                    (this.ConversationId != null &&
                    this.ConversationId.Equals(input.ConversationId))
                ) && 
                (
                    this.ResponseId == input.ResponseId ||
                    (this.ResponseId != null &&
                    this.ResponseId.Equals(input.ResponseId))
                ) && 
                (
                    this.StatusCode == input.StatusCode ||
                    (this.StatusCode != null &&
                    this.StatusCode.Equals(input.StatusCode))
                ) && 
                (
                    this.StatusMessage == input.StatusMessage ||
                    (this.StatusMessage != null &&
                    this.StatusMessage.Equals(input.StatusMessage))
                ) && 
                (
                    this.SubStatusCode == input.SubStatusCode ||
                    (this.SubStatusCode != null &&
                    this.SubStatusCode.Equals(input.SubStatusCode))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ConversationId != null)
                {
                    hashCode = (hashCode * 59) + this.ConversationId.GetHashCode();
                }
                if (this.ResponseId != null)
                {
                    hashCode = (hashCode * 59) + this.ResponseId.GetHashCode();
                }
                if (this.StatusCode != null)
                {
                    hashCode = (hashCode * 59) + this.StatusCode.GetHashCode();
                }
                if (this.StatusMessage != null)
                {
                    hashCode = (hashCode * 59) + this.StatusMessage.GetHashCode();
                }
                if (this.SubStatusCode != null)
                {
                    hashCode = (hashCode * 59) + this.SubStatusCode.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
