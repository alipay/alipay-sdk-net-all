/*
 * 支付宝开放平台API
 *
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2025-02-19
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = AlipaySDKNet.OpenAPI.Client.OpenAPIDateConverter;

namespace AlipaySDKNet.OpenAPI.Model
{
    /// <summary>
    /// VoucherInventoryInfo
    /// </summary>
    [DataContract(Name = "VoucherInventoryInfo")]
    public partial class VoucherInventoryInfo : IEquatable<VoucherInventoryInfo>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="VoucherInventoryInfo" /> class.
        /// </summary>
        /// <param name="sendCount">已发放数量。.</param>
        /// <param name="useCount">已核销数量。.</param>
        public VoucherInventoryInfo(int sendCount = default(int), int useCount = default(int))
        {
            this.SendCount = sendCount;
            this.UseCount = useCount;
        }

        /// <summary>
        /// 已发放数量。
        /// </summary>
        /// <value>已发放数量。</value>
        [DataMember(Name = "send_count", EmitDefaultValue = false)]
        public int SendCount { get; set; }

        /// <summary>
        /// 已核销数量。
        /// </summary>
        /// <value>已核销数量。</value>
        [DataMember(Name = "use_count", EmitDefaultValue = false)]
        public int UseCount { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class VoucherInventoryInfo {\n");
            sb.Append("  SendCount: ").Append(SendCount).Append("\n");
            sb.Append("  UseCount: ").Append(UseCount).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as VoucherInventoryInfo);
        }

        /// <summary>
        /// Returns true if VoucherInventoryInfo instances are equal
        /// </summary>
        /// <param name="input">Instance of VoucherInventoryInfo to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(VoucherInventoryInfo input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.SendCount == input.SendCount ||
                    this.SendCount.Equals(input.SendCount)
                ) && 
                (
                    this.UseCount == input.UseCount ||
                    this.UseCount.Equals(input.UseCount)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                hashCode = (hashCode * 59) + this.SendCount.GetHashCode();
                hashCode = (hashCode * 59) + this.UseCount.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
