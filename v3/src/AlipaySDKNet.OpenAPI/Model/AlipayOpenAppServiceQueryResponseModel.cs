/*
 * 支付宝开放平台API
 *
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2025-02-19
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = AlipaySDKNet.OpenAPI.Client.OpenAPIDateConverter;

namespace AlipaySDKNet.OpenAPI.Model
{
    /// <summary>
    /// AlipayOpenAppServiceQueryResponseModel
    /// </summary>
    [DataContract(Name = "AlipayOpenAppServiceQueryResponseModel")]
    public partial class AlipayOpenAppServiceQueryResponseModel : IEquatable<AlipayOpenAppServiceQueryResponseModel>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AlipayOpenAppServiceQueryResponseModel" /> class.
        /// </summary>
        /// <param name="rejectReason">驳回理由.</param>
        /// <param name="serviceCode">服务id.</param>
        /// <param name="serviceXml">服务描述xml格式.</param>
        /// <param name="status">服务状态.</param>
        /// <param name="templateType">服务模板类型.</param>
        /// <param name="userServiceDeliveryType">服务履约类型.</param>
        public AlipayOpenAppServiceQueryResponseModel(string rejectReason = default(string), string serviceCode = default(string), string serviceXml = default(string), string status = default(string), string templateType = default(string), string userServiceDeliveryType = default(string))
        {
            this.RejectReason = rejectReason;
            this.ServiceCode = serviceCode;
            this.ServiceXml = serviceXml;
            this.Status = status;
            this.TemplateType = templateType;
            this.UserServiceDeliveryType = userServiceDeliveryType;
        }

        /// <summary>
        /// 驳回理由
        /// </summary>
        /// <value>驳回理由</value>
        [DataMember(Name = "reject_reason", EmitDefaultValue = false)]
        public string RejectReason { get; set; }

        /// <summary>
        /// 服务id
        /// </summary>
        /// <value>服务id</value>
        [DataMember(Name = "service_code", EmitDefaultValue = false)]
        public string ServiceCode { get; set; }

        /// <summary>
        /// 服务描述xml格式
        /// </summary>
        /// <value>服务描述xml格式</value>
        [DataMember(Name = "service_xml", EmitDefaultValue = false)]
        public string ServiceXml { get; set; }

        /// <summary>
        /// 服务状态
        /// </summary>
        /// <value>服务状态</value>
        [DataMember(Name = "status", EmitDefaultValue = false)]
        public string Status { get; set; }

        /// <summary>
        /// 服务模板类型
        /// </summary>
        /// <value>服务模板类型</value>
        [DataMember(Name = "template_type", EmitDefaultValue = false)]
        public string TemplateType { get; set; }

        /// <summary>
        /// 服务履约类型
        /// </summary>
        /// <value>服务履约类型</value>
        [DataMember(Name = "user_service_delivery_type", EmitDefaultValue = false)]
        public string UserServiceDeliveryType { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class AlipayOpenAppServiceQueryResponseModel {\n");
            sb.Append("  RejectReason: ").Append(RejectReason).Append("\n");
            sb.Append("  ServiceCode: ").Append(ServiceCode).Append("\n");
            sb.Append("  ServiceXml: ").Append(ServiceXml).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("  TemplateType: ").Append(TemplateType).Append("\n");
            sb.Append("  UserServiceDeliveryType: ").Append(UserServiceDeliveryType).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as AlipayOpenAppServiceQueryResponseModel);
        }

        /// <summary>
        /// Returns true if AlipayOpenAppServiceQueryResponseModel instances are equal
        /// </summary>
        /// <param name="input">Instance of AlipayOpenAppServiceQueryResponseModel to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AlipayOpenAppServiceQueryResponseModel input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.RejectReason == input.RejectReason ||
                    (this.RejectReason != null &&
                    this.RejectReason.Equals(input.RejectReason))
                ) && 
                (
                    this.ServiceCode == input.ServiceCode ||
                    (this.ServiceCode != null &&
                    this.ServiceCode.Equals(input.ServiceCode))
                ) && 
                (
                    this.ServiceXml == input.ServiceXml ||
                    (this.ServiceXml != null &&
                    this.ServiceXml.Equals(input.ServiceXml))
                ) && 
                (
                    this.Status == input.Status ||
                    (this.Status != null &&
                    this.Status.Equals(input.Status))
                ) && 
                (
                    this.TemplateType == input.TemplateType ||
                    (this.TemplateType != null &&
                    this.TemplateType.Equals(input.TemplateType))
                ) && 
                (
                    this.UserServiceDeliveryType == input.UserServiceDeliveryType ||
                    (this.UserServiceDeliveryType != null &&
                    this.UserServiceDeliveryType.Equals(input.UserServiceDeliveryType))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.RejectReason != null)
                {
                    hashCode = (hashCode * 59) + this.RejectReason.GetHashCode();
                }
                if (this.ServiceCode != null)
                {
                    hashCode = (hashCode * 59) + this.ServiceCode.GetHashCode();
                }
                if (this.ServiceXml != null)
                {
                    hashCode = (hashCode * 59) + this.ServiceXml.GetHashCode();
                }
                if (this.Status != null)
                {
                    hashCode = (hashCode * 59) + this.Status.GetHashCode();
                }
                if (this.TemplateType != null)
                {
                    hashCode = (hashCode * 59) + this.TemplateType.GetHashCode();
                }
                if (this.UserServiceDeliveryType != null)
                {
                    hashCode = (hashCode * 59) + this.UserServiceDeliveryType.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
