/*
 * 支付宝开放平台API
 *
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2025-02-19
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = AlipaySDKNet.OpenAPI.Client.OpenAPIDateConverter;

namespace AlipaySDKNet.OpenAPI.Model
{
    /// <summary>
    /// AlipayMerchantLiveItemplanModifyModel
    /// </summary>
    [DataContract(Name = "AlipayMerchantLiveItemplanModifyModel")]
    public partial class AlipayMerchantLiveItemplanModifyModel : IEquatable<AlipayMerchantLiveItemplanModifyModel>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AlipayMerchantLiveItemplanModifyModel" /> class.
        /// </summary>
        /// <param name="content">投放内容，数组，内容为具体条目.</param>
        /// <param name="endTime">可空，计划截止时间.</param>
        /// <param name="opType">针对投放内容的操作， 包含3种类型： 覆盖:OVERRIDE  追加:APPEND  删除:DELETE.</param>
        /// <param name="operatorAppid">投放方标识，一般为小程序id.</param>
        /// <param name="operatorType">投放方类型，生活号：LIFE_APP 达人：CONTENT_USER 小程序：TINYAPP.</param>
        /// <param name="planName">投放计划名，可空.</param>
        /// <param name="startTime">可空，计划生效时间.</param>
        /// <param name="status">计划状态 0待生效 1生效中 -1已作废.</param>
        /// <param name="targetId">投放目标，一般为生活号id，多个逗号隔开.</param>
        /// <param name="targetRange">投放范围， 指主体内的具体子渠道，为空则任意子渠道.</param>
        /// <param name="targetType">投放目标类型 生活号：LIFE_APP  达人：CONTENT_USER  小程序:TINYAPP.</param>
        public AlipayMerchantLiveItemplanModifyModel(List<ItemPlanContentDO> content = default(List<ItemPlanContentDO>), string endTime = default(string), string opType = default(string), string operatorAppid = default(string), string operatorType = default(string), string planName = default(string), string startTime = default(string), int status = default(int), string targetId = default(string), string targetRange = default(string), string targetType = default(string))
        {
            this.Content = content;
            this.EndTime = endTime;
            this.OpType = opType;
            this.OperatorAppid = operatorAppid;
            this.OperatorType = operatorType;
            this.PlanName = planName;
            this.StartTime = startTime;
            this.Status = status;
            this.TargetId = targetId;
            this.TargetRange = targetRange;
            this.TargetType = targetType;
        }

        /// <summary>
        /// 投放内容，数组，内容为具体条目
        /// </summary>
        /// <value>投放内容，数组，内容为具体条目</value>
        [DataMember(Name = "content", EmitDefaultValue = false)]
        public List<ItemPlanContentDO> Content { get; set; }

        /// <summary>
        /// 可空，计划截止时间
        /// </summary>
        /// <value>可空，计划截止时间</value>
        [DataMember(Name = "end_time", EmitDefaultValue = false)]
        public string EndTime { get; set; }

        /// <summary>
        /// 针对投放内容的操作， 包含3种类型： 覆盖:OVERRIDE  追加:APPEND  删除:DELETE
        /// </summary>
        /// <value>针对投放内容的操作， 包含3种类型： 覆盖:OVERRIDE  追加:APPEND  删除:DELETE</value>
        [DataMember(Name = "op_type", EmitDefaultValue = false)]
        public string OpType { get; set; }

        /// <summary>
        /// 投放方标识，一般为小程序id
        /// </summary>
        /// <value>投放方标识，一般为小程序id</value>
        [DataMember(Name = "operator_appid", EmitDefaultValue = false)]
        public string OperatorAppid { get; set; }

        /// <summary>
        /// 投放方类型，生活号：LIFE_APP 达人：CONTENT_USER 小程序：TINYAPP
        /// </summary>
        /// <value>投放方类型，生活号：LIFE_APP 达人：CONTENT_USER 小程序：TINYAPP</value>
        [DataMember(Name = "operator_type", EmitDefaultValue = false)]
        public string OperatorType { get; set; }

        /// <summary>
        /// 投放计划名，可空
        /// </summary>
        /// <value>投放计划名，可空</value>
        [DataMember(Name = "plan_name", EmitDefaultValue = false)]
        public string PlanName { get; set; }

        /// <summary>
        /// 可空，计划生效时间
        /// </summary>
        /// <value>可空，计划生效时间</value>
        [DataMember(Name = "start_time", EmitDefaultValue = false)]
        public string StartTime { get; set; }

        /// <summary>
        /// 计划状态 0待生效 1生效中 -1已作废
        /// </summary>
        /// <value>计划状态 0待生效 1生效中 -1已作废</value>
        [DataMember(Name = "status", EmitDefaultValue = false)]
        public int Status { get; set; }

        /// <summary>
        /// 投放目标，一般为生活号id，多个逗号隔开
        /// </summary>
        /// <value>投放目标，一般为生活号id，多个逗号隔开</value>
        [DataMember(Name = "target_id", EmitDefaultValue = false)]
        public string TargetId { get; set; }

        /// <summary>
        /// 投放范围， 指主体内的具体子渠道，为空则任意子渠道
        /// </summary>
        /// <value>投放范围， 指主体内的具体子渠道，为空则任意子渠道</value>
        [DataMember(Name = "target_range", EmitDefaultValue = false)]
        public string TargetRange { get; set; }

        /// <summary>
        /// 投放目标类型 生活号：LIFE_APP  达人：CONTENT_USER  小程序:TINYAPP
        /// </summary>
        /// <value>投放目标类型 生活号：LIFE_APP  达人：CONTENT_USER  小程序:TINYAPP</value>
        [DataMember(Name = "target_type", EmitDefaultValue = false)]
        public string TargetType { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class AlipayMerchantLiveItemplanModifyModel {\n");
            sb.Append("  Content: ").Append(Content).Append("\n");
            sb.Append("  EndTime: ").Append(EndTime).Append("\n");
            sb.Append("  OpType: ").Append(OpType).Append("\n");
            sb.Append("  OperatorAppid: ").Append(OperatorAppid).Append("\n");
            sb.Append("  OperatorType: ").Append(OperatorType).Append("\n");
            sb.Append("  PlanName: ").Append(PlanName).Append("\n");
            sb.Append("  StartTime: ").Append(StartTime).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("  TargetId: ").Append(TargetId).Append("\n");
            sb.Append("  TargetRange: ").Append(TargetRange).Append("\n");
            sb.Append("  TargetType: ").Append(TargetType).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as AlipayMerchantLiveItemplanModifyModel);
        }

        /// <summary>
        /// Returns true if AlipayMerchantLiveItemplanModifyModel instances are equal
        /// </summary>
        /// <param name="input">Instance of AlipayMerchantLiveItemplanModifyModel to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AlipayMerchantLiveItemplanModifyModel input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.Content == input.Content ||
                    this.Content != null &&
                    input.Content != null &&
                    this.Content.SequenceEqual(input.Content)
                ) && 
                (
                    this.EndTime == input.EndTime ||
                    (this.EndTime != null &&
                    this.EndTime.Equals(input.EndTime))
                ) && 
                (
                    this.OpType == input.OpType ||
                    (this.OpType != null &&
                    this.OpType.Equals(input.OpType))
                ) && 
                (
                    this.OperatorAppid == input.OperatorAppid ||
                    (this.OperatorAppid != null &&
                    this.OperatorAppid.Equals(input.OperatorAppid))
                ) && 
                (
                    this.OperatorType == input.OperatorType ||
                    (this.OperatorType != null &&
                    this.OperatorType.Equals(input.OperatorType))
                ) && 
                (
                    this.PlanName == input.PlanName ||
                    (this.PlanName != null &&
                    this.PlanName.Equals(input.PlanName))
                ) && 
                (
                    this.StartTime == input.StartTime ||
                    (this.StartTime != null &&
                    this.StartTime.Equals(input.StartTime))
                ) && 
                (
                    this.Status == input.Status ||
                    this.Status.Equals(input.Status)
                ) && 
                (
                    this.TargetId == input.TargetId ||
                    (this.TargetId != null &&
                    this.TargetId.Equals(input.TargetId))
                ) && 
                (
                    this.TargetRange == input.TargetRange ||
                    (this.TargetRange != null &&
                    this.TargetRange.Equals(input.TargetRange))
                ) && 
                (
                    this.TargetType == input.TargetType ||
                    (this.TargetType != null &&
                    this.TargetType.Equals(input.TargetType))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Content != null)
                {
                    hashCode = (hashCode * 59) + this.Content.GetHashCode();
                }
                if (this.EndTime != null)
                {
                    hashCode = (hashCode * 59) + this.EndTime.GetHashCode();
                }
                if (this.OpType != null)
                {
                    hashCode = (hashCode * 59) + this.OpType.GetHashCode();
                }
                if (this.OperatorAppid != null)
                {
                    hashCode = (hashCode * 59) + this.OperatorAppid.GetHashCode();
                }
                if (this.OperatorType != null)
                {
                    hashCode = (hashCode * 59) + this.OperatorType.GetHashCode();
                }
                if (this.PlanName != null)
                {
                    hashCode = (hashCode * 59) + this.PlanName.GetHashCode();
                }
                if (this.StartTime != null)
                {
                    hashCode = (hashCode * 59) + this.StartTime.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.Status.GetHashCode();
                if (this.TargetId != null)
                {
                    hashCode = (hashCode * 59) + this.TargetId.GetHashCode();
                }
                if (this.TargetRange != null)
                {
                    hashCode = (hashCode * 59) + this.TargetRange.GetHashCode();
                }
                if (this.TargetType != null)
                {
                    hashCode = (hashCode * 59) + this.TargetType.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
