/*
 * 支付宝开放平台API
 *
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2025-02-19
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = AlipaySDKNet.OpenAPI.Client.OpenAPIDateConverter;

namespace AlipaySDKNet.OpenAPI.Model
{
    /// <summary>
    /// AlipayOpenAppApiFieldApplyRequest
    /// </summary>
    [DataContract(Name = "alipay_open_app_api_field_apply_request")]
    public partial class AlipayOpenAppApiFieldApplyRequest : IEquatable<AlipayOpenAppApiFieldApplyRequest>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AlipayOpenAppApiFieldApplyRequest" /> class.
        /// </summary>
        /// <param name="data">data.</param>
        /// <param name="picture1">picture1.</param>
        /// <param name="picture2">picture2.</param>
        /// <param name="picture3">picture3.</param>
        /// <param name="picture4">picture4.</param>
        /// <param name="picture5">picture5.</param>
        /// <param name="video">video.</param>
        public AlipayOpenAppApiFieldApplyRequest(AlipayOpenAppApiFieldApplyModel data = default(AlipayOpenAppApiFieldApplyModel), System.IO.Stream picture1 = default(System.IO.Stream), System.IO.Stream picture2 = default(System.IO.Stream), System.IO.Stream picture3 = default(System.IO.Stream), System.IO.Stream picture4 = default(System.IO.Stream), System.IO.Stream picture5 = default(System.IO.Stream), System.IO.Stream video = default(System.IO.Stream))
        {
            this.Data = data;
            this.Picture1 = picture1;
            this.Picture2 = picture2;
            this.Picture3 = picture3;
            this.Picture4 = picture4;
            this.Picture5 = picture5;
            this.Video = video;
        }

        /// <summary>
        /// Gets or Sets Data
        /// </summary>
        [DataMember(Name = "data", EmitDefaultValue = false)]
        public AlipayOpenAppApiFieldApplyModel Data { get; set; }

        /// <summary>
        /// Gets or Sets Picture1
        /// </summary>
        [DataMember(Name = "picture_1", EmitDefaultValue = false)]
        public System.IO.Stream Picture1 { get; set; }

        /// <summary>
        /// Gets or Sets Picture2
        /// </summary>
        [DataMember(Name = "picture_2", EmitDefaultValue = false)]
        public System.IO.Stream Picture2 { get; set; }

        /// <summary>
        /// Gets or Sets Picture3
        /// </summary>
        [DataMember(Name = "picture_3", EmitDefaultValue = false)]
        public System.IO.Stream Picture3 { get; set; }

        /// <summary>
        /// Gets or Sets Picture4
        /// </summary>
        [DataMember(Name = "picture_4", EmitDefaultValue = false)]
        public System.IO.Stream Picture4 { get; set; }

        /// <summary>
        /// Gets or Sets Picture5
        /// </summary>
        [DataMember(Name = "picture_5", EmitDefaultValue = false)]
        public System.IO.Stream Picture5 { get; set; }

        /// <summary>
        /// Gets or Sets Video
        /// </summary>
        [DataMember(Name = "video", EmitDefaultValue = false)]
        public System.IO.Stream Video { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class AlipayOpenAppApiFieldApplyRequest {\n");
            sb.Append("  Data: ").Append(Data).Append("\n");
            sb.Append("  Picture1: ").Append(Picture1).Append("\n");
            sb.Append("  Picture2: ").Append(Picture2).Append("\n");
            sb.Append("  Picture3: ").Append(Picture3).Append("\n");
            sb.Append("  Picture4: ").Append(Picture4).Append("\n");
            sb.Append("  Picture5: ").Append(Picture5).Append("\n");
            sb.Append("  Video: ").Append(Video).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as AlipayOpenAppApiFieldApplyRequest);
        }

        /// <summary>
        /// Returns true if AlipayOpenAppApiFieldApplyRequest instances are equal
        /// </summary>
        /// <param name="input">Instance of AlipayOpenAppApiFieldApplyRequest to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AlipayOpenAppApiFieldApplyRequest input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.Data == input.Data ||
                    (this.Data != null &&
                    this.Data.Equals(input.Data))
                ) && 
                (
                    this.Picture1 == input.Picture1 ||
                    (this.Picture1 != null &&
                    this.Picture1.Equals(input.Picture1))
                ) && 
                (
                    this.Picture2 == input.Picture2 ||
                    (this.Picture2 != null &&
                    this.Picture2.Equals(input.Picture2))
                ) && 
                (
                    this.Picture3 == input.Picture3 ||
                    (this.Picture3 != null &&
                    this.Picture3.Equals(input.Picture3))
                ) && 
                (
                    this.Picture4 == input.Picture4 ||
                    (this.Picture4 != null &&
                    this.Picture4.Equals(input.Picture4))
                ) && 
                (
                    this.Picture5 == input.Picture5 ||
                    (this.Picture5 != null &&
                    this.Picture5.Equals(input.Picture5))
                ) && 
                (
                    this.Video == input.Video ||
                    (this.Video != null &&
                    this.Video.Equals(input.Video))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Data != null)
                {
                    hashCode = (hashCode * 59) + this.Data.GetHashCode();
                }
                if (this.Picture1 != null)
                {
                    hashCode = (hashCode * 59) + this.Picture1.GetHashCode();
                }
                if (this.Picture2 != null)
                {
                    hashCode = (hashCode * 59) + this.Picture2.GetHashCode();
                }
                if (this.Picture3 != null)
                {
                    hashCode = (hashCode * 59) + this.Picture3.GetHashCode();
                }
                if (this.Picture4 != null)
                {
                    hashCode = (hashCode * 59) + this.Picture4.GetHashCode();
                }
                if (this.Picture5 != null)
                {
                    hashCode = (hashCode * 59) + this.Picture5.GetHashCode();
                }
                if (this.Video != null)
                {
                    hashCode = (hashCode * 59) + this.Video.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
