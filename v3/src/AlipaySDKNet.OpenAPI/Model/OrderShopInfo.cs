/*
 * 支付宝开放平台API
 *
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2025-02-19
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = AlipaySDKNet.OpenAPI.Client.OpenAPIDateConverter;

namespace AlipaySDKNet.OpenAPI.Model
{
    /// <summary>
    /// OrderShopInfo
    /// </summary>
    [DataContract(Name = "OrderShopInfo")]
    public partial class OrderShopInfo : IEquatable<OrderShopInfo>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="OrderShopInfo" /> class.
        /// </summary>
        /// <param name="address">店铺地址.</param>
        /// <param name="alipayShopId">蚂蚁门店shop_id.</param>
        /// <param name="extInfo">门店其他业务属性，不同业务场景KEY枚举值不同，使用前请参考产品文档.</param>
        /// <param name="merchantShopId">商户门店id 支持英文、数字的组合.</param>
        /// <param name="merchantShopLinkPage">店铺详情链接地址.</param>
        /// <param name="name">店铺名称.</param>
        /// <param name="phoneNum">联系电话-支持固话或手机号 仅支持数字、+、- 。例如 手机：1380***1111、固话：021-888**888.</param>
        /// <param name="type">仅当alipay_shop_id字段值为非标准蚂蚁门店时使用，其他场景无需传入.</param>
        public OrderShopInfo(string address = default(string), string alipayShopId = default(string), List<OrderExtInfo> extInfo = default(List<OrderExtInfo>), string merchantShopId = default(string), string merchantShopLinkPage = default(string), string name = default(string), string phoneNum = default(string), string type = default(string))
        {
            this.Address = address;
            this.AlipayShopId = alipayShopId;
            this.ExtInfo = extInfo;
            this.MerchantShopId = merchantShopId;
            this.MerchantShopLinkPage = merchantShopLinkPage;
            this.Name = name;
            this.PhoneNum = phoneNum;
            this.Type = type;
        }

        /// <summary>
        /// 店铺地址
        /// </summary>
        /// <value>店铺地址</value>
        [DataMember(Name = "address", EmitDefaultValue = false)]
        public string Address { get; set; }

        /// <summary>
        /// 蚂蚁门店shop_id
        /// </summary>
        /// <value>蚂蚁门店shop_id</value>
        [DataMember(Name = "alipay_shop_id", EmitDefaultValue = false)]
        public string AlipayShopId { get; set; }

        /// <summary>
        /// 门店其他业务属性，不同业务场景KEY枚举值不同，使用前请参考产品文档
        /// </summary>
        /// <value>门店其他业务属性，不同业务场景KEY枚举值不同，使用前请参考产品文档</value>
        [DataMember(Name = "ext_info", EmitDefaultValue = false)]
        public List<OrderExtInfo> ExtInfo { get; set; }

        /// <summary>
        /// 商户门店id 支持英文、数字的组合
        /// </summary>
        /// <value>商户门店id 支持英文、数字的组合</value>
        [DataMember(Name = "merchant_shop_id", EmitDefaultValue = false)]
        public string MerchantShopId { get; set; }

        /// <summary>
        /// 店铺详情链接地址
        /// </summary>
        /// <value>店铺详情链接地址</value>
        [DataMember(Name = "merchant_shop_link_page", EmitDefaultValue = false)]
        public string MerchantShopLinkPage { get; set; }

        /// <summary>
        /// 店铺名称
        /// </summary>
        /// <value>店铺名称</value>
        [DataMember(Name = "name", EmitDefaultValue = false)]
        public string Name { get; set; }

        /// <summary>
        /// 联系电话-支持固话或手机号 仅支持数字、+、- 。例如 手机：1380***1111、固话：021-888**888
        /// </summary>
        /// <value>联系电话-支持固话或手机号 仅支持数字、+、- 。例如 手机：1380***1111、固话：021-888**888</value>
        [DataMember(Name = "phone_num", EmitDefaultValue = false)]
        public string PhoneNum { get; set; }

        /// <summary>
        /// 仅当alipay_shop_id字段值为非标准蚂蚁门店时使用，其他场景无需传入
        /// </summary>
        /// <value>仅当alipay_shop_id字段值为非标准蚂蚁门店时使用，其他场景无需传入</value>
        [DataMember(Name = "type", EmitDefaultValue = false)]
        public string Type { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class OrderShopInfo {\n");
            sb.Append("  Address: ").Append(Address).Append("\n");
            sb.Append("  AlipayShopId: ").Append(AlipayShopId).Append("\n");
            sb.Append("  ExtInfo: ").Append(ExtInfo).Append("\n");
            sb.Append("  MerchantShopId: ").Append(MerchantShopId).Append("\n");
            sb.Append("  MerchantShopLinkPage: ").Append(MerchantShopLinkPage).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  PhoneNum: ").Append(PhoneNum).Append("\n");
            sb.Append("  Type: ").Append(Type).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as OrderShopInfo);
        }

        /// <summary>
        /// Returns true if OrderShopInfo instances are equal
        /// </summary>
        /// <param name="input">Instance of OrderShopInfo to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(OrderShopInfo input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.Address == input.Address ||
                    (this.Address != null &&
                    this.Address.Equals(input.Address))
                ) && 
                (
                    this.AlipayShopId == input.AlipayShopId ||
                    (this.AlipayShopId != null &&
                    this.AlipayShopId.Equals(input.AlipayShopId))
                ) && 
                (
                    this.ExtInfo == input.ExtInfo ||
                    this.ExtInfo != null &&
                    input.ExtInfo != null &&
                    this.ExtInfo.SequenceEqual(input.ExtInfo)
                ) && 
                (
                    this.MerchantShopId == input.MerchantShopId ||
                    (this.MerchantShopId != null &&
                    this.MerchantShopId.Equals(input.MerchantShopId))
                ) && 
                (
                    this.MerchantShopLinkPage == input.MerchantShopLinkPage ||
                    (this.MerchantShopLinkPage != null &&
                    this.MerchantShopLinkPage.Equals(input.MerchantShopLinkPage))
                ) && 
                (
                    this.Name == input.Name ||
                    (this.Name != null &&
                    this.Name.Equals(input.Name))
                ) && 
                (
                    this.PhoneNum == input.PhoneNum ||
                    (this.PhoneNum != null &&
                    this.PhoneNum.Equals(input.PhoneNum))
                ) && 
                (
                    this.Type == input.Type ||
                    (this.Type != null &&
                    this.Type.Equals(input.Type))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Address != null)
                {
                    hashCode = (hashCode * 59) + this.Address.GetHashCode();
                }
                if (this.AlipayShopId != null)
                {
                    hashCode = (hashCode * 59) + this.AlipayShopId.GetHashCode();
                }
                if (this.ExtInfo != null)
                {
                    hashCode = (hashCode * 59) + this.ExtInfo.GetHashCode();
                }
                if (this.MerchantShopId != null)
                {
                    hashCode = (hashCode * 59) + this.MerchantShopId.GetHashCode();
                }
                if (this.MerchantShopLinkPage != null)
                {
                    hashCode = (hashCode * 59) + this.MerchantShopLinkPage.GetHashCode();
                }
                if (this.Name != null)
                {
                    hashCode = (hashCode * 59) + this.Name.GetHashCode();
                }
                if (this.PhoneNum != null)
                {
                    hashCode = (hashCode * 59) + this.PhoneNum.GetHashCode();
                }
                if (this.Type != null)
                {
                    hashCode = (hashCode * 59) + this.Type.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
