/*
 * 支付宝开放平台API
 *
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2025-02-19
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = AlipaySDKNet.OpenAPI.Client.OpenAPIDateConverter;

namespace AlipaySDKNet.OpenAPI.Model
{
    /// <summary>
    /// MiniAppDeployResponse
    /// </summary>
    [DataContract(Name = "MiniAppDeployResponse")]
    public partial class MiniAppDeployResponse : IEquatable<MiniAppDeployResponse>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="MiniAppDeployResponse" /> class.
        /// </summary>
        /// <param name="androidClientMax">安卓最大版本号.</param>
        /// <param name="androidClientMin">安卓最低版本号.</param>
        /// <param name="appVersion">小程序版本号.</param>
        /// <param name="bundleId">端标识.</param>
        /// <param name="deployVersion">发布版本.</param>
        /// <param name="gmtCreate">创建时间.</param>
        /// <param name="gmtModified">修改时间.</param>
        /// <param name="iosClientMax">iOS最大版本号.</param>
        /// <param name="iosClientMin">iOS最小版本号.</param>
        /// <param name="miniAppId">小程序ID.</param>
        /// <param name="packageSize">包大小.</param>
        /// <param name="status">发布状态     INVALID(\&quot;INVALID\&quot;, \&quot;非法\&quot;),     INIT(\&quot;INIT\&quot;, \&quot;初始化状态\&quot;),     PRE_ONLINE(\&quot;PRE_ONLINE\&quot;, \&quot;预发\&quot;);     GRAY(\&quot;GRAY\&quot;, \&quot;灰度\&quot;),     ONLINE(\&quot;ONLINE\&quot;, \&quot;上架\&quot;),     ABANDON(\&quot;ABANDON\&quot;, \&quot;废弃\&quot;),.</param>
        public MiniAppDeployResponse(string androidClientMax = default(string), string androidClientMin = default(string), string appVersion = default(string), string bundleId = default(string), string deployVersion = default(string), string gmtCreate = default(string), string gmtModified = default(string), string iosClientMax = default(string), string iosClientMin = default(string), string miniAppId = default(string), string packageSize = default(string), string status = default(string))
        {
            this.AndroidClientMax = androidClientMax;
            this.AndroidClientMin = androidClientMin;
            this.AppVersion = appVersion;
            this.BundleId = bundleId;
            this.DeployVersion = deployVersion;
            this.GmtCreate = gmtCreate;
            this.GmtModified = gmtModified;
            this.IosClientMax = iosClientMax;
            this.IosClientMin = iosClientMin;
            this.MiniAppId = miniAppId;
            this.PackageSize = packageSize;
            this.Status = status;
        }

        /// <summary>
        /// 安卓最大版本号
        /// </summary>
        /// <value>安卓最大版本号</value>
        [DataMember(Name = "android_client_max", EmitDefaultValue = false)]
        public string AndroidClientMax { get; set; }

        /// <summary>
        /// 安卓最低版本号
        /// </summary>
        /// <value>安卓最低版本号</value>
        [DataMember(Name = "android_client_min", EmitDefaultValue = false)]
        public string AndroidClientMin { get; set; }

        /// <summary>
        /// 小程序版本号
        /// </summary>
        /// <value>小程序版本号</value>
        [DataMember(Name = "app_version", EmitDefaultValue = false)]
        public string AppVersion { get; set; }

        /// <summary>
        /// 端标识
        /// </summary>
        /// <value>端标识</value>
        [DataMember(Name = "bundle_id", EmitDefaultValue = false)]
        public string BundleId { get; set; }

        /// <summary>
        /// 发布版本
        /// </summary>
        /// <value>发布版本</value>
        [DataMember(Name = "deploy_version", EmitDefaultValue = false)]
        public string DeployVersion { get; set; }

        /// <summary>
        /// 创建时间
        /// </summary>
        /// <value>创建时间</value>
        [DataMember(Name = "gmt_create", EmitDefaultValue = false)]
        public string GmtCreate { get; set; }

        /// <summary>
        /// 修改时间
        /// </summary>
        /// <value>修改时间</value>
        [DataMember(Name = "gmt_modified", EmitDefaultValue = false)]
        public string GmtModified { get; set; }

        /// <summary>
        /// iOS最大版本号
        /// </summary>
        /// <value>iOS最大版本号</value>
        [DataMember(Name = "ios_client_max", EmitDefaultValue = false)]
        public string IosClientMax { get; set; }

        /// <summary>
        /// iOS最小版本号
        /// </summary>
        /// <value>iOS最小版本号</value>
        [DataMember(Name = "ios_client_min", EmitDefaultValue = false)]
        public string IosClientMin { get; set; }

        /// <summary>
        /// 小程序ID
        /// </summary>
        /// <value>小程序ID</value>
        [DataMember(Name = "mini_app_id", EmitDefaultValue = false)]
        public string MiniAppId { get; set; }

        /// <summary>
        /// 包大小
        /// </summary>
        /// <value>包大小</value>
        [DataMember(Name = "package_size", EmitDefaultValue = false)]
        public string PackageSize { get; set; }

        /// <summary>
        /// 发布状态     INVALID(\&quot;INVALID\&quot;, \&quot;非法\&quot;),     INIT(\&quot;INIT\&quot;, \&quot;初始化状态\&quot;),     PRE_ONLINE(\&quot;PRE_ONLINE\&quot;, \&quot;预发\&quot;);     GRAY(\&quot;GRAY\&quot;, \&quot;灰度\&quot;),     ONLINE(\&quot;ONLINE\&quot;, \&quot;上架\&quot;),     ABANDON(\&quot;ABANDON\&quot;, \&quot;废弃\&quot;),
        /// </summary>
        /// <value>发布状态     INVALID(\&quot;INVALID\&quot;, \&quot;非法\&quot;),     INIT(\&quot;INIT\&quot;, \&quot;初始化状态\&quot;),     PRE_ONLINE(\&quot;PRE_ONLINE\&quot;, \&quot;预发\&quot;);     GRAY(\&quot;GRAY\&quot;, \&quot;灰度\&quot;),     ONLINE(\&quot;ONLINE\&quot;, \&quot;上架\&quot;),     ABANDON(\&quot;ABANDON\&quot;, \&quot;废弃\&quot;),</value>
        [DataMember(Name = "status", EmitDefaultValue = false)]
        public string Status { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class MiniAppDeployResponse {\n");
            sb.Append("  AndroidClientMax: ").Append(AndroidClientMax).Append("\n");
            sb.Append("  AndroidClientMin: ").Append(AndroidClientMin).Append("\n");
            sb.Append("  AppVersion: ").Append(AppVersion).Append("\n");
            sb.Append("  BundleId: ").Append(BundleId).Append("\n");
            sb.Append("  DeployVersion: ").Append(DeployVersion).Append("\n");
            sb.Append("  GmtCreate: ").Append(GmtCreate).Append("\n");
            sb.Append("  GmtModified: ").Append(GmtModified).Append("\n");
            sb.Append("  IosClientMax: ").Append(IosClientMax).Append("\n");
            sb.Append("  IosClientMin: ").Append(IosClientMin).Append("\n");
            sb.Append("  MiniAppId: ").Append(MiniAppId).Append("\n");
            sb.Append("  PackageSize: ").Append(PackageSize).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as MiniAppDeployResponse);
        }

        /// <summary>
        /// Returns true if MiniAppDeployResponse instances are equal
        /// </summary>
        /// <param name="input">Instance of MiniAppDeployResponse to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(MiniAppDeployResponse input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.AndroidClientMax == input.AndroidClientMax ||
                    (this.AndroidClientMax != null &&
                    this.AndroidClientMax.Equals(input.AndroidClientMax))
                ) && 
                (
                    this.AndroidClientMin == input.AndroidClientMin ||
                    (this.AndroidClientMin != null &&
                    this.AndroidClientMin.Equals(input.AndroidClientMin))
                ) && 
                (
                    this.AppVersion == input.AppVersion ||
                    (this.AppVersion != null &&
                    this.AppVersion.Equals(input.AppVersion))
                ) && 
                (
                    this.BundleId == input.BundleId ||
                    (this.BundleId != null &&
                    this.BundleId.Equals(input.BundleId))
                ) && 
                (
                    this.DeployVersion == input.DeployVersion ||
                    (this.DeployVersion != null &&
                    this.DeployVersion.Equals(input.DeployVersion))
                ) && 
                (
                    this.GmtCreate == input.GmtCreate ||
                    (this.GmtCreate != null &&
                    this.GmtCreate.Equals(input.GmtCreate))
                ) && 
                (
                    this.GmtModified == input.GmtModified ||
                    (this.GmtModified != null &&
                    this.GmtModified.Equals(input.GmtModified))
                ) && 
                (
                    this.IosClientMax == input.IosClientMax ||
                    (this.IosClientMax != null &&
                    this.IosClientMax.Equals(input.IosClientMax))
                ) && 
                (
                    this.IosClientMin == input.IosClientMin ||
                    (this.IosClientMin != null &&
                    this.IosClientMin.Equals(input.IosClientMin))
                ) && 
                (
                    this.MiniAppId == input.MiniAppId ||
                    (this.MiniAppId != null &&
                    this.MiniAppId.Equals(input.MiniAppId))
                ) && 
                (
                    this.PackageSize == input.PackageSize ||
                    (this.PackageSize != null &&
                    this.PackageSize.Equals(input.PackageSize))
                ) && 
                (
                    this.Status == input.Status ||
                    (this.Status != null &&
                    this.Status.Equals(input.Status))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.AndroidClientMax != null)
                {
                    hashCode = (hashCode * 59) + this.AndroidClientMax.GetHashCode();
                }
                if (this.AndroidClientMin != null)
                {
                    hashCode = (hashCode * 59) + this.AndroidClientMin.GetHashCode();
                }
                if (this.AppVersion != null)
                {
                    hashCode = (hashCode * 59) + this.AppVersion.GetHashCode();
                }
                if (this.BundleId != null)
                {
                    hashCode = (hashCode * 59) + this.BundleId.GetHashCode();
                }
                if (this.DeployVersion != null)
                {
                    hashCode = (hashCode * 59) + this.DeployVersion.GetHashCode();
                }
                if (this.GmtCreate != null)
                {
                    hashCode = (hashCode * 59) + this.GmtCreate.GetHashCode();
                }
                if (this.GmtModified != null)
                {
                    hashCode = (hashCode * 59) + this.GmtModified.GetHashCode();
                }
                if (this.IosClientMax != null)
                {
                    hashCode = (hashCode * 59) + this.IosClientMax.GetHashCode();
                }
                if (this.IosClientMin != null)
                {
                    hashCode = (hashCode * 59) + this.IosClientMin.GetHashCode();
                }
                if (this.MiniAppId != null)
                {
                    hashCode = (hashCode * 59) + this.MiniAppId.GetHashCode();
                }
                if (this.PackageSize != null)
                {
                    hashCode = (hashCode * 59) + this.PackageSize.GetHashCode();
                }
                if (this.Status != null)
                {
                    hashCode = (hashCode * 59) + this.Status.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
