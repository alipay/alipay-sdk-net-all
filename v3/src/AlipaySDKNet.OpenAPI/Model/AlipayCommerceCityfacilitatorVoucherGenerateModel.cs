/*
 * 支付宝开放平台API
 *
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2025-02-19
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = AlipaySDKNet.OpenAPI.Client.OpenAPIDateConverter;

namespace AlipaySDKNet.OpenAPI.Model
{
    /// <summary>
    /// AlipayCommerceCityfacilitatorVoucherGenerateModel
    /// </summary>
    [DataContract(Name = "AlipayCommerceCityfacilitatorVoucherGenerateModel")]
    public partial class AlipayCommerceCityfacilitatorVoucherGenerateModel : IEquatable<AlipayCommerceCityfacilitatorVoucherGenerateModel>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AlipayCommerceCityfacilitatorVoucherGenerateModel" /> class.
        /// </summary>
        /// <param name="cityCode">城市编码请参考查询 &lt;a href&#x3D;\&quot;http://www.mca.gov.cn/article/sj/xzqh/\&quot;&gt;中华人民共和国行政区划代码&lt;/a&gt;。 已支持城市：广州 440100，深圳 440300，杭州330100。.</param>
        /// <param name="siteBegin">起点站站点编码.</param>
        /// <param name="siteEnd">终点站站点编码.</param>
        /// <param name="ticketNum">地铁票购票数量.</param>
        /// <param name="ticketPrice">单张票价，元为单价.</param>
        /// <param name="ticketType">地铁票种类，枚举支持： *oneway。.</param>
        /// <param name="totalFee">订单总金额，元为单位.</param>
        /// <param name="tradeNo">支付宝交易号（交易支付时，必须通过指定sellerId：2088121612215201，将钱支付到指定的中间户中）.</param>
        public AlipayCommerceCityfacilitatorVoucherGenerateModel(string cityCode = default(string), string siteBegin = default(string), string siteEnd = default(string), string ticketNum = default(string), string ticketPrice = default(string), string ticketType = default(string), string totalFee = default(string), string tradeNo = default(string))
        {
            this.CityCode = cityCode;
            this.SiteBegin = siteBegin;
            this.SiteEnd = siteEnd;
            this.TicketNum = ticketNum;
            this.TicketPrice = ticketPrice;
            this.TicketType = ticketType;
            this.TotalFee = totalFee;
            this.TradeNo = tradeNo;
        }

        /// <summary>
        /// 城市编码请参考查询 &lt;a href&#x3D;\&quot;http://www.mca.gov.cn/article/sj/xzqh/\&quot;&gt;中华人民共和国行政区划代码&lt;/a&gt;。 已支持城市：广州 440100，深圳 440300，杭州330100。
        /// </summary>
        /// <value>城市编码请参考查询 &lt;a href&#x3D;\&quot;http://www.mca.gov.cn/article/sj/xzqh/\&quot;&gt;中华人民共和国行政区划代码&lt;/a&gt;。 已支持城市：广州 440100，深圳 440300，杭州330100。</value>
        [DataMember(Name = "city_code", EmitDefaultValue = false)]
        public string CityCode { get; set; }

        /// <summary>
        /// 起点站站点编码
        /// </summary>
        /// <value>起点站站点编码</value>
        [DataMember(Name = "site_begin", EmitDefaultValue = false)]
        public string SiteBegin { get; set; }

        /// <summary>
        /// 终点站站点编码
        /// </summary>
        /// <value>终点站站点编码</value>
        [DataMember(Name = "site_end", EmitDefaultValue = false)]
        public string SiteEnd { get; set; }

        /// <summary>
        /// 地铁票购票数量
        /// </summary>
        /// <value>地铁票购票数量</value>
        [DataMember(Name = "ticket_num", EmitDefaultValue = false)]
        public string TicketNum { get; set; }

        /// <summary>
        /// 单张票价，元为单价
        /// </summary>
        /// <value>单张票价，元为单价</value>
        [DataMember(Name = "ticket_price", EmitDefaultValue = false)]
        public string TicketPrice { get; set; }

        /// <summary>
        /// 地铁票种类，枚举支持： *oneway。
        /// </summary>
        /// <value>地铁票种类，枚举支持： *oneway。</value>
        [DataMember(Name = "ticket_type", EmitDefaultValue = false)]
        public string TicketType { get; set; }

        /// <summary>
        /// 订单总金额，元为单位
        /// </summary>
        /// <value>订单总金额，元为单位</value>
        [DataMember(Name = "total_fee", EmitDefaultValue = false)]
        public string TotalFee { get; set; }

        /// <summary>
        /// 支付宝交易号（交易支付时，必须通过指定sellerId：2088121612215201，将钱支付到指定的中间户中）
        /// </summary>
        /// <value>支付宝交易号（交易支付时，必须通过指定sellerId：2088121612215201，将钱支付到指定的中间户中）</value>
        [DataMember(Name = "trade_no", EmitDefaultValue = false)]
        public string TradeNo { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class AlipayCommerceCityfacilitatorVoucherGenerateModel {\n");
            sb.Append("  CityCode: ").Append(CityCode).Append("\n");
            sb.Append("  SiteBegin: ").Append(SiteBegin).Append("\n");
            sb.Append("  SiteEnd: ").Append(SiteEnd).Append("\n");
            sb.Append("  TicketNum: ").Append(TicketNum).Append("\n");
            sb.Append("  TicketPrice: ").Append(TicketPrice).Append("\n");
            sb.Append("  TicketType: ").Append(TicketType).Append("\n");
            sb.Append("  TotalFee: ").Append(TotalFee).Append("\n");
            sb.Append("  TradeNo: ").Append(TradeNo).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as AlipayCommerceCityfacilitatorVoucherGenerateModel);
        }

        /// <summary>
        /// Returns true if AlipayCommerceCityfacilitatorVoucherGenerateModel instances are equal
        /// </summary>
        /// <param name="input">Instance of AlipayCommerceCityfacilitatorVoucherGenerateModel to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AlipayCommerceCityfacilitatorVoucherGenerateModel input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.CityCode == input.CityCode ||
                    (this.CityCode != null &&
                    this.CityCode.Equals(input.CityCode))
                ) && 
                (
                    this.SiteBegin == input.SiteBegin ||
                    (this.SiteBegin != null &&
                    this.SiteBegin.Equals(input.SiteBegin))
                ) && 
                (
                    this.SiteEnd == input.SiteEnd ||
                    (this.SiteEnd != null &&
                    this.SiteEnd.Equals(input.SiteEnd))
                ) && 
                (
                    this.TicketNum == input.TicketNum ||
                    (this.TicketNum != null &&
                    this.TicketNum.Equals(input.TicketNum))
                ) && 
                (
                    this.TicketPrice == input.TicketPrice ||
                    (this.TicketPrice != null &&
                    this.TicketPrice.Equals(input.TicketPrice))
                ) && 
                (
                    this.TicketType == input.TicketType ||
                    (this.TicketType != null &&
                    this.TicketType.Equals(input.TicketType))
                ) && 
                (
                    this.TotalFee == input.TotalFee ||
                    (this.TotalFee != null &&
                    this.TotalFee.Equals(input.TotalFee))
                ) && 
                (
                    this.TradeNo == input.TradeNo ||
                    (this.TradeNo != null &&
                    this.TradeNo.Equals(input.TradeNo))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.CityCode != null)
                {
                    hashCode = (hashCode * 59) + this.CityCode.GetHashCode();
                }
                if (this.SiteBegin != null)
                {
                    hashCode = (hashCode * 59) + this.SiteBegin.GetHashCode();
                }
                if (this.SiteEnd != null)
                {
                    hashCode = (hashCode * 59) + this.SiteEnd.GetHashCode();
                }
                if (this.TicketNum != null)
                {
                    hashCode = (hashCode * 59) + this.TicketNum.GetHashCode();
                }
                if (this.TicketPrice != null)
                {
                    hashCode = (hashCode * 59) + this.TicketPrice.GetHashCode();
                }
                if (this.TicketType != null)
                {
                    hashCode = (hashCode * 59) + this.TicketType.GetHashCode();
                }
                if (this.TotalFee != null)
                {
                    hashCode = (hashCode * 59) + this.TotalFee.GetHashCode();
                }
                if (this.TradeNo != null)
                {
                    hashCode = (hashCode * 59) + this.TradeNo.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
