/*
 * 支付宝开放平台API
 *
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2025-02-19
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = AlipaySDKNet.OpenAPI.Client.OpenAPIDateConverter;

namespace AlipaySDKNet.OpenAPI.Model
{
    /// <summary>
    /// SubMerchantEnterOpenModel
    /// </summary>
    [DataContract(Name = "SubMerchantEnterOpenModel")]
    public partial class SubMerchantEnterOpenModel : IEquatable<SubMerchantEnterOpenModel>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="SubMerchantEnterOpenModel" /> class.
        /// </summary>
        /// <param name="extendFields">扩展字段，为json字符串格式；入驻缴费后开票的产品如果需要传入自定义开票链接，由此字段传入。.</param>
        /// <param name="industry">商户行业，枚举值如下：subway：地铁，etc：ETC，online_car_hailing：网约车，catering：餐饮，hotel：酒店，convenience_store：便利店，oil：加油，insurance：保险，service_provider：运营商，life_payment：生活缴费，political：政务，other：其他.</param>
        /// <param name="pid">开票商户pid，入驻支付即开票场景的时候，非登录账号入驻模式，则该字段必传.</param>
        /// <param name="registerNo">商户门店税号。.</param>
        /// <param name="subMName">商户门店全称。.</param>
        /// <param name="subMShortName">商户门店简称.</param>
        public SubMerchantEnterOpenModel(string extendFields = default(string), string industry = default(string), string pid = default(string), string registerNo = default(string), string subMName = default(string), string subMShortName = default(string))
        {
            this.ExtendFields = extendFields;
            this.Industry = industry;
            this.Pid = pid;
            this.RegisterNo = registerNo;
            this.SubMName = subMName;
            this.SubMShortName = subMShortName;
        }

        /// <summary>
        /// 扩展字段，为json字符串格式；入驻缴费后开票的产品如果需要传入自定义开票链接，由此字段传入。
        /// </summary>
        /// <value>扩展字段，为json字符串格式；入驻缴费后开票的产品如果需要传入自定义开票链接，由此字段传入。</value>
        [DataMember(Name = "extend_fields", EmitDefaultValue = false)]
        public string ExtendFields { get; set; }

        /// <summary>
        /// 商户行业，枚举值如下：subway：地铁，etc：ETC，online_car_hailing：网约车，catering：餐饮，hotel：酒店，convenience_store：便利店，oil：加油，insurance：保险，service_provider：运营商，life_payment：生活缴费，political：政务，other：其他
        /// </summary>
        /// <value>商户行业，枚举值如下：subway：地铁，etc：ETC，online_car_hailing：网约车，catering：餐饮，hotel：酒店，convenience_store：便利店，oil：加油，insurance：保险，service_provider：运营商，life_payment：生活缴费，political：政务，other：其他</value>
        [DataMember(Name = "industry", EmitDefaultValue = false)]
        public string Industry { get; set; }

        /// <summary>
        /// 开票商户pid，入驻支付即开票场景的时候，非登录账号入驻模式，则该字段必传
        /// </summary>
        /// <value>开票商户pid，入驻支付即开票场景的时候，非登录账号入驻模式，则该字段必传</value>
        [DataMember(Name = "pid", EmitDefaultValue = false)]
        public string Pid { get; set; }

        /// <summary>
        /// 商户门店税号。
        /// </summary>
        /// <value>商户门店税号。</value>
        [DataMember(Name = "register_no", EmitDefaultValue = false)]
        public string RegisterNo { get; set; }

        /// <summary>
        /// 商户门店全称。
        /// </summary>
        /// <value>商户门店全称。</value>
        [DataMember(Name = "sub_m_name", EmitDefaultValue = false)]
        public string SubMName { get; set; }

        /// <summary>
        /// 商户门店简称
        /// </summary>
        /// <value>商户门店简称</value>
        [DataMember(Name = "sub_m_short_name", EmitDefaultValue = false)]
        public string SubMShortName { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class SubMerchantEnterOpenModel {\n");
            sb.Append("  ExtendFields: ").Append(ExtendFields).Append("\n");
            sb.Append("  Industry: ").Append(Industry).Append("\n");
            sb.Append("  Pid: ").Append(Pid).Append("\n");
            sb.Append("  RegisterNo: ").Append(RegisterNo).Append("\n");
            sb.Append("  SubMName: ").Append(SubMName).Append("\n");
            sb.Append("  SubMShortName: ").Append(SubMShortName).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as SubMerchantEnterOpenModel);
        }

        /// <summary>
        /// Returns true if SubMerchantEnterOpenModel instances are equal
        /// </summary>
        /// <param name="input">Instance of SubMerchantEnterOpenModel to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(SubMerchantEnterOpenModel input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.ExtendFields == input.ExtendFields ||
                    (this.ExtendFields != null &&
                    this.ExtendFields.Equals(input.ExtendFields))
                ) && 
                (
                    this.Industry == input.Industry ||
                    (this.Industry != null &&
                    this.Industry.Equals(input.Industry))
                ) && 
                (
                    this.Pid == input.Pid ||
                    (this.Pid != null &&
                    this.Pid.Equals(input.Pid))
                ) && 
                (
                    this.RegisterNo == input.RegisterNo ||
                    (this.RegisterNo != null &&
                    this.RegisterNo.Equals(input.RegisterNo))
                ) && 
                (
                    this.SubMName == input.SubMName ||
                    (this.SubMName != null &&
                    this.SubMName.Equals(input.SubMName))
                ) && 
                (
                    this.SubMShortName == input.SubMShortName ||
                    (this.SubMShortName != null &&
                    this.SubMShortName.Equals(input.SubMShortName))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ExtendFields != null)
                {
                    hashCode = (hashCode * 59) + this.ExtendFields.GetHashCode();
                }
                if (this.Industry != null)
                {
                    hashCode = (hashCode * 59) + this.Industry.GetHashCode();
                }
                if (this.Pid != null)
                {
                    hashCode = (hashCode * 59) + this.Pid.GetHashCode();
                }
                if (this.RegisterNo != null)
                {
                    hashCode = (hashCode * 59) + this.RegisterNo.GetHashCode();
                }
                if (this.SubMName != null)
                {
                    hashCode = (hashCode * 59) + this.SubMName.GetHashCode();
                }
                if (this.SubMShortName != null)
                {
                    hashCode = (hashCode * 59) + this.SubMShortName.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
