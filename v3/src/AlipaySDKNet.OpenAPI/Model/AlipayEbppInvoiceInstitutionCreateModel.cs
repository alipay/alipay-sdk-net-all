/*
 * 支付宝开放平台API
 *
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2025-02-19
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = AlipaySDKNet.OpenAPI.Client.OpenAPIDateConverter;

namespace AlipaySDKNet.OpenAPI.Model
{
    /// <summary>
    /// AlipayEbppInvoiceInstitutionCreateModel
    /// </summary>
    [DataContract(Name = "AlipayEbppInvoiceInstitutionCreateModel")]
    public partial class AlipayEbppInvoiceInstitutionCreateModel : IEquatable<AlipayEbppInvoiceInstitutionCreateModel>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AlipayEbppInvoiceInstitutionCreateModel" /> class.
        /// </summary>
        /// <param name="accountId">企业共同账户id（该字段将废弃，不建议使用，可用enterprise_id字段替换）(该字段将废弃，不建议使用，可用enterprise_id字段替换).</param>
        /// <param name="adapterType">制度适配范围(请使用institution_scope_info中adapter_type).</param>
        /// <param name="agreementNo">授权签约协议号（该字段将废弃，不建议使用，可用enterprise_id字段替换）(该字段将废弃，不建议使用，可用enterprise_id字段替换).</param>
        /// <param name="consultMode">费控咨询模式，默认为0。.</param>
        /// <param name="currency">该字段用于管控制度下发放的资产币种，不填写默认为人民币，设置该字段后，制度下手工发放的资产币种均为设置值。.</param>
        /// <param name="effectiveEndDate">制度生效结束时间.</param>
        /// <param name="effectiveStartDate">制度生效起始时间.</param>
        /// <param name="enterpriseId">企业id.</param>
        /// <param name="expenseType">费用类型.</param>
        /// <param name="institutionDesc">制度描述.</param>
        /// <param name="institutionName">制度名称.</param>
        /// <param name="institutionScopeInfo">institutionScopeInfo.</param>
        /// <param name="issueRuleInfoList">发放规则列表.</param>
        /// <param name="outerSourceId">外部唯一标识，可用于防止重复创建.</param>
        /// <param name="ownerIdList">适配id列表(请使用institution_scope_info中owner_id_list).</param>
        /// <param name="ownerOpenIdList">适配开放id列表(仅存量使用员工支付宝id配置适配范围的场景需要该字段，新对接方案不推荐使用员工支付宝id).</param>
        /// <param name="ownerType">适配id类型(请使用institution_scope_info中owner_type).</param>
        /// <param name="sceneType">因公场景(该字段将废弃，不建议使用).</param>
        /// <param name="standardInfoList">使用规则列表.</param>
        public AlipayEbppInvoiceInstitutionCreateModel(string accountId = default(string), string adapterType = default(string), string agreementNo = default(string), string consultMode = default(string), string currency = default(string), string effectiveEndDate = default(string), string effectiveStartDate = default(string), string enterpriseId = default(string), string expenseType = default(string), string institutionDesc = default(string), string institutionName = default(string), InstitutionScopeInfo institutionScopeInfo = default(InstitutionScopeInfo), List<IssueRuleInfo> issueRuleInfoList = default(List<IssueRuleInfo>), string outerSourceId = default(string), List<string> ownerIdList = default(List<string>), List<string> ownerOpenIdList = default(List<string>), string ownerType = default(string), string sceneType = default(string), List<StandardInfo> standardInfoList = default(List<StandardInfo>))
        {
            this.AccountId = accountId;
            this.AdapterType = adapterType;
            this.AgreementNo = agreementNo;
            this.ConsultMode = consultMode;
            this.Currency = currency;
            this.EffectiveEndDate = effectiveEndDate;
            this.EffectiveStartDate = effectiveStartDate;
            this.EnterpriseId = enterpriseId;
            this.ExpenseType = expenseType;
            this.InstitutionDesc = institutionDesc;
            this.InstitutionName = institutionName;
            this.InstitutionScopeInfo = institutionScopeInfo;
            this.IssueRuleInfoList = issueRuleInfoList;
            this.OuterSourceId = outerSourceId;
            this.OwnerIdList = ownerIdList;
            this.OwnerOpenIdList = ownerOpenIdList;
            this.OwnerType = ownerType;
            this.SceneType = sceneType;
            this.StandardInfoList = standardInfoList;
        }

        /// <summary>
        /// 企业共同账户id（该字段将废弃，不建议使用，可用enterprise_id字段替换）(该字段将废弃，不建议使用，可用enterprise_id字段替换)
        /// </summary>
        /// <value>企业共同账户id（该字段将废弃，不建议使用，可用enterprise_id字段替换）(该字段将废弃，不建议使用，可用enterprise_id字段替换)</value>
        [DataMember(Name = "account_id", EmitDefaultValue = false)]
        [Obsolete]
        public string AccountId { get; set; }

        /// <summary>
        /// 制度适配范围(请使用institution_scope_info中adapter_type)
        /// </summary>
        /// <value>制度适配范围(请使用institution_scope_info中adapter_type)</value>
        [DataMember(Name = "adapter_type", EmitDefaultValue = false)]
        [Obsolete]
        public string AdapterType { get; set; }

        /// <summary>
        /// 授权签约协议号（该字段将废弃，不建议使用，可用enterprise_id字段替换）(该字段将废弃，不建议使用，可用enterprise_id字段替换)
        /// </summary>
        /// <value>授权签约协议号（该字段将废弃，不建议使用，可用enterprise_id字段替换）(该字段将废弃，不建议使用，可用enterprise_id字段替换)</value>
        [DataMember(Name = "agreement_no", EmitDefaultValue = false)]
        [Obsolete]
        public string AgreementNo { get; set; }

        /// <summary>
        /// 费控咨询模式，默认为0。
        /// </summary>
        /// <value>费控咨询模式，默认为0。</value>
        [DataMember(Name = "consult_mode", EmitDefaultValue = false)]
        public string ConsultMode { get; set; }

        /// <summary>
        /// 该字段用于管控制度下发放的资产币种，不填写默认为人民币，设置该字段后，制度下手工发放的资产币种均为设置值。
        /// </summary>
        /// <value>该字段用于管控制度下发放的资产币种，不填写默认为人民币，设置该字段后，制度下手工发放的资产币种均为设置值。</value>
        [DataMember(Name = "currency", EmitDefaultValue = false)]
        public string Currency { get; set; }

        /// <summary>
        /// 制度生效结束时间
        /// </summary>
        /// <value>制度生效结束时间</value>
        [DataMember(Name = "effective_end_date", EmitDefaultValue = false)]
        public string EffectiveEndDate { get; set; }

        /// <summary>
        /// 制度生效起始时间
        /// </summary>
        /// <value>制度生效起始时间</value>
        [DataMember(Name = "effective_start_date", EmitDefaultValue = false)]
        public string EffectiveStartDate { get; set; }

        /// <summary>
        /// 企业id
        /// </summary>
        /// <value>企业id</value>
        [DataMember(Name = "enterprise_id", EmitDefaultValue = false)]
        public string EnterpriseId { get; set; }

        /// <summary>
        /// 费用类型
        /// </summary>
        /// <value>费用类型</value>
        [DataMember(Name = "expense_type", EmitDefaultValue = false)]
        public string ExpenseType { get; set; }

        /// <summary>
        /// 制度描述
        /// </summary>
        /// <value>制度描述</value>
        [DataMember(Name = "institution_desc", EmitDefaultValue = false)]
        public string InstitutionDesc { get; set; }

        /// <summary>
        /// 制度名称
        /// </summary>
        /// <value>制度名称</value>
        [DataMember(Name = "institution_name", EmitDefaultValue = false)]
        public string InstitutionName { get; set; }

        /// <summary>
        /// Gets or Sets InstitutionScopeInfo
        /// </summary>
        [DataMember(Name = "institution_scope_info", EmitDefaultValue = false)]
        public InstitutionScopeInfo InstitutionScopeInfo { get; set; }

        /// <summary>
        /// 发放规则列表
        /// </summary>
        /// <value>发放规则列表</value>
        [DataMember(Name = "issue_rule_info_list", EmitDefaultValue = false)]
        public List<IssueRuleInfo> IssueRuleInfoList { get; set; }

        /// <summary>
        /// 外部唯一标识，可用于防止重复创建
        /// </summary>
        /// <value>外部唯一标识，可用于防止重复创建</value>
        [DataMember(Name = "outer_source_id", EmitDefaultValue = false)]
        public string OuterSourceId { get; set; }

        /// <summary>
        /// 适配id列表(请使用institution_scope_info中owner_id_list)
        /// </summary>
        /// <value>适配id列表(请使用institution_scope_info中owner_id_list)</value>
        [DataMember(Name = "owner_id_list", EmitDefaultValue = false)]
        [Obsolete]
        public List<string> OwnerIdList { get; set; }

        /// <summary>
        /// 适配开放id列表(仅存量使用员工支付宝id配置适配范围的场景需要该字段，新对接方案不推荐使用员工支付宝id)
        /// </summary>
        /// <value>适配开放id列表(仅存量使用员工支付宝id配置适配范围的场景需要该字段，新对接方案不推荐使用员工支付宝id)</value>
        [DataMember(Name = "owner_open_id_list", EmitDefaultValue = false)]
        [Obsolete]
        public List<string> OwnerOpenIdList { get; set; }

        /// <summary>
        /// 适配id类型(请使用institution_scope_info中owner_type)
        /// </summary>
        /// <value>适配id类型(请使用institution_scope_info中owner_type)</value>
        [DataMember(Name = "owner_type", EmitDefaultValue = false)]
        [Obsolete]
        public string OwnerType { get; set; }

        /// <summary>
        /// 因公场景(该字段将废弃，不建议使用)
        /// </summary>
        /// <value>因公场景(该字段将废弃，不建议使用)</value>
        [DataMember(Name = "scene_type", EmitDefaultValue = false)]
        [Obsolete]
        public string SceneType { get; set; }

        /// <summary>
        /// 使用规则列表
        /// </summary>
        /// <value>使用规则列表</value>
        [DataMember(Name = "standard_info_list", EmitDefaultValue = false)]
        public List<StandardInfo> StandardInfoList { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class AlipayEbppInvoiceInstitutionCreateModel {\n");
            sb.Append("  AccountId: ").Append(AccountId).Append("\n");
            sb.Append("  AdapterType: ").Append(AdapterType).Append("\n");
            sb.Append("  AgreementNo: ").Append(AgreementNo).Append("\n");
            sb.Append("  ConsultMode: ").Append(ConsultMode).Append("\n");
            sb.Append("  Currency: ").Append(Currency).Append("\n");
            sb.Append("  EffectiveEndDate: ").Append(EffectiveEndDate).Append("\n");
            sb.Append("  EffectiveStartDate: ").Append(EffectiveStartDate).Append("\n");
            sb.Append("  EnterpriseId: ").Append(EnterpriseId).Append("\n");
            sb.Append("  ExpenseType: ").Append(ExpenseType).Append("\n");
            sb.Append("  InstitutionDesc: ").Append(InstitutionDesc).Append("\n");
            sb.Append("  InstitutionName: ").Append(InstitutionName).Append("\n");
            sb.Append("  InstitutionScopeInfo: ").Append(InstitutionScopeInfo).Append("\n");
            sb.Append("  IssueRuleInfoList: ").Append(IssueRuleInfoList).Append("\n");
            sb.Append("  OuterSourceId: ").Append(OuterSourceId).Append("\n");
            sb.Append("  OwnerIdList: ").Append(OwnerIdList).Append("\n");
            sb.Append("  OwnerOpenIdList: ").Append(OwnerOpenIdList).Append("\n");
            sb.Append("  OwnerType: ").Append(OwnerType).Append("\n");
            sb.Append("  SceneType: ").Append(SceneType).Append("\n");
            sb.Append("  StandardInfoList: ").Append(StandardInfoList).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as AlipayEbppInvoiceInstitutionCreateModel);
        }

        /// <summary>
        /// Returns true if AlipayEbppInvoiceInstitutionCreateModel instances are equal
        /// </summary>
        /// <param name="input">Instance of AlipayEbppInvoiceInstitutionCreateModel to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AlipayEbppInvoiceInstitutionCreateModel input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.AccountId == input.AccountId ||
                    (this.AccountId != null &&
                    this.AccountId.Equals(input.AccountId))
                ) && 
                (
                    this.AdapterType == input.AdapterType ||
                    (this.AdapterType != null &&
                    this.AdapterType.Equals(input.AdapterType))
                ) && 
                (
                    this.AgreementNo == input.AgreementNo ||
                    (this.AgreementNo != null &&
                    this.AgreementNo.Equals(input.AgreementNo))
                ) && 
                (
                    this.ConsultMode == input.ConsultMode ||
                    (this.ConsultMode != null &&
                    this.ConsultMode.Equals(input.ConsultMode))
                ) && 
                (
                    this.Currency == input.Currency ||
                    (this.Currency != null &&
                    this.Currency.Equals(input.Currency))
                ) && 
                (
                    this.EffectiveEndDate == input.EffectiveEndDate ||
                    (this.EffectiveEndDate != null &&
                    this.EffectiveEndDate.Equals(input.EffectiveEndDate))
                ) && 
                (
                    this.EffectiveStartDate == input.EffectiveStartDate ||
                    (this.EffectiveStartDate != null &&
                    this.EffectiveStartDate.Equals(input.EffectiveStartDate))
                ) && 
                (
                    this.EnterpriseId == input.EnterpriseId ||
                    (this.EnterpriseId != null &&
                    this.EnterpriseId.Equals(input.EnterpriseId))
                ) && 
                (
                    this.ExpenseType == input.ExpenseType ||
                    (this.ExpenseType != null &&
                    this.ExpenseType.Equals(input.ExpenseType))
                ) && 
                (
                    this.InstitutionDesc == input.InstitutionDesc ||
                    (this.InstitutionDesc != null &&
                    this.InstitutionDesc.Equals(input.InstitutionDesc))
                ) && 
                (
                    this.InstitutionName == input.InstitutionName ||
                    (this.InstitutionName != null &&
                    this.InstitutionName.Equals(input.InstitutionName))
                ) && 
                (
                    this.InstitutionScopeInfo == input.InstitutionScopeInfo ||
                    (this.InstitutionScopeInfo != null &&
                    this.InstitutionScopeInfo.Equals(input.InstitutionScopeInfo))
                ) && 
                (
                    this.IssueRuleInfoList == input.IssueRuleInfoList ||
                    this.IssueRuleInfoList != null &&
                    input.IssueRuleInfoList != null &&
                    this.IssueRuleInfoList.SequenceEqual(input.IssueRuleInfoList)
                ) && 
                (
                    this.OuterSourceId == input.OuterSourceId ||
                    (this.OuterSourceId != null &&
                    this.OuterSourceId.Equals(input.OuterSourceId))
                ) && 
                (
                    this.OwnerIdList == input.OwnerIdList ||
                    this.OwnerIdList != null &&
                    input.OwnerIdList != null &&
                    this.OwnerIdList.SequenceEqual(input.OwnerIdList)
                ) && 
                (
                    this.OwnerOpenIdList == input.OwnerOpenIdList ||
                    this.OwnerOpenIdList != null &&
                    input.OwnerOpenIdList != null &&
                    this.OwnerOpenIdList.SequenceEqual(input.OwnerOpenIdList)
                ) && 
                (
                    this.OwnerType == input.OwnerType ||
                    (this.OwnerType != null &&
                    this.OwnerType.Equals(input.OwnerType))
                ) && 
                (
                    this.SceneType == input.SceneType ||
                    (this.SceneType != null &&
                    this.SceneType.Equals(input.SceneType))
                ) && 
                (
                    this.StandardInfoList == input.StandardInfoList ||
                    this.StandardInfoList != null &&
                    input.StandardInfoList != null &&
                    this.StandardInfoList.SequenceEqual(input.StandardInfoList)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.AccountId != null)
                {
                    hashCode = (hashCode * 59) + this.AccountId.GetHashCode();
                }
                if (this.AdapterType != null)
                {
                    hashCode = (hashCode * 59) + this.AdapterType.GetHashCode();
                }
                if (this.AgreementNo != null)
                {
                    hashCode = (hashCode * 59) + this.AgreementNo.GetHashCode();
                }
                if (this.ConsultMode != null)
                {
                    hashCode = (hashCode * 59) + this.ConsultMode.GetHashCode();
                }
                if (this.Currency != null)
                {
                    hashCode = (hashCode * 59) + this.Currency.GetHashCode();
                }
                if (this.EffectiveEndDate != null)
                {
                    hashCode = (hashCode * 59) + this.EffectiveEndDate.GetHashCode();
                }
                if (this.EffectiveStartDate != null)
                {
                    hashCode = (hashCode * 59) + this.EffectiveStartDate.GetHashCode();
                }
                if (this.EnterpriseId != null)
                {
                    hashCode = (hashCode * 59) + this.EnterpriseId.GetHashCode();
                }
                if (this.ExpenseType != null)
                {
                    hashCode = (hashCode * 59) + this.ExpenseType.GetHashCode();
                }
                if (this.InstitutionDesc != null)
                {
                    hashCode = (hashCode * 59) + this.InstitutionDesc.GetHashCode();
                }
                if (this.InstitutionName != null)
                {
                    hashCode = (hashCode * 59) + this.InstitutionName.GetHashCode();
                }
                if (this.InstitutionScopeInfo != null)
                {
                    hashCode = (hashCode * 59) + this.InstitutionScopeInfo.GetHashCode();
                }
                if (this.IssueRuleInfoList != null)
                {
                    hashCode = (hashCode * 59) + this.IssueRuleInfoList.GetHashCode();
                }
                if (this.OuterSourceId != null)
                {
                    hashCode = (hashCode * 59) + this.OuterSourceId.GetHashCode();
                }
                if (this.OwnerIdList != null)
                {
                    hashCode = (hashCode * 59) + this.OwnerIdList.GetHashCode();
                }
                if (this.OwnerOpenIdList != null)
                {
                    hashCode = (hashCode * 59) + this.OwnerOpenIdList.GetHashCode();
                }
                if (this.OwnerType != null)
                {
                    hashCode = (hashCode * 59) + this.OwnerType.GetHashCode();
                }
                if (this.SceneType != null)
                {
                    hashCode = (hashCode * 59) + this.SceneType.GetHashCode();
                }
                if (this.StandardInfoList != null)
                {
                    hashCode = (hashCode * 59) + this.StandardInfoList.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
