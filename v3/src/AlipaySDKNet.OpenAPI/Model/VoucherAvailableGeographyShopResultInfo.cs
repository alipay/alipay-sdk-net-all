/*
 * 支付宝开放平台API
 *
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2025-02-19
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = AlipaySDKNet.OpenAPI.Client.OpenAPIDateConverter;

namespace AlipaySDKNet.OpenAPI.Model
{
    /// <summary>
    /// VoucherAvailableGeographyShopResultInfo
    /// </summary>
    [DataContract(Name = "VoucherAvailableGeographyShopResultInfo")]
    public partial class VoucherAvailableGeographyShopResultInfo : IEquatable<VoucherAvailableGeographyShopResultInfo>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="VoucherAvailableGeographyShopResultInfo" /> class.
        /// </summary>
        /// <param name="availableGeographyAllShopResultInfo">availableGeographyAllShopResultInfo.</param>
        /// <param name="failAvailableRealShopInfos">失败的物理门店详情。.</param>
        /// <param name="failAvailableShopInfos">失败的可用门店。.</param>
        /// <param name="successAvailableRealShopIds">代运营商业关系门店列表，列表中的门店id是调用接口alipay.business.relation.shop.create创建门店返回的real_shop_id  接口参数是列表类型。.</param>
        /// <param name="successAvailableShopIds">券可使用的门店列表。列表中的门店id是通过调用接口ant.merchant.expand.shop.create创建门店返回的支付宝门店id  接口参数是列表类型。.</param>
        public VoucherAvailableGeographyShopResultInfo(VoucherAvailableGeographyAllShopResultInfo availableGeographyAllShopResultInfo = default(VoucherAvailableGeographyAllShopResultInfo), List<VoucherFailShopInfo> failAvailableRealShopInfos = default(List<VoucherFailShopInfo>), List<VoucherFailShopInfo> failAvailableShopInfos = default(List<VoucherFailShopInfo>), List<string> successAvailableRealShopIds = default(List<string>), List<string> successAvailableShopIds = default(List<string>))
        {
            this.AvailableGeographyAllShopResultInfo = availableGeographyAllShopResultInfo;
            this.FailAvailableRealShopInfos = failAvailableRealShopInfos;
            this.FailAvailableShopInfos = failAvailableShopInfos;
            this.SuccessAvailableRealShopIds = successAvailableRealShopIds;
            this.SuccessAvailableShopIds = successAvailableShopIds;
        }

        /// <summary>
        /// Gets or Sets AvailableGeographyAllShopResultInfo
        /// </summary>
        [DataMember(Name = "available_geography_all_shop_result_info", EmitDefaultValue = false)]
        public VoucherAvailableGeographyAllShopResultInfo AvailableGeographyAllShopResultInfo { get; set; }

        /// <summary>
        /// 失败的物理门店详情。
        /// </summary>
        /// <value>失败的物理门店详情。</value>
        [DataMember(Name = "fail_available_real_shop_infos", EmitDefaultValue = false)]
        public List<VoucherFailShopInfo> FailAvailableRealShopInfos { get; set; }

        /// <summary>
        /// 失败的可用门店。
        /// </summary>
        /// <value>失败的可用门店。</value>
        [DataMember(Name = "fail_available_shop_infos", EmitDefaultValue = false)]
        public List<VoucherFailShopInfo> FailAvailableShopInfos { get; set; }

        /// <summary>
        /// 代运营商业关系门店列表，列表中的门店id是调用接口alipay.business.relation.shop.create创建门店返回的real_shop_id  接口参数是列表类型。
        /// </summary>
        /// <value>代运营商业关系门店列表，列表中的门店id是调用接口alipay.business.relation.shop.create创建门店返回的real_shop_id  接口参数是列表类型。</value>
        [DataMember(Name = "success_available_real_shop_ids", EmitDefaultValue = false)]
        public List<string> SuccessAvailableRealShopIds { get; set; }

        /// <summary>
        /// 券可使用的门店列表。列表中的门店id是通过调用接口ant.merchant.expand.shop.create创建门店返回的支付宝门店id  接口参数是列表类型。
        /// </summary>
        /// <value>券可使用的门店列表。列表中的门店id是通过调用接口ant.merchant.expand.shop.create创建门店返回的支付宝门店id  接口参数是列表类型。</value>
        [DataMember(Name = "success_available_shop_ids", EmitDefaultValue = false)]
        public List<string> SuccessAvailableShopIds { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class VoucherAvailableGeographyShopResultInfo {\n");
            sb.Append("  AvailableGeographyAllShopResultInfo: ").Append(AvailableGeographyAllShopResultInfo).Append("\n");
            sb.Append("  FailAvailableRealShopInfos: ").Append(FailAvailableRealShopInfos).Append("\n");
            sb.Append("  FailAvailableShopInfos: ").Append(FailAvailableShopInfos).Append("\n");
            sb.Append("  SuccessAvailableRealShopIds: ").Append(SuccessAvailableRealShopIds).Append("\n");
            sb.Append("  SuccessAvailableShopIds: ").Append(SuccessAvailableShopIds).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as VoucherAvailableGeographyShopResultInfo);
        }

        /// <summary>
        /// Returns true if VoucherAvailableGeographyShopResultInfo instances are equal
        /// </summary>
        /// <param name="input">Instance of VoucherAvailableGeographyShopResultInfo to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(VoucherAvailableGeographyShopResultInfo input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.AvailableGeographyAllShopResultInfo == input.AvailableGeographyAllShopResultInfo ||
                    (this.AvailableGeographyAllShopResultInfo != null &&
                    this.AvailableGeographyAllShopResultInfo.Equals(input.AvailableGeographyAllShopResultInfo))
                ) && 
                (
                    this.FailAvailableRealShopInfos == input.FailAvailableRealShopInfos ||
                    this.FailAvailableRealShopInfos != null &&
                    input.FailAvailableRealShopInfos != null &&
                    this.FailAvailableRealShopInfos.SequenceEqual(input.FailAvailableRealShopInfos)
                ) && 
                (
                    this.FailAvailableShopInfos == input.FailAvailableShopInfos ||
                    this.FailAvailableShopInfos != null &&
                    input.FailAvailableShopInfos != null &&
                    this.FailAvailableShopInfos.SequenceEqual(input.FailAvailableShopInfos)
                ) && 
                (
                    this.SuccessAvailableRealShopIds == input.SuccessAvailableRealShopIds ||
                    this.SuccessAvailableRealShopIds != null &&
                    input.SuccessAvailableRealShopIds != null &&
                    this.SuccessAvailableRealShopIds.SequenceEqual(input.SuccessAvailableRealShopIds)
                ) && 
                (
                    this.SuccessAvailableShopIds == input.SuccessAvailableShopIds ||
                    this.SuccessAvailableShopIds != null &&
                    input.SuccessAvailableShopIds != null &&
                    this.SuccessAvailableShopIds.SequenceEqual(input.SuccessAvailableShopIds)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.AvailableGeographyAllShopResultInfo != null)
                {
                    hashCode = (hashCode * 59) + this.AvailableGeographyAllShopResultInfo.GetHashCode();
                }
                if (this.FailAvailableRealShopInfos != null)
                {
                    hashCode = (hashCode * 59) + this.FailAvailableRealShopInfos.GetHashCode();
                }
                if (this.FailAvailableShopInfos != null)
                {
                    hashCode = (hashCode * 59) + this.FailAvailableShopInfos.GetHashCode();
                }
                if (this.SuccessAvailableRealShopIds != null)
                {
                    hashCode = (hashCode * 59) + this.SuccessAvailableRealShopIds.GetHashCode();
                }
                if (this.SuccessAvailableShopIds != null)
                {
                    hashCode = (hashCode * 59) + this.SuccessAvailableShopIds.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
