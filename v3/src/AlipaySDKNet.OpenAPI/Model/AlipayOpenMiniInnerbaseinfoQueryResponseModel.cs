/*
 * 支付宝开放平台API
 *
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2025-02-19
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = AlipaySDKNet.OpenAPI.Client.OpenAPIDateConverter;

namespace AlipaySDKNet.OpenAPI.Model
{
    /// <summary>
    /// AlipayOpenMiniInnerbaseinfoQueryResponseModel
    /// </summary>
    [DataContract(Name = "AlipayOpenMiniInnerbaseinfoQueryResponseModel")]
    public partial class AlipayOpenMiniInnerbaseinfoQueryResponseModel : IEquatable<AlipayOpenMiniInnerbaseinfoQueryResponseModel>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AlipayOpenMiniInnerbaseinfoQueryResponseModel" /> class.
        /// </summary>
        /// <param name="appAliasName">小程序别名，简称.</param>
        /// <param name="appCategoryIds">类目Id列表.</param>
        /// <param name="appDesc">小程序应用描述.</param>
        /// <param name="appEnglishName">小程序英文名称.</param>
        /// <param name="appKey">手淘开放平台鉴权key，支付宝不需要.</param>
        /// <param name="appLogo">小程序应用logo图标.</param>
        /// <param name="appName">小程序名称.</param>
        /// <param name="appSlogan">小程序简介.</param>
        /// <param name="appSubType">小程序类型，TINYAPP_TEMPLATE，TINYAPP_NORMAL，TINYAPP_PLUGIN.</param>
        /// <param name="devId">小程序所属主体信息.</param>
        /// <param name="gmtCreate">小程序主体创建时间.</param>
        /// <param name="gmtModified">小程序主体更新时间.</param>
        /// <param name="miniAppId">小程序Id.</param>
        /// <param name="miniCategoryIds">新小程序前台类目，一级与二级、三级用下划线隔开，最多可以选四个类目，类目之间;隔开。使用后不再读取app_category_ids值，老前台类目将废弃.</param>
        /// <param name="origin">应用创建来源，alipay &#x3D; 支付宝，taobao &#x3D; 淘宝.</param>
        /// <param name="ownerEntity">小程序主体信息.</param>
        /// <param name="ownerPortrait">小程序主体头像信息.</param>
        /// <param name="pluginRefreshType">AUTO/自动更新、MANUAL/手动更新.</param>
        /// <param name="serviceEmail">小程序客服邮箱.</param>
        /// <param name="servicePhone">小程序客服电话.</param>
        public AlipayOpenMiniInnerbaseinfoQueryResponseModel(string appAliasName = default(string), string appCategoryIds = default(string), string appDesc = default(string), string appEnglishName = default(string), string appKey = default(string), string appLogo = default(string), string appName = default(string), string appSlogan = default(string), string appSubType = default(string), string devId = default(string), string gmtCreate = default(string), string gmtModified = default(string), string miniAppId = default(string), string miniCategoryIds = default(string), string origin = default(string), string ownerEntity = default(string), string ownerPortrait = default(string), string pluginRefreshType = default(string), string serviceEmail = default(string), string servicePhone = default(string))
        {
            this.AppAliasName = appAliasName;
            this.AppCategoryIds = appCategoryIds;
            this.AppDesc = appDesc;
            this.AppEnglishName = appEnglishName;
            this.AppKey = appKey;
            this.AppLogo = appLogo;
            this.AppName = appName;
            this.AppSlogan = appSlogan;
            this.AppSubType = appSubType;
            this.DevId = devId;
            this.GmtCreate = gmtCreate;
            this.GmtModified = gmtModified;
            this.MiniAppId = miniAppId;
            this.MiniCategoryIds = miniCategoryIds;
            this.Origin = origin;
            this.OwnerEntity = ownerEntity;
            this.OwnerPortrait = ownerPortrait;
            this.PluginRefreshType = pluginRefreshType;
            this.ServiceEmail = serviceEmail;
            this.ServicePhone = servicePhone;
        }

        /// <summary>
        /// 小程序别名，简称
        /// </summary>
        /// <value>小程序别名，简称</value>
        [DataMember(Name = "app_alias_name", EmitDefaultValue = false)]
        public string AppAliasName { get; set; }

        /// <summary>
        /// 类目Id列表
        /// </summary>
        /// <value>类目Id列表</value>
        [DataMember(Name = "app_category_ids", EmitDefaultValue = false)]
        public string AppCategoryIds { get; set; }

        /// <summary>
        /// 小程序应用描述
        /// </summary>
        /// <value>小程序应用描述</value>
        [DataMember(Name = "app_desc", EmitDefaultValue = false)]
        public string AppDesc { get; set; }

        /// <summary>
        /// 小程序英文名称
        /// </summary>
        /// <value>小程序英文名称</value>
        [DataMember(Name = "app_english_name", EmitDefaultValue = false)]
        public string AppEnglishName { get; set; }

        /// <summary>
        /// 手淘开放平台鉴权key，支付宝不需要
        /// </summary>
        /// <value>手淘开放平台鉴权key，支付宝不需要</value>
        [DataMember(Name = "app_key", EmitDefaultValue = false)]
        public string AppKey { get; set; }

        /// <summary>
        /// 小程序应用logo图标
        /// </summary>
        /// <value>小程序应用logo图标</value>
        [DataMember(Name = "app_logo", EmitDefaultValue = false)]
        public string AppLogo { get; set; }

        /// <summary>
        /// 小程序名称
        /// </summary>
        /// <value>小程序名称</value>
        [DataMember(Name = "app_name", EmitDefaultValue = false)]
        public string AppName { get; set; }

        /// <summary>
        /// 小程序简介
        /// </summary>
        /// <value>小程序简介</value>
        [DataMember(Name = "app_slogan", EmitDefaultValue = false)]
        public string AppSlogan { get; set; }

        /// <summary>
        /// 小程序类型，TINYAPP_TEMPLATE，TINYAPP_NORMAL，TINYAPP_PLUGIN
        /// </summary>
        /// <value>小程序类型，TINYAPP_TEMPLATE，TINYAPP_NORMAL，TINYAPP_PLUGIN</value>
        [DataMember(Name = "app_sub_type", EmitDefaultValue = false)]
        public string AppSubType { get; set; }

        /// <summary>
        /// 小程序所属主体信息
        /// </summary>
        /// <value>小程序所属主体信息</value>
        [DataMember(Name = "dev_id", EmitDefaultValue = false)]
        public string DevId { get; set; }

        /// <summary>
        /// 小程序主体创建时间
        /// </summary>
        /// <value>小程序主体创建时间</value>
        [DataMember(Name = "gmt_create", EmitDefaultValue = false)]
        public string GmtCreate { get; set; }

        /// <summary>
        /// 小程序主体更新时间
        /// </summary>
        /// <value>小程序主体更新时间</value>
        [DataMember(Name = "gmt_modified", EmitDefaultValue = false)]
        public string GmtModified { get; set; }

        /// <summary>
        /// 小程序Id
        /// </summary>
        /// <value>小程序Id</value>
        [DataMember(Name = "mini_app_id", EmitDefaultValue = false)]
        public string MiniAppId { get; set; }

        /// <summary>
        /// 新小程序前台类目，一级与二级、三级用下划线隔开，最多可以选四个类目，类目之间;隔开。使用后不再读取app_category_ids值，老前台类目将废弃
        /// </summary>
        /// <value>新小程序前台类目，一级与二级、三级用下划线隔开，最多可以选四个类目，类目之间;隔开。使用后不再读取app_category_ids值，老前台类目将废弃</value>
        [DataMember(Name = "mini_category_ids", EmitDefaultValue = false)]
        public string MiniCategoryIds { get; set; }

        /// <summary>
        /// 应用创建来源，alipay &#x3D; 支付宝，taobao &#x3D; 淘宝
        /// </summary>
        /// <value>应用创建来源，alipay &#x3D; 支付宝，taobao &#x3D; 淘宝</value>
        [DataMember(Name = "origin", EmitDefaultValue = false)]
        public string Origin { get; set; }

        /// <summary>
        /// 小程序主体信息
        /// </summary>
        /// <value>小程序主体信息</value>
        [DataMember(Name = "owner_entity", EmitDefaultValue = false)]
        public string OwnerEntity { get; set; }

        /// <summary>
        /// 小程序主体头像信息
        /// </summary>
        /// <value>小程序主体头像信息</value>
        [DataMember(Name = "owner_portrait", EmitDefaultValue = false)]
        public string OwnerPortrait { get; set; }

        /// <summary>
        /// AUTO/自动更新、MANUAL/手动更新
        /// </summary>
        /// <value>AUTO/自动更新、MANUAL/手动更新</value>
        [DataMember(Name = "plugin_refresh_type", EmitDefaultValue = false)]
        public string PluginRefreshType { get; set; }

        /// <summary>
        /// 小程序客服邮箱
        /// </summary>
        /// <value>小程序客服邮箱</value>
        [DataMember(Name = "service_email", EmitDefaultValue = false)]
        public string ServiceEmail { get; set; }

        /// <summary>
        /// 小程序客服电话
        /// </summary>
        /// <value>小程序客服电话</value>
        [DataMember(Name = "service_phone", EmitDefaultValue = false)]
        public string ServicePhone { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class AlipayOpenMiniInnerbaseinfoQueryResponseModel {\n");
            sb.Append("  AppAliasName: ").Append(AppAliasName).Append("\n");
            sb.Append("  AppCategoryIds: ").Append(AppCategoryIds).Append("\n");
            sb.Append("  AppDesc: ").Append(AppDesc).Append("\n");
            sb.Append("  AppEnglishName: ").Append(AppEnglishName).Append("\n");
            sb.Append("  AppKey: ").Append(AppKey).Append("\n");
            sb.Append("  AppLogo: ").Append(AppLogo).Append("\n");
            sb.Append("  AppName: ").Append(AppName).Append("\n");
            sb.Append("  AppSlogan: ").Append(AppSlogan).Append("\n");
            sb.Append("  AppSubType: ").Append(AppSubType).Append("\n");
            sb.Append("  DevId: ").Append(DevId).Append("\n");
            sb.Append("  GmtCreate: ").Append(GmtCreate).Append("\n");
            sb.Append("  GmtModified: ").Append(GmtModified).Append("\n");
            sb.Append("  MiniAppId: ").Append(MiniAppId).Append("\n");
            sb.Append("  MiniCategoryIds: ").Append(MiniCategoryIds).Append("\n");
            sb.Append("  Origin: ").Append(Origin).Append("\n");
            sb.Append("  OwnerEntity: ").Append(OwnerEntity).Append("\n");
            sb.Append("  OwnerPortrait: ").Append(OwnerPortrait).Append("\n");
            sb.Append("  PluginRefreshType: ").Append(PluginRefreshType).Append("\n");
            sb.Append("  ServiceEmail: ").Append(ServiceEmail).Append("\n");
            sb.Append("  ServicePhone: ").Append(ServicePhone).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as AlipayOpenMiniInnerbaseinfoQueryResponseModel);
        }

        /// <summary>
        /// Returns true if AlipayOpenMiniInnerbaseinfoQueryResponseModel instances are equal
        /// </summary>
        /// <param name="input">Instance of AlipayOpenMiniInnerbaseinfoQueryResponseModel to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AlipayOpenMiniInnerbaseinfoQueryResponseModel input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.AppAliasName == input.AppAliasName ||
                    (this.AppAliasName != null &&
                    this.AppAliasName.Equals(input.AppAliasName))
                ) && 
                (
                    this.AppCategoryIds == input.AppCategoryIds ||
                    (this.AppCategoryIds != null &&
                    this.AppCategoryIds.Equals(input.AppCategoryIds))
                ) && 
                (
                    this.AppDesc == input.AppDesc ||
                    (this.AppDesc != null &&
                    this.AppDesc.Equals(input.AppDesc))
                ) && 
                (
                    this.AppEnglishName == input.AppEnglishName ||
                    (this.AppEnglishName != null &&
                    this.AppEnglishName.Equals(input.AppEnglishName))
                ) && 
                (
                    this.AppKey == input.AppKey ||
                    (this.AppKey != null &&
                    this.AppKey.Equals(input.AppKey))
                ) && 
                (
                    this.AppLogo == input.AppLogo ||
                    (this.AppLogo != null &&
                    this.AppLogo.Equals(input.AppLogo))
                ) && 
                (
                    this.AppName == input.AppName ||
                    (this.AppName != null &&
                    this.AppName.Equals(input.AppName))
                ) && 
                (
                    this.AppSlogan == input.AppSlogan ||
                    (this.AppSlogan != null &&
                    this.AppSlogan.Equals(input.AppSlogan))
                ) && 
                (
                    this.AppSubType == input.AppSubType ||
                    (this.AppSubType != null &&
                    this.AppSubType.Equals(input.AppSubType))
                ) && 
                (
                    this.DevId == input.DevId ||
                    (this.DevId != null &&
                    this.DevId.Equals(input.DevId))
                ) && 
                (
                    this.GmtCreate == input.GmtCreate ||
                    (this.GmtCreate != null &&
                    this.GmtCreate.Equals(input.GmtCreate))
                ) && 
                (
                    this.GmtModified == input.GmtModified ||
                    (this.GmtModified != null &&
                    this.GmtModified.Equals(input.GmtModified))
                ) && 
                (
                    this.MiniAppId == input.MiniAppId ||
                    (this.MiniAppId != null &&
                    this.MiniAppId.Equals(input.MiniAppId))
                ) && 
                (
                    this.MiniCategoryIds == input.MiniCategoryIds ||
                    (this.MiniCategoryIds != null &&
                    this.MiniCategoryIds.Equals(input.MiniCategoryIds))
                ) && 
                (
                    this.Origin == input.Origin ||
                    (this.Origin != null &&
                    this.Origin.Equals(input.Origin))
                ) && 
                (
                    this.OwnerEntity == input.OwnerEntity ||
                    (this.OwnerEntity != null &&
                    this.OwnerEntity.Equals(input.OwnerEntity))
                ) && 
                (
                    this.OwnerPortrait == input.OwnerPortrait ||
                    (this.OwnerPortrait != null &&
                    this.OwnerPortrait.Equals(input.OwnerPortrait))
                ) && 
                (
                    this.PluginRefreshType == input.PluginRefreshType ||
                    (this.PluginRefreshType != null &&
                    this.PluginRefreshType.Equals(input.PluginRefreshType))
                ) && 
                (
                    this.ServiceEmail == input.ServiceEmail ||
                    (this.ServiceEmail != null &&
                    this.ServiceEmail.Equals(input.ServiceEmail))
                ) && 
                (
                    this.ServicePhone == input.ServicePhone ||
                    (this.ServicePhone != null &&
                    this.ServicePhone.Equals(input.ServicePhone))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.AppAliasName != null)
                {
                    hashCode = (hashCode * 59) + this.AppAliasName.GetHashCode();
                }
                if (this.AppCategoryIds != null)
                {
                    hashCode = (hashCode * 59) + this.AppCategoryIds.GetHashCode();
                }
                if (this.AppDesc != null)
                {
                    hashCode = (hashCode * 59) + this.AppDesc.GetHashCode();
                }
                if (this.AppEnglishName != null)
                {
                    hashCode = (hashCode * 59) + this.AppEnglishName.GetHashCode();
                }
                if (this.AppKey != null)
                {
                    hashCode = (hashCode * 59) + this.AppKey.GetHashCode();
                }
                if (this.AppLogo != null)
                {
                    hashCode = (hashCode * 59) + this.AppLogo.GetHashCode();
                }
                if (this.AppName != null)
                {
                    hashCode = (hashCode * 59) + this.AppName.GetHashCode();
                }
                if (this.AppSlogan != null)
                {
                    hashCode = (hashCode * 59) + this.AppSlogan.GetHashCode();
                }
                if (this.AppSubType != null)
                {
                    hashCode = (hashCode * 59) + this.AppSubType.GetHashCode();
                }
                if (this.DevId != null)
                {
                    hashCode = (hashCode * 59) + this.DevId.GetHashCode();
                }
                if (this.GmtCreate != null)
                {
                    hashCode = (hashCode * 59) + this.GmtCreate.GetHashCode();
                }
                if (this.GmtModified != null)
                {
                    hashCode = (hashCode * 59) + this.GmtModified.GetHashCode();
                }
                if (this.MiniAppId != null)
                {
                    hashCode = (hashCode * 59) + this.MiniAppId.GetHashCode();
                }
                if (this.MiniCategoryIds != null)
                {
                    hashCode = (hashCode * 59) + this.MiniCategoryIds.GetHashCode();
                }
                if (this.Origin != null)
                {
                    hashCode = (hashCode * 59) + this.Origin.GetHashCode();
                }
                if (this.OwnerEntity != null)
                {
                    hashCode = (hashCode * 59) + this.OwnerEntity.GetHashCode();
                }
                if (this.OwnerPortrait != null)
                {
                    hashCode = (hashCode * 59) + this.OwnerPortrait.GetHashCode();
                }
                if (this.PluginRefreshType != null)
                {
                    hashCode = (hashCode * 59) + this.PluginRefreshType.GetHashCode();
                }
                if (this.ServiceEmail != null)
                {
                    hashCode = (hashCode * 59) + this.ServiceEmail.GetHashCode();
                }
                if (this.ServicePhone != null)
                {
                    hashCode = (hashCode * 59) + this.ServicePhone.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
