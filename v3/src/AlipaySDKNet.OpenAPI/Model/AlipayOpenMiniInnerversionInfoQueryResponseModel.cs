/*
 * 支付宝开放平台API
 *
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2025-02-19
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = AlipaySDKNet.OpenAPI.Client.OpenAPIDateConverter;

namespace AlipaySDKNet.OpenAPI.Model
{
    /// <summary>
    /// AlipayOpenMiniInnerversionInfoQueryResponseModel
    /// </summary>
    [DataContract(Name = "AlipayOpenMiniInnerversionInfoQueryResponseModel")]
    public partial class AlipayOpenMiniInnerversionInfoQueryResponseModel : IEquatable<AlipayOpenMiniInnerversionInfoQueryResponseModel>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AlipayOpenMiniInnerversionInfoQueryResponseModel" /> class.
        /// </summary>
        /// <param name="appVersion">版本号.</param>
        /// <param name="buildSource">版本构建类型.</param>
        /// <param name="bundleId">端信息.</param>
        /// <param name="createTime">版本创建时间.</param>
        /// <param name="description">版本描述.</param>
        /// <param name="extJson">实例化模板参数.</param>
        /// <param name="gmtModified">版本更新时间.</param>
        /// <param name="grayStartTime">版本灰度时间.</param>
        /// <param name="grayStrategy">小程序灰度比例值.</param>
        /// <param name="miniAppId">小程序ID.</param>
        /// <param name="offlineTime">版本下架时间.</param>
        /// <param name="packageUrl">包地址.</param>
        /// <param name="pluginRefs">引用插件信息.</param>
        /// <param name="processTaskId">流程id.</param>
        /// <param name="rejectReason">审核失败原因.</param>
        /// <param name="rollbackTime">版本回滚时间.</param>
        /// <param name="scanResult">安全扫描结果.</param>
        /// <param name="screenShotList">小程序版本截图，多个截图以逗号隔开.</param>
        /// <param name="shelfTime">版本上架时间.</param>
        /// <param name="sourceUrl">源码包地址.</param>
        /// <param name="status">版本状态.</param>
        /// <param name="templateExtra">模板构建参数.</param>
        /// <param name="templateVersion">模板版本号.</param>
        public AlipayOpenMiniInnerversionInfoQueryResponseModel(string appVersion = default(string), string buildSource = default(string), string bundleId = default(string), string createTime = default(string), string description = default(string), string extJson = default(string), string gmtModified = default(string), string grayStartTime = default(string), string grayStrategy = default(string), string miniAppId = default(string), string offlineTime = default(string), string packageUrl = default(string), List<MiniAppPluginInfo> pluginRefs = default(List<MiniAppPluginInfo>), string processTaskId = default(string), string rejectReason = default(string), string rollbackTime = default(string), string scanResult = default(string), string screenShotList = default(string), string shelfTime = default(string), string sourceUrl = default(string), string status = default(string), string templateExtra = default(string), string templateVersion = default(string))
        {
            this.AppVersion = appVersion;
            this.BuildSource = buildSource;
            this.BundleId = bundleId;
            this.CreateTime = createTime;
            this.Description = description;
            this.ExtJson = extJson;
            this.GmtModified = gmtModified;
            this.GrayStartTime = grayStartTime;
            this.GrayStrategy = grayStrategy;
            this.MiniAppId = miniAppId;
            this.OfflineTime = offlineTime;
            this.PackageUrl = packageUrl;
            this.PluginRefs = pluginRefs;
            this.ProcessTaskId = processTaskId;
            this.RejectReason = rejectReason;
            this.RollbackTime = rollbackTime;
            this.ScanResult = scanResult;
            this.ScreenShotList = screenShotList;
            this.ShelfTime = shelfTime;
            this.SourceUrl = sourceUrl;
            this.Status = status;
            this.TemplateExtra = templateExtra;
            this.TemplateVersion = templateVersion;
        }

        /// <summary>
        /// 版本号
        /// </summary>
        /// <value>版本号</value>
        [DataMember(Name = "app_version", EmitDefaultValue = false)]
        public string AppVersion { get; set; }

        /// <summary>
        /// 版本构建类型
        /// </summary>
        /// <value>版本构建类型</value>
        [DataMember(Name = "build_source", EmitDefaultValue = false)]
        public string BuildSource { get; set; }

        /// <summary>
        /// 端信息
        /// </summary>
        /// <value>端信息</value>
        [DataMember(Name = "bundle_id", EmitDefaultValue = false)]
        public string BundleId { get; set; }

        /// <summary>
        /// 版本创建时间
        /// </summary>
        /// <value>版本创建时间</value>
        [DataMember(Name = "create_time", EmitDefaultValue = false)]
        public string CreateTime { get; set; }

        /// <summary>
        /// 版本描述
        /// </summary>
        /// <value>版本描述</value>
        [DataMember(Name = "description", EmitDefaultValue = false)]
        public string Description { get; set; }

        /// <summary>
        /// 实例化模板参数
        /// </summary>
        /// <value>实例化模板参数</value>
        [DataMember(Name = "ext_json", EmitDefaultValue = false)]
        public string ExtJson { get; set; }

        /// <summary>
        /// 版本更新时间
        /// </summary>
        /// <value>版本更新时间</value>
        [DataMember(Name = "gmt_modified", EmitDefaultValue = false)]
        public string GmtModified { get; set; }

        /// <summary>
        /// 版本灰度时间
        /// </summary>
        /// <value>版本灰度时间</value>
        [DataMember(Name = "gray_start_time", EmitDefaultValue = false)]
        public string GrayStartTime { get; set; }

        /// <summary>
        /// 小程序灰度比例值
        /// </summary>
        /// <value>小程序灰度比例值</value>
        [DataMember(Name = "gray_strategy", EmitDefaultValue = false)]
        public string GrayStrategy { get; set; }

        /// <summary>
        /// 小程序ID
        /// </summary>
        /// <value>小程序ID</value>
        [DataMember(Name = "mini_app_id", EmitDefaultValue = false)]
        public string MiniAppId { get; set; }

        /// <summary>
        /// 版本下架时间
        /// </summary>
        /// <value>版本下架时间</value>
        [DataMember(Name = "offline_time", EmitDefaultValue = false)]
        public string OfflineTime { get; set; }

        /// <summary>
        /// 包地址
        /// </summary>
        /// <value>包地址</value>
        [DataMember(Name = "package_url", EmitDefaultValue = false)]
        public string PackageUrl { get; set; }

        /// <summary>
        /// 引用插件信息
        /// </summary>
        /// <value>引用插件信息</value>
        [DataMember(Name = "plugin_refs", EmitDefaultValue = false)]
        public List<MiniAppPluginInfo> PluginRefs { get; set; }

        /// <summary>
        /// 流程id
        /// </summary>
        /// <value>流程id</value>
        [DataMember(Name = "process_task_id", EmitDefaultValue = false)]
        public string ProcessTaskId { get; set; }

        /// <summary>
        /// 审核失败原因
        /// </summary>
        /// <value>审核失败原因</value>
        [DataMember(Name = "reject_reason", EmitDefaultValue = false)]
        public string RejectReason { get; set; }

        /// <summary>
        /// 版本回滚时间
        /// </summary>
        /// <value>版本回滚时间</value>
        [DataMember(Name = "rollback_time", EmitDefaultValue = false)]
        public string RollbackTime { get; set; }

        /// <summary>
        /// 安全扫描结果
        /// </summary>
        /// <value>安全扫描结果</value>
        [DataMember(Name = "scan_result", EmitDefaultValue = false)]
        public string ScanResult { get; set; }

        /// <summary>
        /// 小程序版本截图，多个截图以逗号隔开
        /// </summary>
        /// <value>小程序版本截图，多个截图以逗号隔开</value>
        [DataMember(Name = "screen_shot_list", EmitDefaultValue = false)]
        public string ScreenShotList { get; set; }

        /// <summary>
        /// 版本上架时间
        /// </summary>
        /// <value>版本上架时间</value>
        [DataMember(Name = "shelf_time", EmitDefaultValue = false)]
        public string ShelfTime { get; set; }

        /// <summary>
        /// 源码包地址
        /// </summary>
        /// <value>源码包地址</value>
        [DataMember(Name = "source_url", EmitDefaultValue = false)]
        public string SourceUrl { get; set; }

        /// <summary>
        /// 版本状态
        /// </summary>
        /// <value>版本状态</value>
        [DataMember(Name = "status", EmitDefaultValue = false)]
        public string Status { get; set; }

        /// <summary>
        /// 模板构建参数
        /// </summary>
        /// <value>模板构建参数</value>
        [DataMember(Name = "template_extra", EmitDefaultValue = false)]
        public string TemplateExtra { get; set; }

        /// <summary>
        /// 模板版本号
        /// </summary>
        /// <value>模板版本号</value>
        [DataMember(Name = "template_version", EmitDefaultValue = false)]
        public string TemplateVersion { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class AlipayOpenMiniInnerversionInfoQueryResponseModel {\n");
            sb.Append("  AppVersion: ").Append(AppVersion).Append("\n");
            sb.Append("  BuildSource: ").Append(BuildSource).Append("\n");
            sb.Append("  BundleId: ").Append(BundleId).Append("\n");
            sb.Append("  CreateTime: ").Append(CreateTime).Append("\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  ExtJson: ").Append(ExtJson).Append("\n");
            sb.Append("  GmtModified: ").Append(GmtModified).Append("\n");
            sb.Append("  GrayStartTime: ").Append(GrayStartTime).Append("\n");
            sb.Append("  GrayStrategy: ").Append(GrayStrategy).Append("\n");
            sb.Append("  MiniAppId: ").Append(MiniAppId).Append("\n");
            sb.Append("  OfflineTime: ").Append(OfflineTime).Append("\n");
            sb.Append("  PackageUrl: ").Append(PackageUrl).Append("\n");
            sb.Append("  PluginRefs: ").Append(PluginRefs).Append("\n");
            sb.Append("  ProcessTaskId: ").Append(ProcessTaskId).Append("\n");
            sb.Append("  RejectReason: ").Append(RejectReason).Append("\n");
            sb.Append("  RollbackTime: ").Append(RollbackTime).Append("\n");
            sb.Append("  ScanResult: ").Append(ScanResult).Append("\n");
            sb.Append("  ScreenShotList: ").Append(ScreenShotList).Append("\n");
            sb.Append("  ShelfTime: ").Append(ShelfTime).Append("\n");
            sb.Append("  SourceUrl: ").Append(SourceUrl).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("  TemplateExtra: ").Append(TemplateExtra).Append("\n");
            sb.Append("  TemplateVersion: ").Append(TemplateVersion).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as AlipayOpenMiniInnerversionInfoQueryResponseModel);
        }

        /// <summary>
        /// Returns true if AlipayOpenMiniInnerversionInfoQueryResponseModel instances are equal
        /// </summary>
        /// <param name="input">Instance of AlipayOpenMiniInnerversionInfoQueryResponseModel to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AlipayOpenMiniInnerversionInfoQueryResponseModel input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.AppVersion == input.AppVersion ||
                    (this.AppVersion != null &&
                    this.AppVersion.Equals(input.AppVersion))
                ) && 
                (
                    this.BuildSource == input.BuildSource ||
                    (this.BuildSource != null &&
                    this.BuildSource.Equals(input.BuildSource))
                ) && 
                (
                    this.BundleId == input.BundleId ||
                    (this.BundleId != null &&
                    this.BundleId.Equals(input.BundleId))
                ) && 
                (
                    this.CreateTime == input.CreateTime ||
                    (this.CreateTime != null &&
                    this.CreateTime.Equals(input.CreateTime))
                ) && 
                (
                    this.Description == input.Description ||
                    (this.Description != null &&
                    this.Description.Equals(input.Description))
                ) && 
                (
                    this.ExtJson == input.ExtJson ||
                    (this.ExtJson != null &&
                    this.ExtJson.Equals(input.ExtJson))
                ) && 
                (
                    this.GmtModified == input.GmtModified ||
                    (this.GmtModified != null &&
                    this.GmtModified.Equals(input.GmtModified))
                ) && 
                (
                    this.GrayStartTime == input.GrayStartTime ||
                    (this.GrayStartTime != null &&
                    this.GrayStartTime.Equals(input.GrayStartTime))
                ) && 
                (
                    this.GrayStrategy == input.GrayStrategy ||
                    (this.GrayStrategy != null &&
                    this.GrayStrategy.Equals(input.GrayStrategy))
                ) && 
                (
                    this.MiniAppId == input.MiniAppId ||
                    (this.MiniAppId != null &&
                    this.MiniAppId.Equals(input.MiniAppId))
                ) && 
                (
                    this.OfflineTime == input.OfflineTime ||
                    (this.OfflineTime != null &&
                    this.OfflineTime.Equals(input.OfflineTime))
                ) && 
                (
                    this.PackageUrl == input.PackageUrl ||
                    (this.PackageUrl != null &&
                    this.PackageUrl.Equals(input.PackageUrl))
                ) && 
                (
                    this.PluginRefs == input.PluginRefs ||
                    this.PluginRefs != null &&
                    input.PluginRefs != null &&
                    this.PluginRefs.SequenceEqual(input.PluginRefs)
                ) && 
                (
                    this.ProcessTaskId == input.ProcessTaskId ||
                    (this.ProcessTaskId != null &&
                    this.ProcessTaskId.Equals(input.ProcessTaskId))
                ) && 
                (
                    this.RejectReason == input.RejectReason ||
                    (this.RejectReason != null &&
                    this.RejectReason.Equals(input.RejectReason))
                ) && 
                (
                    this.RollbackTime == input.RollbackTime ||
                    (this.RollbackTime != null &&
                    this.RollbackTime.Equals(input.RollbackTime))
                ) && 
                (
                    this.ScanResult == input.ScanResult ||
                    (this.ScanResult != null &&
                    this.ScanResult.Equals(input.ScanResult))
                ) && 
                (
                    this.ScreenShotList == input.ScreenShotList ||
                    (this.ScreenShotList != null &&
                    this.ScreenShotList.Equals(input.ScreenShotList))
                ) && 
                (
                    this.ShelfTime == input.ShelfTime ||
                    (this.ShelfTime != null &&
                    this.ShelfTime.Equals(input.ShelfTime))
                ) && 
                (
                    this.SourceUrl == input.SourceUrl ||
                    (this.SourceUrl != null &&
                    this.SourceUrl.Equals(input.SourceUrl))
                ) && 
                (
                    this.Status == input.Status ||
                    (this.Status != null &&
                    this.Status.Equals(input.Status))
                ) && 
                (
                    this.TemplateExtra == input.TemplateExtra ||
                    (this.TemplateExtra != null &&
                    this.TemplateExtra.Equals(input.TemplateExtra))
                ) && 
                (
                    this.TemplateVersion == input.TemplateVersion ||
                    (this.TemplateVersion != null &&
                    this.TemplateVersion.Equals(input.TemplateVersion))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.AppVersion != null)
                {
                    hashCode = (hashCode * 59) + this.AppVersion.GetHashCode();
                }
                if (this.BuildSource != null)
                {
                    hashCode = (hashCode * 59) + this.BuildSource.GetHashCode();
                }
                if (this.BundleId != null)
                {
                    hashCode = (hashCode * 59) + this.BundleId.GetHashCode();
                }
                if (this.CreateTime != null)
                {
                    hashCode = (hashCode * 59) + this.CreateTime.GetHashCode();
                }
                if (this.Description != null)
                {
                    hashCode = (hashCode * 59) + this.Description.GetHashCode();
                }
                if (this.ExtJson != null)
                {
                    hashCode = (hashCode * 59) + this.ExtJson.GetHashCode();
                }
                if (this.GmtModified != null)
                {
                    hashCode = (hashCode * 59) + this.GmtModified.GetHashCode();
                }
                if (this.GrayStartTime != null)
                {
                    hashCode = (hashCode * 59) + this.GrayStartTime.GetHashCode();
                }
                if (this.GrayStrategy != null)
                {
                    hashCode = (hashCode * 59) + this.GrayStrategy.GetHashCode();
                }
                if (this.MiniAppId != null)
                {
                    hashCode = (hashCode * 59) + this.MiniAppId.GetHashCode();
                }
                if (this.OfflineTime != null)
                {
                    hashCode = (hashCode * 59) + this.OfflineTime.GetHashCode();
                }
                if (this.PackageUrl != null)
                {
                    hashCode = (hashCode * 59) + this.PackageUrl.GetHashCode();
                }
                if (this.PluginRefs != null)
                {
                    hashCode = (hashCode * 59) + this.PluginRefs.GetHashCode();
                }
                if (this.ProcessTaskId != null)
                {
                    hashCode = (hashCode * 59) + this.ProcessTaskId.GetHashCode();
                }
                if (this.RejectReason != null)
                {
                    hashCode = (hashCode * 59) + this.RejectReason.GetHashCode();
                }
                if (this.RollbackTime != null)
                {
                    hashCode = (hashCode * 59) + this.RollbackTime.GetHashCode();
                }
                if (this.ScanResult != null)
                {
                    hashCode = (hashCode * 59) + this.ScanResult.GetHashCode();
                }
                if (this.ScreenShotList != null)
                {
                    hashCode = (hashCode * 59) + this.ScreenShotList.GetHashCode();
                }
                if (this.ShelfTime != null)
                {
                    hashCode = (hashCode * 59) + this.ShelfTime.GetHashCode();
                }
                if (this.SourceUrl != null)
                {
                    hashCode = (hashCode * 59) + this.SourceUrl.GetHashCode();
                }
                if (this.Status != null)
                {
                    hashCode = (hashCode * 59) + this.Status.GetHashCode();
                }
                if (this.TemplateExtra != null)
                {
                    hashCode = (hashCode * 59) + this.TemplateExtra.GetHashCode();
                }
                if (this.TemplateVersion != null)
                {
                    hashCode = (hashCode * 59) + this.TemplateVersion.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
