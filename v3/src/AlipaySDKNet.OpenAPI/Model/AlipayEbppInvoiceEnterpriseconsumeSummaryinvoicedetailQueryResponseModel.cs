/*
 * 支付宝开放平台API
 *
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2025-02-19
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = AlipaySDKNet.OpenAPI.Client.OpenAPIDateConverter;

namespace AlipaySDKNet.OpenAPI.Model
{
    /// <summary>
    /// AlipayEbppInvoiceEnterpriseconsumeSummaryinvoicedetailQueryResponseModel
    /// </summary>
    [DataContract(Name = "AlipayEbppInvoiceEnterpriseconsumeSummaryinvoicedetailQueryResponseModel")]
    public partial class AlipayEbppInvoiceEnterpriseconsumeSummaryinvoicedetailQueryResponseModel : IEquatable<AlipayEbppInvoiceEnterpriseconsumeSummaryinvoicedetailQueryResponseModel>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AlipayEbppInvoiceEnterpriseconsumeSummaryinvoicedetailQueryResponseModel" /> class.
        /// </summary>
        /// <param name="accountId">企业汇总场景下，即企业ID.</param>
        /// <param name="applyDate">申请时间.</param>
        /// <param name="batchId">已废弃，开票批次 ID（建议使用summary_id）.</param>
        /// <param name="batchStatus">批次状态&lt;br/&gt;     INIT：汇总批次初始化状态，未进行汇总&lt;br/&gt;     SUMMARY：汇总批次化汇总完成，汇总金额计算完成&lt;br/&gt;     PROCESS：汇总批次初始化状态，汇总开票申请提交成功&lt;br/&gt;     NOT_SUPPORT：汇总开票商户业务能力不支持&lt;br/&gt;     FAIL：汇总批次申请失败状态&lt;br/&gt;     SUCCESS：汇总批次申请成功状态，此时发票已回传&lt;br/&gt;     MANUAL_CONFIRM：汇总批次人工确认收票&lt;br/&gt;.</param>
        /// <param name="completeVoucherList">发票内容.</param>
        /// <param name="gmtBizEnd">账期结束时间.</param>
        /// <param name="gmtBizStart">账期起始时间.</param>
        /// <param name="statusShowContent">状态对应的展示明细内容&lt;br/&gt;     初始化&lt;br/&gt;     汇总完成&lt;br/&gt;     开票中...&lt;br/&gt;     不支持开票&lt;br/&gt;     开票失败&lt;br/&gt;     已开票&lt;br/&gt;     确认已收票&lt;br/&gt;.</param>
        /// <param name="summaryId">开票批次 ID.</param>
        /// <param name="userId">企业汇总场景下，即企业ID（请使用account_id）.</param>
        public AlipayEbppInvoiceEnterpriseconsumeSummaryinvoicedetailQueryResponseModel(string accountId = default(string), string applyDate = default(string), string batchId = default(string), string batchStatus = default(string), List<CompleteVoucherInfo> completeVoucherList = default(List<CompleteVoucherInfo>), string gmtBizEnd = default(string), string gmtBizStart = default(string), string statusShowContent = default(string), string summaryId = default(string), string userId = default(string))
        {
            this.AccountId = accountId;
            this.ApplyDate = applyDate;
            this.BatchId = batchId;
            this.BatchStatus = batchStatus;
            this.CompleteVoucherList = completeVoucherList;
            this.GmtBizEnd = gmtBizEnd;
            this.GmtBizStart = gmtBizStart;
            this.StatusShowContent = statusShowContent;
            this.SummaryId = summaryId;
            this.UserId = userId;
        }

        /// <summary>
        /// 企业汇总场景下，即企业ID
        /// </summary>
        /// <value>企业汇总场景下，即企业ID</value>
        [DataMember(Name = "account_id", EmitDefaultValue = false)]
        public string AccountId { get; set; }

        /// <summary>
        /// 申请时间
        /// </summary>
        /// <value>申请时间</value>
        [DataMember(Name = "apply_date", EmitDefaultValue = false)]
        public string ApplyDate { get; set; }

        /// <summary>
        /// 已废弃，开票批次 ID（建议使用summary_id）
        /// </summary>
        /// <value>已废弃，开票批次 ID（建议使用summary_id）</value>
        [DataMember(Name = "batch_id", EmitDefaultValue = false)]
        public string BatchId { get; set; }

        /// <summary>
        /// 批次状态&lt;br/&gt;     INIT：汇总批次初始化状态，未进行汇总&lt;br/&gt;     SUMMARY：汇总批次化汇总完成，汇总金额计算完成&lt;br/&gt;     PROCESS：汇总批次初始化状态，汇总开票申请提交成功&lt;br/&gt;     NOT_SUPPORT：汇总开票商户业务能力不支持&lt;br/&gt;     FAIL：汇总批次申请失败状态&lt;br/&gt;     SUCCESS：汇总批次申请成功状态，此时发票已回传&lt;br/&gt;     MANUAL_CONFIRM：汇总批次人工确认收票&lt;br/&gt;
        /// </summary>
        /// <value>批次状态&lt;br/&gt;     INIT：汇总批次初始化状态，未进行汇总&lt;br/&gt;     SUMMARY：汇总批次化汇总完成，汇总金额计算完成&lt;br/&gt;     PROCESS：汇总批次初始化状态，汇总开票申请提交成功&lt;br/&gt;     NOT_SUPPORT：汇总开票商户业务能力不支持&lt;br/&gt;     FAIL：汇总批次申请失败状态&lt;br/&gt;     SUCCESS：汇总批次申请成功状态，此时发票已回传&lt;br/&gt;     MANUAL_CONFIRM：汇总批次人工确认收票&lt;br/&gt;</value>
        [DataMember(Name = "batch_status", EmitDefaultValue = false)]
        public string BatchStatus { get; set; }

        /// <summary>
        /// 发票内容
        /// </summary>
        /// <value>发票内容</value>
        [DataMember(Name = "complete_voucher_list", EmitDefaultValue = false)]
        public List<CompleteVoucherInfo> CompleteVoucherList { get; set; }

        /// <summary>
        /// 账期结束时间
        /// </summary>
        /// <value>账期结束时间</value>
        [DataMember(Name = "gmt_biz_end", EmitDefaultValue = false)]
        public string GmtBizEnd { get; set; }

        /// <summary>
        /// 账期起始时间
        /// </summary>
        /// <value>账期起始时间</value>
        [DataMember(Name = "gmt_biz_start", EmitDefaultValue = false)]
        public string GmtBizStart { get; set; }

        /// <summary>
        /// 状态对应的展示明细内容&lt;br/&gt;     初始化&lt;br/&gt;     汇总完成&lt;br/&gt;     开票中...&lt;br/&gt;     不支持开票&lt;br/&gt;     开票失败&lt;br/&gt;     已开票&lt;br/&gt;     确认已收票&lt;br/&gt;
        /// </summary>
        /// <value>状态对应的展示明细内容&lt;br/&gt;     初始化&lt;br/&gt;     汇总完成&lt;br/&gt;     开票中...&lt;br/&gt;     不支持开票&lt;br/&gt;     开票失败&lt;br/&gt;     已开票&lt;br/&gt;     确认已收票&lt;br/&gt;</value>
        [DataMember(Name = "status_show_content", EmitDefaultValue = false)]
        public string StatusShowContent { get; set; }

        /// <summary>
        /// 开票批次 ID
        /// </summary>
        /// <value>开票批次 ID</value>
        [DataMember(Name = "summary_id", EmitDefaultValue = false)]
        public string SummaryId { get; set; }

        /// <summary>
        /// 企业汇总场景下，即企业ID（请使用account_id）
        /// </summary>
        /// <value>企业汇总场景下，即企业ID（请使用account_id）</value>
        [DataMember(Name = "user_id", EmitDefaultValue = false)]
        public string UserId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class AlipayEbppInvoiceEnterpriseconsumeSummaryinvoicedetailQueryResponseModel {\n");
            sb.Append("  AccountId: ").Append(AccountId).Append("\n");
            sb.Append("  ApplyDate: ").Append(ApplyDate).Append("\n");
            sb.Append("  BatchId: ").Append(BatchId).Append("\n");
            sb.Append("  BatchStatus: ").Append(BatchStatus).Append("\n");
            sb.Append("  CompleteVoucherList: ").Append(CompleteVoucherList).Append("\n");
            sb.Append("  GmtBizEnd: ").Append(GmtBizEnd).Append("\n");
            sb.Append("  GmtBizStart: ").Append(GmtBizStart).Append("\n");
            sb.Append("  StatusShowContent: ").Append(StatusShowContent).Append("\n");
            sb.Append("  SummaryId: ").Append(SummaryId).Append("\n");
            sb.Append("  UserId: ").Append(UserId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as AlipayEbppInvoiceEnterpriseconsumeSummaryinvoicedetailQueryResponseModel);
        }

        /// <summary>
        /// Returns true if AlipayEbppInvoiceEnterpriseconsumeSummaryinvoicedetailQueryResponseModel instances are equal
        /// </summary>
        /// <param name="input">Instance of AlipayEbppInvoiceEnterpriseconsumeSummaryinvoicedetailQueryResponseModel to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AlipayEbppInvoiceEnterpriseconsumeSummaryinvoicedetailQueryResponseModel input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.AccountId == input.AccountId ||
                    (this.AccountId != null &&
                    this.AccountId.Equals(input.AccountId))
                ) && 
                (
                    this.ApplyDate == input.ApplyDate ||
                    (this.ApplyDate != null &&
                    this.ApplyDate.Equals(input.ApplyDate))
                ) && 
                (
                    this.BatchId == input.BatchId ||
                    (this.BatchId != null &&
                    this.BatchId.Equals(input.BatchId))
                ) && 
                (
                    this.BatchStatus == input.BatchStatus ||
                    (this.BatchStatus != null &&
                    this.BatchStatus.Equals(input.BatchStatus))
                ) && 
                (
                    this.CompleteVoucherList == input.CompleteVoucherList ||
                    this.CompleteVoucherList != null &&
                    input.CompleteVoucherList != null &&
                    this.CompleteVoucherList.SequenceEqual(input.CompleteVoucherList)
                ) && 
                (
                    this.GmtBizEnd == input.GmtBizEnd ||
                    (this.GmtBizEnd != null &&
                    this.GmtBizEnd.Equals(input.GmtBizEnd))
                ) && 
                (
                    this.GmtBizStart == input.GmtBizStart ||
                    (this.GmtBizStart != null &&
                    this.GmtBizStart.Equals(input.GmtBizStart))
                ) && 
                (
                    this.StatusShowContent == input.StatusShowContent ||
                    (this.StatusShowContent != null &&
                    this.StatusShowContent.Equals(input.StatusShowContent))
                ) && 
                (
                    this.SummaryId == input.SummaryId ||
                    (this.SummaryId != null &&
                    this.SummaryId.Equals(input.SummaryId))
                ) && 
                (
                    this.UserId == input.UserId ||
                    (this.UserId != null &&
                    this.UserId.Equals(input.UserId))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.AccountId != null)
                {
                    hashCode = (hashCode * 59) + this.AccountId.GetHashCode();
                }
                if (this.ApplyDate != null)
                {
                    hashCode = (hashCode * 59) + this.ApplyDate.GetHashCode();
                }
                if (this.BatchId != null)
                {
                    hashCode = (hashCode * 59) + this.BatchId.GetHashCode();
                }
                if (this.BatchStatus != null)
                {
                    hashCode = (hashCode * 59) + this.BatchStatus.GetHashCode();
                }
                if (this.CompleteVoucherList != null)
                {
                    hashCode = (hashCode * 59) + this.CompleteVoucherList.GetHashCode();
                }
                if (this.GmtBizEnd != null)
                {
                    hashCode = (hashCode * 59) + this.GmtBizEnd.GetHashCode();
                }
                if (this.GmtBizStart != null)
                {
                    hashCode = (hashCode * 59) + this.GmtBizStart.GetHashCode();
                }
                if (this.StatusShowContent != null)
                {
                    hashCode = (hashCode * 59) + this.StatusShowContent.GetHashCode();
                }
                if (this.SummaryId != null)
                {
                    hashCode = (hashCode * 59) + this.SummaryId.GetHashCode();
                }
                if (this.UserId != null)
                {
                    hashCode = (hashCode * 59) + this.UserId.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
