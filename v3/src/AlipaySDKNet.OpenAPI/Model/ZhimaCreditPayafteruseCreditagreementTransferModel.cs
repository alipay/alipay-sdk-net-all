/*
 * 支付宝开放平台API
 *
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2025-02-19
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = AlipaySDKNet.OpenAPI.Client.OpenAPIDateConverter;

namespace AlipaySDKNet.OpenAPI.Model
{
    /// <summary>
    /// ZhimaCreditPayafteruseCreditagreementTransferModel
    /// </summary>
    [DataContract(Name = "ZhimaCreditPayafteruseCreditagreementTransferModel")]
    public partial class ZhimaCreditPayafteruseCreditagreementTransferModel : IEquatable<ZhimaCreditPayafteruseCreditagreementTransferModel>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ZhimaCreditPayafteruseCreditagreementTransferModel" /> class.
        /// </summary>
        /// <param name="categoryId">芝麻外部类目.</param>
        /// <param name="creditAgreementId">芝麻开通/授权协议号，在用户开通芝麻先享服务后，由芝麻生成并返回给商户；只有当opertaion_type传入AGREEMENT_TRANSFER值是，该字段必传；其他场景不需要传入.</param>
        /// <param name="deductAgreementNo">用户的代扣协议号.</param>
        /// <param name="extendParams">业务扩展参数，Json格式.</param>
        /// <param name="operationType">AGREEMENT_TRANSFER代表是存量先享协议的主体切换功能；其他场景不需要传入；默认为空；.</param>
        /// <param name="outAgreementNo">商户外部协议号，不同的支付宝用户需要传递不同的外部单号.</param>
        /// <param name="productCode">商户签约的芝麻产品的产品码.</param>
        /// <param name="zmServiceId">芝麻信用服务ID.</param>
        public ZhimaCreditPayafteruseCreditagreementTransferModel(string categoryId = default(string), string creditAgreementId = default(string), string deductAgreementNo = default(string), string extendParams = default(string), string operationType = default(string), string outAgreementNo = default(string), string productCode = default(string), string zmServiceId = default(string))
        {
            this.CategoryId = categoryId;
            this.CreditAgreementId = creditAgreementId;
            this.DeductAgreementNo = deductAgreementNo;
            this.ExtendParams = extendParams;
            this.OperationType = operationType;
            this.OutAgreementNo = outAgreementNo;
            this.ProductCode = productCode;
            this.ZmServiceId = zmServiceId;
        }

        /// <summary>
        /// 芝麻外部类目
        /// </summary>
        /// <value>芝麻外部类目</value>
        [DataMember(Name = "category_id", EmitDefaultValue = false)]
        public string CategoryId { get; set; }

        /// <summary>
        /// 芝麻开通/授权协议号，在用户开通芝麻先享服务后，由芝麻生成并返回给商户；只有当opertaion_type传入AGREEMENT_TRANSFER值是，该字段必传；其他场景不需要传入
        /// </summary>
        /// <value>芝麻开通/授权协议号，在用户开通芝麻先享服务后，由芝麻生成并返回给商户；只有当opertaion_type传入AGREEMENT_TRANSFER值是，该字段必传；其他场景不需要传入</value>
        [DataMember(Name = "credit_agreement_id", EmitDefaultValue = false)]
        public string CreditAgreementId { get; set; }

        /// <summary>
        /// 用户的代扣协议号
        /// </summary>
        /// <value>用户的代扣协议号</value>
        [DataMember(Name = "deduct_agreement_no", EmitDefaultValue = false)]
        public string DeductAgreementNo { get; set; }

        /// <summary>
        /// 业务扩展参数，Json格式
        /// </summary>
        /// <value>业务扩展参数，Json格式</value>
        [DataMember(Name = "extend_params", EmitDefaultValue = false)]
        public string ExtendParams { get; set; }

        /// <summary>
        /// AGREEMENT_TRANSFER代表是存量先享协议的主体切换功能；其他场景不需要传入；默认为空；
        /// </summary>
        /// <value>AGREEMENT_TRANSFER代表是存量先享协议的主体切换功能；其他场景不需要传入；默认为空；</value>
        [DataMember(Name = "operation_type", EmitDefaultValue = false)]
        public string OperationType { get; set; }

        /// <summary>
        /// 商户外部协议号，不同的支付宝用户需要传递不同的外部单号
        /// </summary>
        /// <value>商户外部协议号，不同的支付宝用户需要传递不同的外部单号</value>
        [DataMember(Name = "out_agreement_no", EmitDefaultValue = false)]
        public string OutAgreementNo { get; set; }

        /// <summary>
        /// 商户签约的芝麻产品的产品码
        /// </summary>
        /// <value>商户签约的芝麻产品的产品码</value>
        [DataMember(Name = "product_code", EmitDefaultValue = false)]
        public string ProductCode { get; set; }

        /// <summary>
        /// 芝麻信用服务ID
        /// </summary>
        /// <value>芝麻信用服务ID</value>
        [DataMember(Name = "zm_service_id", EmitDefaultValue = false)]
        public string ZmServiceId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ZhimaCreditPayafteruseCreditagreementTransferModel {\n");
            sb.Append("  CategoryId: ").Append(CategoryId).Append("\n");
            sb.Append("  CreditAgreementId: ").Append(CreditAgreementId).Append("\n");
            sb.Append("  DeductAgreementNo: ").Append(DeductAgreementNo).Append("\n");
            sb.Append("  ExtendParams: ").Append(ExtendParams).Append("\n");
            sb.Append("  OperationType: ").Append(OperationType).Append("\n");
            sb.Append("  OutAgreementNo: ").Append(OutAgreementNo).Append("\n");
            sb.Append("  ProductCode: ").Append(ProductCode).Append("\n");
            sb.Append("  ZmServiceId: ").Append(ZmServiceId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ZhimaCreditPayafteruseCreditagreementTransferModel);
        }

        /// <summary>
        /// Returns true if ZhimaCreditPayafteruseCreditagreementTransferModel instances are equal
        /// </summary>
        /// <param name="input">Instance of ZhimaCreditPayafteruseCreditagreementTransferModel to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ZhimaCreditPayafteruseCreditagreementTransferModel input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.CategoryId == input.CategoryId ||
                    (this.CategoryId != null &&
                    this.CategoryId.Equals(input.CategoryId))
                ) && 
                (
                    this.CreditAgreementId == input.CreditAgreementId ||
                    (this.CreditAgreementId != null &&
                    this.CreditAgreementId.Equals(input.CreditAgreementId))
                ) && 
                (
                    this.DeductAgreementNo == input.DeductAgreementNo ||
                    (this.DeductAgreementNo != null &&
                    this.DeductAgreementNo.Equals(input.DeductAgreementNo))
                ) && 
                (
                    this.ExtendParams == input.ExtendParams ||
                    (this.ExtendParams != null &&
                    this.ExtendParams.Equals(input.ExtendParams))
                ) && 
                (
                    this.OperationType == input.OperationType ||
                    (this.OperationType != null &&
                    this.OperationType.Equals(input.OperationType))
                ) && 
                (
                    this.OutAgreementNo == input.OutAgreementNo ||
                    (this.OutAgreementNo != null &&
                    this.OutAgreementNo.Equals(input.OutAgreementNo))
                ) && 
                (
                    this.ProductCode == input.ProductCode ||
                    (this.ProductCode != null &&
                    this.ProductCode.Equals(input.ProductCode))
                ) && 
                (
                    this.ZmServiceId == input.ZmServiceId ||
                    (this.ZmServiceId != null &&
                    this.ZmServiceId.Equals(input.ZmServiceId))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.CategoryId != null)
                {
                    hashCode = (hashCode * 59) + this.CategoryId.GetHashCode();
                }
                if (this.CreditAgreementId != null)
                {
                    hashCode = (hashCode * 59) + this.CreditAgreementId.GetHashCode();
                }
                if (this.DeductAgreementNo != null)
                {
                    hashCode = (hashCode * 59) + this.DeductAgreementNo.GetHashCode();
                }
                if (this.ExtendParams != null)
                {
                    hashCode = (hashCode * 59) + this.ExtendParams.GetHashCode();
                }
                if (this.OperationType != null)
                {
                    hashCode = (hashCode * 59) + this.OperationType.GetHashCode();
                }
                if (this.OutAgreementNo != null)
                {
                    hashCode = (hashCode * 59) + this.OutAgreementNo.GetHashCode();
                }
                if (this.ProductCode != null)
                {
                    hashCode = (hashCode * 59) + this.ProductCode.GetHashCode();
                }
                if (this.ZmServiceId != null)
                {
                    hashCode = (hashCode * 59) + this.ZmServiceId.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
