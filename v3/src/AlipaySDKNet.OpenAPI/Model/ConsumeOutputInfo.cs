/*
 * 支付宝开放平台API
 *
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2025-02-19
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = AlipaySDKNet.OpenAPI.Client.OpenAPIDateConverter;

namespace AlipaySDKNet.OpenAPI.Model
{
    /// <summary>
    /// ConsumeOutputInfo
    /// </summary>
    [DataContract(Name = "ConsumeOutputInfo")]
    public partial class ConsumeOutputInfo : IEquatable<ConsumeOutputInfo>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ConsumeOutputInfo" /> class.
        /// </summary>
        /// <param name="billNo">支付宝交易号.</param>
        /// <param name="categoryName">账单分类.</param>
        /// <param name="consumeAmount">金额，单位元.</param>
        /// <param name="consumeDate">日期.</param>
        /// <param name="consumeTitle">交易记录标题.</param>
        /// <param name="payeeName">商家名称.</param>
        public ConsumeOutputInfo(string billNo = default(string), string categoryName = default(string), string consumeAmount = default(string), string consumeDate = default(string), string consumeTitle = default(string), string payeeName = default(string))
        {
            this.BillNo = billNo;
            this.CategoryName = categoryName;
            this.ConsumeAmount = consumeAmount;
            this.ConsumeDate = consumeDate;
            this.ConsumeTitle = consumeTitle;
            this.PayeeName = payeeName;
        }

        /// <summary>
        /// 支付宝交易号
        /// </summary>
        /// <value>支付宝交易号</value>
        [DataMember(Name = "bill_no", EmitDefaultValue = false)]
        public string BillNo { get; set; }

        /// <summary>
        /// 账单分类
        /// </summary>
        /// <value>账单分类</value>
        [DataMember(Name = "category_name", EmitDefaultValue = false)]
        public string CategoryName { get; set; }

        /// <summary>
        /// 金额，单位元
        /// </summary>
        /// <value>金额，单位元</value>
        [DataMember(Name = "consume_amount", EmitDefaultValue = false)]
        public string ConsumeAmount { get; set; }

        /// <summary>
        /// 日期
        /// </summary>
        /// <value>日期</value>
        [DataMember(Name = "consume_date", EmitDefaultValue = false)]
        public string ConsumeDate { get; set; }

        /// <summary>
        /// 交易记录标题
        /// </summary>
        /// <value>交易记录标题</value>
        [DataMember(Name = "consume_title", EmitDefaultValue = false)]
        public string ConsumeTitle { get; set; }

        /// <summary>
        /// 商家名称
        /// </summary>
        /// <value>商家名称</value>
        [DataMember(Name = "payee_name", EmitDefaultValue = false)]
        public string PayeeName { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ConsumeOutputInfo {\n");
            sb.Append("  BillNo: ").Append(BillNo).Append("\n");
            sb.Append("  CategoryName: ").Append(CategoryName).Append("\n");
            sb.Append("  ConsumeAmount: ").Append(ConsumeAmount).Append("\n");
            sb.Append("  ConsumeDate: ").Append(ConsumeDate).Append("\n");
            sb.Append("  ConsumeTitle: ").Append(ConsumeTitle).Append("\n");
            sb.Append("  PayeeName: ").Append(PayeeName).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ConsumeOutputInfo);
        }

        /// <summary>
        /// Returns true if ConsumeOutputInfo instances are equal
        /// </summary>
        /// <param name="input">Instance of ConsumeOutputInfo to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ConsumeOutputInfo input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.BillNo == input.BillNo ||
                    (this.BillNo != null &&
                    this.BillNo.Equals(input.BillNo))
                ) && 
                (
                    this.CategoryName == input.CategoryName ||
                    (this.CategoryName != null &&
                    this.CategoryName.Equals(input.CategoryName))
                ) && 
                (
                    this.ConsumeAmount == input.ConsumeAmount ||
                    (this.ConsumeAmount != null &&
                    this.ConsumeAmount.Equals(input.ConsumeAmount))
                ) && 
                (
                    this.ConsumeDate == input.ConsumeDate ||
                    (this.ConsumeDate != null &&
                    this.ConsumeDate.Equals(input.ConsumeDate))
                ) && 
                (
                    this.ConsumeTitle == input.ConsumeTitle ||
                    (this.ConsumeTitle != null &&
                    this.ConsumeTitle.Equals(input.ConsumeTitle))
                ) && 
                (
                    this.PayeeName == input.PayeeName ||
                    (this.PayeeName != null &&
                    this.PayeeName.Equals(input.PayeeName))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.BillNo != null)
                {
                    hashCode = (hashCode * 59) + this.BillNo.GetHashCode();
                }
                if (this.CategoryName != null)
                {
                    hashCode = (hashCode * 59) + this.CategoryName.GetHashCode();
                }
                if (this.ConsumeAmount != null)
                {
                    hashCode = (hashCode * 59) + this.ConsumeAmount.GetHashCode();
                }
                if (this.ConsumeDate != null)
                {
                    hashCode = (hashCode * 59) + this.ConsumeDate.GetHashCode();
                }
                if (this.ConsumeTitle != null)
                {
                    hashCode = (hashCode * 59) + this.ConsumeTitle.GetHashCode();
                }
                if (this.PayeeName != null)
                {
                    hashCode = (hashCode * 59) + this.PayeeName.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
