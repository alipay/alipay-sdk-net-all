/*
 * 支付宝开放平台API
 *
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2025-02-19
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = AlipaySDKNet.OpenAPI.Client.OpenAPIDateConverter;

namespace AlipaySDKNet.OpenAPI.Model
{
    /// <summary>
    /// DiscountInfoData
    /// </summary>
    [DataContract(Name = "DiscountInfoData")]
    public partial class DiscountInfoData : IEquatable<DiscountInfoData>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="DiscountInfoData" /> class.
        /// </summary>
        /// <param name="discountAmount">优惠金额.</param>
        /// <param name="discountName">优惠名称.</param>
        /// <param name="discountPageLink">优惠跳转链接地址.</param>
        /// <param name="discountQuantity">优惠数量.</param>
        /// <param name="externalDiscountId">外部优惠id.</param>
        public DiscountInfoData(string discountAmount = default(string), string discountName = default(string), string discountPageLink = default(string), int discountQuantity = default(int), string externalDiscountId = default(string))
        {
            this.DiscountAmount = discountAmount;
            this.DiscountName = discountName;
            this.DiscountPageLink = discountPageLink;
            this.DiscountQuantity = discountQuantity;
            this.ExternalDiscountId = externalDiscountId;
        }

        /// <summary>
        /// 优惠金额
        /// </summary>
        /// <value>优惠金额</value>
        [DataMember(Name = "discount_amount", EmitDefaultValue = false)]
        public string DiscountAmount { get; set; }

        /// <summary>
        /// 优惠名称
        /// </summary>
        /// <value>优惠名称</value>
        [DataMember(Name = "discount_name", EmitDefaultValue = false)]
        public string DiscountName { get; set; }

        /// <summary>
        /// 优惠跳转链接地址
        /// </summary>
        /// <value>优惠跳转链接地址</value>
        [DataMember(Name = "discount_page_link", EmitDefaultValue = false)]
        public string DiscountPageLink { get; set; }

        /// <summary>
        /// 优惠数量
        /// </summary>
        /// <value>优惠数量</value>
        [DataMember(Name = "discount_quantity", EmitDefaultValue = false)]
        public int DiscountQuantity { get; set; }

        /// <summary>
        /// 外部优惠id
        /// </summary>
        /// <value>外部优惠id</value>
        [DataMember(Name = "external_discount_id", EmitDefaultValue = false)]
        public string ExternalDiscountId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class DiscountInfoData {\n");
            sb.Append("  DiscountAmount: ").Append(DiscountAmount).Append("\n");
            sb.Append("  DiscountName: ").Append(DiscountName).Append("\n");
            sb.Append("  DiscountPageLink: ").Append(DiscountPageLink).Append("\n");
            sb.Append("  DiscountQuantity: ").Append(DiscountQuantity).Append("\n");
            sb.Append("  ExternalDiscountId: ").Append(ExternalDiscountId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as DiscountInfoData);
        }

        /// <summary>
        /// Returns true if DiscountInfoData instances are equal
        /// </summary>
        /// <param name="input">Instance of DiscountInfoData to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(DiscountInfoData input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.DiscountAmount == input.DiscountAmount ||
                    (this.DiscountAmount != null &&
                    this.DiscountAmount.Equals(input.DiscountAmount))
                ) && 
                (
                    this.DiscountName == input.DiscountName ||
                    (this.DiscountName != null &&
                    this.DiscountName.Equals(input.DiscountName))
                ) && 
                (
                    this.DiscountPageLink == input.DiscountPageLink ||
                    (this.DiscountPageLink != null &&
                    this.DiscountPageLink.Equals(input.DiscountPageLink))
                ) && 
                (
                    this.DiscountQuantity == input.DiscountQuantity ||
                    this.DiscountQuantity.Equals(input.DiscountQuantity)
                ) && 
                (
                    this.ExternalDiscountId == input.ExternalDiscountId ||
                    (this.ExternalDiscountId != null &&
                    this.ExternalDiscountId.Equals(input.ExternalDiscountId))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.DiscountAmount != null)
                {
                    hashCode = (hashCode * 59) + this.DiscountAmount.GetHashCode();
                }
                if (this.DiscountName != null)
                {
                    hashCode = (hashCode * 59) + this.DiscountName.GetHashCode();
                }
                if (this.DiscountPageLink != null)
                {
                    hashCode = (hashCode * 59) + this.DiscountPageLink.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.DiscountQuantity.GetHashCode();
                if (this.ExternalDiscountId != null)
                {
                    hashCode = (hashCode * 59) + this.ExternalDiscountId.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
