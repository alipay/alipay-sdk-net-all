/*
 * 支付宝开放平台API
 *
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2025-08-05
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = AlipaySDKNet.OpenAPI.Client.OpenAPIDateConverter;

namespace AlipaySDKNet.OpenAPI.Model
{
    /// <summary>
    /// QuotaInfoDTO
    /// </summary>
    [DataContract(Name = "QuotaInfoDTO")]
    public partial class QuotaInfoDTO : IEquatable<QuotaInfoDTO>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="QuotaInfoDTO" /> class.
        /// </summary>
        /// <param name="remainMoney">剩余额度.</param>
        /// <param name="remainTimes">剩余次数.</param>
        /// <param name="tradeNo">交易号.</param>
        public QuotaInfoDTO(string remainMoney = default(string), string remainTimes = default(string), string tradeNo = default(string))
        {
            this.RemainMoney = remainMoney;
            this.RemainTimes = remainTimes;
            this.TradeNo = tradeNo;
        }

        /// <summary>
        /// 剩余额度
        /// </summary>
        /// <value>剩余额度</value>
        [DataMember(Name = "remain_money", EmitDefaultValue = false)]
        public string RemainMoney { get; set; }

        /// <summary>
        /// 剩余次数
        /// </summary>
        /// <value>剩余次数</value>
        [DataMember(Name = "remain_times", EmitDefaultValue = false)]
        public string RemainTimes { get; set; }

        /// <summary>
        /// 交易号
        /// </summary>
        /// <value>交易号</value>
        [DataMember(Name = "trade_no", EmitDefaultValue = false)]
        public string TradeNo { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class QuotaInfoDTO {\n");
            sb.Append("  RemainMoney: ").Append(RemainMoney).Append("\n");
            sb.Append("  RemainTimes: ").Append(RemainTimes).Append("\n");
            sb.Append("  TradeNo: ").Append(TradeNo).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as QuotaInfoDTO);
        }

        /// <summary>
        /// Returns true if QuotaInfoDTO instances are equal
        /// </summary>
        /// <param name="input">Instance of QuotaInfoDTO to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(QuotaInfoDTO input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.RemainMoney == input.RemainMoney ||
                    (this.RemainMoney != null &&
                    this.RemainMoney.Equals(input.RemainMoney))
                ) && 
                (
                    this.RemainTimes == input.RemainTimes ||
                    (this.RemainTimes != null &&
                    this.RemainTimes.Equals(input.RemainTimes))
                ) && 
                (
                    this.TradeNo == input.TradeNo ||
                    (this.TradeNo != null &&
                    this.TradeNo.Equals(input.TradeNo))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.RemainMoney != null)
                {
                    hashCode = (hashCode * 59) + this.RemainMoney.GetHashCode();
                }
                if (this.RemainTimes != null)
                {
                    hashCode = (hashCode * 59) + this.RemainTimes.GetHashCode();
                }
                if (this.TradeNo != null)
                {
                    hashCode = (hashCode * 59) + this.TradeNo.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
