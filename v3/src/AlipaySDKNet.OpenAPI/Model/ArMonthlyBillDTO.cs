/*
 * 支付宝开放平台API
 *
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2025-02-19
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = AlipaySDKNet.OpenAPI.Client.OpenAPIDateConverter;

namespace AlipaySDKNet.OpenAPI.Model
{
    /// <summary>
    /// ArMonthlyBillDTO
    /// </summary>
    [DataContract(Name = "ArMonthlyBillDTO")]
    public partial class ArMonthlyBillDTO : IEquatable<ArMonthlyBillDTO>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ArMonthlyBillDTO" /> class.
        /// </summary>
        /// <param name="accountDay">出账日.</param>
        /// <param name="accruedDate">应收日期(yyyyMMdd).</param>
        /// <param name="adjustAmt">adjustAmt.</param>
        /// <param name="analysisDmsn1">分析维度1.</param>
        /// <param name="analysisDmsn2">分析维度2.</param>
        /// <param name="analysisDmsn3">分析维度3.</param>
        /// <param name="analysisDmsn4">分析维度4.</param>
        /// <param name="arrangementNo">合约号，商户签约产品对应的合约号.</param>
        /// <param name="billAmt">billAmt.</param>
        /// <param name="billEndDate">账单结束日期.</param>
        /// <param name="billMonth">账单月.</param>
        /// <param name="billNo">月账单号,唯一标识月账单的ID.</param>
        /// <param name="billStartDate">账单开始日期.</param>
        /// <param name="billType">账单类型  21：应收月账单  目前仅支持该类型的账单类型.</param>
        /// <param name="chargeItemCode">收费项编码.</param>
        /// <param name="chargeType">计费类型  01：云在线计费，02：离线计费，03：老主站计收费，04：芝麻在线计收费.</param>
        /// <param name="checkStatus">出账状态  01：账单生成，02：待确认出账，03：已出账，04：客户已对账，05：对账差异，06：部分出账.</param>
        /// <param name="checkedAmt">checkedAmt.</param>
        /// <param name="checkingAmt">checkingAmt.</param>
        /// <param name="clcnBasicAmt">计算依据.</param>
        /// <param name="clcnBasicType">计算依据类型  01：交易金额，02：交易笔数，03：交易张数，04：资费依据扩展，05：其他.</param>
        /// <param name="clcnMethod">计算方法  01：差额累进，02：全额累进，03：按传入金额收费，04：价格包量，05：包时间周期，06：按时间全额累进，07：包时间周期差额累进，08：期间差额累进，09：期间全额累进，10：包时间周期单笔，11：标准单笔计费，12：包时间周期单笔-按照传入金额计费，13：期间靠档差额累进，靠档计息使用，14：自定义.</param>
        /// <param name="freezeAmt">freezeAmt.</param>
        /// <param name="gmtCreate">创建时间（创建备份时需要）.</param>
        /// <param name="gmtModified">修改时间（创建备份时需要）.</param>
        /// <param name="gmtPay">付款时间.</param>
        /// <param name="instId">分支机构号.</param>
        /// <param name="invoiceAmt">invoiceAmt.</param>
        /// <param name="invoicedAmt">invoicedAmt.</param>
        /// <param name="ipId">结算对象参与者标识.</param>
        /// <param name="ipName">参与者名字.</param>
        /// <param name="ipRoleId">结算对象参与者角色标识.</param>
        /// <param name="lastModer">最后修改人.</param>
        /// <param name="linkInvoiceAmt">linkInvoiceAmt.</param>
        /// <param name="payOriginal">付款来源  1：主账务，2：包量，3：预收，4：预存，5：银行，6：积分，7：统一支付，8：支付受理.</param>
        /// <param name="payStatus">付款状态  01：待结算；02：部分结算；03：结算完成.</param>
        /// <param name="payWay">付款方式  1：资金；2：包量.</param>
        /// <param name="payeeAccount">收款方账号.</param>
        /// <param name="payerAccount">付款方账号.</param>
        /// <param name="payerIpRoleId">扣款对象pid.</param>
        /// <param name="prodCode">产品码.</param>
        /// <param name="receivedAmt">receivedAmt.</param>
        /// <param name="recordId">记录id，账单全局唯一号.</param>
        /// <param name="serviceAmt">serviceAmt.</param>
        /// <param name="settleType">结算类型  01：实时；02：预收；03：后收；04：周期结算；05：按日汇总结算；09：延期结算.</param>
        /// <param name="signIpId">签约对象参与者标识.</param>
        /// <param name="signIpRoleId">签约对象参与者角色标识.</param>
        /// <param name="stlIpRoleId">结算对象PID.</param>
        /// <param name="taxAmt">taxAmt.</param>
        /// <param name="taxRate">税率.</param>
        /// <param name="taxType">税收类型，01：增值税，02：营业税  营业税已经在大部分行业废弃，要传入需咨询后再确认.</param>
        /// <param name="toWriteoffDetailCount">待核销明细数量.</param>
        /// <param name="type">账单分类 1应收，2返点.</param>
        /// <param name="writeoffDetailDount">核销明细数量.</param>
        /// <param name="writingoffAmt">writingoffAmt.</param>
        public ArMonthlyBillDTO(string accountDay = default(string), string accruedDate = default(string), MultiCurrencyMoneyOpenApi adjustAmt = default(MultiCurrencyMoneyOpenApi), string analysisDmsn1 = default(string), string analysisDmsn2 = default(string), string analysisDmsn3 = default(string), string analysisDmsn4 = default(string), string arrangementNo = default(string), MultiCurrencyMoneyOpenApi billAmt = default(MultiCurrencyMoneyOpenApi), string billEndDate = default(string), string billMonth = default(string), string billNo = default(string), string billStartDate = default(string), string billType = default(string), string chargeItemCode = default(string), string chargeType = default(string), string checkStatus = default(string), MultiCurrencyMoneyOpenApi checkedAmt = default(MultiCurrencyMoneyOpenApi), MultiCurrencyMoneyOpenApi checkingAmt = default(MultiCurrencyMoneyOpenApi), int clcnBasicAmt = default(int), string clcnBasicType = default(string), string clcnMethod = default(string), MultiCurrencyMoneyOpenApi freezeAmt = default(MultiCurrencyMoneyOpenApi), string gmtCreate = default(string), string gmtModified = default(string), string gmtPay = default(string), string instId = default(string), MultiCurrencyMoneyOpenApi invoiceAmt = default(MultiCurrencyMoneyOpenApi), MultiCurrencyMoneyOpenApi invoicedAmt = default(MultiCurrencyMoneyOpenApi), string ipId = default(string), string ipName = default(string), string ipRoleId = default(string), string lastModer = default(string), MultiCurrencyMoneyOpenApi linkInvoiceAmt = default(MultiCurrencyMoneyOpenApi), string payOriginal = default(string), string payStatus = default(string), string payWay = default(string), string payeeAccount = default(string), string payerAccount = default(string), string payerIpRoleId = default(string), string prodCode = default(string), MultiCurrencyMoneyOpenApi receivedAmt = default(MultiCurrencyMoneyOpenApi), string recordId = default(string), MultiCurrencyMoneyOpenApi serviceAmt = default(MultiCurrencyMoneyOpenApi), string settleType = default(string), string signIpId = default(string), string signIpRoleId = default(string), string stlIpRoleId = default(string), MultiCurrencyMoneyOpenApi taxAmt = default(MultiCurrencyMoneyOpenApi), int taxRate = default(int), string taxType = default(string), int toWriteoffDetailCount = default(int), string type = default(string), int writeoffDetailDount = default(int), MultiCurrencyMoneyOpenApi writingoffAmt = default(MultiCurrencyMoneyOpenApi))
        {
            this.AccountDay = accountDay;
            this.AccruedDate = accruedDate;
            this.AdjustAmt = adjustAmt;
            this.AnalysisDmsn1 = analysisDmsn1;
            this.AnalysisDmsn2 = analysisDmsn2;
            this.AnalysisDmsn3 = analysisDmsn3;
            this.AnalysisDmsn4 = analysisDmsn4;
            this.ArrangementNo = arrangementNo;
            this.BillAmt = billAmt;
            this.BillEndDate = billEndDate;
            this.BillMonth = billMonth;
            this.BillNo = billNo;
            this.BillStartDate = billStartDate;
            this.BillType = billType;
            this.ChargeItemCode = chargeItemCode;
            this.ChargeType = chargeType;
            this.CheckStatus = checkStatus;
            this.CheckedAmt = checkedAmt;
            this.CheckingAmt = checkingAmt;
            this.ClcnBasicAmt = clcnBasicAmt;
            this.ClcnBasicType = clcnBasicType;
            this.ClcnMethod = clcnMethod;
            this.FreezeAmt = freezeAmt;
            this.GmtCreate = gmtCreate;
            this.GmtModified = gmtModified;
            this.GmtPay = gmtPay;
            this.InstId = instId;
            this.InvoiceAmt = invoiceAmt;
            this.InvoicedAmt = invoicedAmt;
            this.IpId = ipId;
            this.IpName = ipName;
            this.IpRoleId = ipRoleId;
            this.LastModer = lastModer;
            this.LinkInvoiceAmt = linkInvoiceAmt;
            this.PayOriginal = payOriginal;
            this.PayStatus = payStatus;
            this.PayWay = payWay;
            this.PayeeAccount = payeeAccount;
            this.PayerAccount = payerAccount;
            this.PayerIpRoleId = payerIpRoleId;
            this.ProdCode = prodCode;
            this.ReceivedAmt = receivedAmt;
            this.RecordId = recordId;
            this.ServiceAmt = serviceAmt;
            this.SettleType = settleType;
            this.SignIpId = signIpId;
            this.SignIpRoleId = signIpRoleId;
            this.StlIpRoleId = stlIpRoleId;
            this.TaxAmt = taxAmt;
            this.TaxRate = taxRate;
            this.TaxType = taxType;
            this.ToWriteoffDetailCount = toWriteoffDetailCount;
            this.Type = type;
            this.WriteoffDetailDount = writeoffDetailDount;
            this.WritingoffAmt = writingoffAmt;
        }

        /// <summary>
        /// 出账日
        /// </summary>
        /// <value>出账日</value>
        [DataMember(Name = "account_day", EmitDefaultValue = false)]
        public string AccountDay { get; set; }

        /// <summary>
        /// 应收日期(yyyyMMdd)
        /// </summary>
        /// <value>应收日期(yyyyMMdd)</value>
        [DataMember(Name = "accrued_date", EmitDefaultValue = false)]
        public string AccruedDate { get; set; }

        /// <summary>
        /// Gets or Sets AdjustAmt
        /// </summary>
        [DataMember(Name = "adjust_amt", EmitDefaultValue = false)]
        public MultiCurrencyMoneyOpenApi AdjustAmt { get; set; }

        /// <summary>
        /// 分析维度1
        /// </summary>
        /// <value>分析维度1</value>
        [DataMember(Name = "analysis_dmsn_1", EmitDefaultValue = false)]
        public string AnalysisDmsn1 { get; set; }

        /// <summary>
        /// 分析维度2
        /// </summary>
        /// <value>分析维度2</value>
        [DataMember(Name = "analysis_dmsn_2", EmitDefaultValue = false)]
        public string AnalysisDmsn2 { get; set; }

        /// <summary>
        /// 分析维度3
        /// </summary>
        /// <value>分析维度3</value>
        [DataMember(Name = "analysis_dmsn_3", EmitDefaultValue = false)]
        public string AnalysisDmsn3 { get; set; }

        /// <summary>
        /// 分析维度4
        /// </summary>
        /// <value>分析维度4</value>
        [DataMember(Name = "analysis_dmsn_4", EmitDefaultValue = false)]
        public string AnalysisDmsn4 { get; set; }

        /// <summary>
        /// 合约号，商户签约产品对应的合约号
        /// </summary>
        /// <value>合约号，商户签约产品对应的合约号</value>
        [DataMember(Name = "arrangement_no", EmitDefaultValue = false)]
        public string ArrangementNo { get; set; }

        /// <summary>
        /// Gets or Sets BillAmt
        /// </summary>
        [DataMember(Name = "bill_amt", EmitDefaultValue = false)]
        public MultiCurrencyMoneyOpenApi BillAmt { get; set; }

        /// <summary>
        /// 账单结束日期
        /// </summary>
        /// <value>账单结束日期</value>
        [DataMember(Name = "bill_end_date", EmitDefaultValue = false)]
        public string BillEndDate { get; set; }

        /// <summary>
        /// 账单月
        /// </summary>
        /// <value>账单月</value>
        [DataMember(Name = "bill_month", EmitDefaultValue = false)]
        public string BillMonth { get; set; }

        /// <summary>
        /// 月账单号,唯一标识月账单的ID
        /// </summary>
        /// <value>月账单号,唯一标识月账单的ID</value>
        [DataMember(Name = "bill_no", EmitDefaultValue = false)]
        public string BillNo { get; set; }

        /// <summary>
        /// 账单开始日期
        /// </summary>
        /// <value>账单开始日期</value>
        [DataMember(Name = "bill_start_date", EmitDefaultValue = false)]
        public string BillStartDate { get; set; }

        /// <summary>
        /// 账单类型  21：应收月账单  目前仅支持该类型的账单类型
        /// </summary>
        /// <value>账单类型  21：应收月账单  目前仅支持该类型的账单类型</value>
        [DataMember(Name = "bill_type", EmitDefaultValue = false)]
        public string BillType { get; set; }

        /// <summary>
        /// 收费项编码
        /// </summary>
        /// <value>收费项编码</value>
        [DataMember(Name = "charge_item_code", EmitDefaultValue = false)]
        public string ChargeItemCode { get; set; }

        /// <summary>
        /// 计费类型  01：云在线计费，02：离线计费，03：老主站计收费，04：芝麻在线计收费
        /// </summary>
        /// <value>计费类型  01：云在线计费，02：离线计费，03：老主站计收费，04：芝麻在线计收费</value>
        [DataMember(Name = "charge_type", EmitDefaultValue = false)]
        public string ChargeType { get; set; }

        /// <summary>
        /// 出账状态  01：账单生成，02：待确认出账，03：已出账，04：客户已对账，05：对账差异，06：部分出账
        /// </summary>
        /// <value>出账状态  01：账单生成，02：待确认出账，03：已出账，04：客户已对账，05：对账差异，06：部分出账</value>
        [DataMember(Name = "check_status", EmitDefaultValue = false)]
        public string CheckStatus { get; set; }

        /// <summary>
        /// Gets or Sets CheckedAmt
        /// </summary>
        [DataMember(Name = "checked_amt", EmitDefaultValue = false)]
        public MultiCurrencyMoneyOpenApi CheckedAmt { get; set; }

        /// <summary>
        /// Gets or Sets CheckingAmt
        /// </summary>
        [DataMember(Name = "checking_amt", EmitDefaultValue = false)]
        public MultiCurrencyMoneyOpenApi CheckingAmt { get; set; }

        /// <summary>
        /// 计算依据
        /// </summary>
        /// <value>计算依据</value>
        [DataMember(Name = "clcn_basic_amt", EmitDefaultValue = false)]
        public int ClcnBasicAmt { get; set; }

        /// <summary>
        /// 计算依据类型  01：交易金额，02：交易笔数，03：交易张数，04：资费依据扩展，05：其他
        /// </summary>
        /// <value>计算依据类型  01：交易金额，02：交易笔数，03：交易张数，04：资费依据扩展，05：其他</value>
        [DataMember(Name = "clcn_basic_type", EmitDefaultValue = false)]
        public string ClcnBasicType { get; set; }

        /// <summary>
        /// 计算方法  01：差额累进，02：全额累进，03：按传入金额收费，04：价格包量，05：包时间周期，06：按时间全额累进，07：包时间周期差额累进，08：期间差额累进，09：期间全额累进，10：包时间周期单笔，11：标准单笔计费，12：包时间周期单笔-按照传入金额计费，13：期间靠档差额累进，靠档计息使用，14：自定义
        /// </summary>
        /// <value>计算方法  01：差额累进，02：全额累进，03：按传入金额收费，04：价格包量，05：包时间周期，06：按时间全额累进，07：包时间周期差额累进，08：期间差额累进，09：期间全额累进，10：包时间周期单笔，11：标准单笔计费，12：包时间周期单笔-按照传入金额计费，13：期间靠档差额累进，靠档计息使用，14：自定义</value>
        [DataMember(Name = "clcn_method", EmitDefaultValue = false)]
        public string ClcnMethod { get; set; }

        /// <summary>
        /// Gets or Sets FreezeAmt
        /// </summary>
        [DataMember(Name = "freeze_amt", EmitDefaultValue = false)]
        public MultiCurrencyMoneyOpenApi FreezeAmt { get; set; }

        /// <summary>
        /// 创建时间（创建备份时需要）
        /// </summary>
        /// <value>创建时间（创建备份时需要）</value>
        [DataMember(Name = "gmt_create", EmitDefaultValue = false)]
        public string GmtCreate { get; set; }

        /// <summary>
        /// 修改时间（创建备份时需要）
        /// </summary>
        /// <value>修改时间（创建备份时需要）</value>
        [DataMember(Name = "gmt_modified", EmitDefaultValue = false)]
        public string GmtModified { get; set; }

        /// <summary>
        /// 付款时间
        /// </summary>
        /// <value>付款时间</value>
        [DataMember(Name = "gmt_pay", EmitDefaultValue = false)]
        public string GmtPay { get; set; }

        /// <summary>
        /// 分支机构号
        /// </summary>
        /// <value>分支机构号</value>
        [DataMember(Name = "inst_id", EmitDefaultValue = false)]
        public string InstId { get; set; }

        /// <summary>
        /// Gets or Sets InvoiceAmt
        /// </summary>
        [DataMember(Name = "invoice_amt", EmitDefaultValue = false)]
        public MultiCurrencyMoneyOpenApi InvoiceAmt { get; set; }

        /// <summary>
        /// Gets or Sets InvoicedAmt
        /// </summary>
        [DataMember(Name = "invoiced_amt", EmitDefaultValue = false)]
        public MultiCurrencyMoneyOpenApi InvoicedAmt { get; set; }

        /// <summary>
        /// 结算对象参与者标识
        /// </summary>
        /// <value>结算对象参与者标识</value>
        [DataMember(Name = "ip_id", EmitDefaultValue = false)]
        public string IpId { get; set; }

        /// <summary>
        /// 参与者名字
        /// </summary>
        /// <value>参与者名字</value>
        [DataMember(Name = "ip_name", EmitDefaultValue = false)]
        public string IpName { get; set; }

        /// <summary>
        /// 结算对象参与者角色标识
        /// </summary>
        /// <value>结算对象参与者角色标识</value>
        [DataMember(Name = "ip_role_id", EmitDefaultValue = false)]
        public string IpRoleId { get; set; }

        /// <summary>
        /// 最后修改人
        /// </summary>
        /// <value>最后修改人</value>
        [DataMember(Name = "last_moder", EmitDefaultValue = false)]
        public string LastModer { get; set; }

        /// <summary>
        /// Gets or Sets LinkInvoiceAmt
        /// </summary>
        [DataMember(Name = "link_invoice_amt", EmitDefaultValue = false)]
        public MultiCurrencyMoneyOpenApi LinkInvoiceAmt { get; set; }

        /// <summary>
        /// 付款来源  1：主账务，2：包量，3：预收，4：预存，5：银行，6：积分，7：统一支付，8：支付受理
        /// </summary>
        /// <value>付款来源  1：主账务，2：包量，3：预收，4：预存，5：银行，6：积分，7：统一支付，8：支付受理</value>
        [DataMember(Name = "pay_original", EmitDefaultValue = false)]
        public string PayOriginal { get; set; }

        /// <summary>
        /// 付款状态  01：待结算；02：部分结算；03：结算完成
        /// </summary>
        /// <value>付款状态  01：待结算；02：部分结算；03：结算完成</value>
        [DataMember(Name = "pay_status", EmitDefaultValue = false)]
        public string PayStatus { get; set; }

        /// <summary>
        /// 付款方式  1：资金；2：包量
        /// </summary>
        /// <value>付款方式  1：资金；2：包量</value>
        [DataMember(Name = "pay_way", EmitDefaultValue = false)]
        public string PayWay { get; set; }

        /// <summary>
        /// 收款方账号
        /// </summary>
        /// <value>收款方账号</value>
        [DataMember(Name = "payee_account", EmitDefaultValue = false)]
        public string PayeeAccount { get; set; }

        /// <summary>
        /// 付款方账号
        /// </summary>
        /// <value>付款方账号</value>
        [DataMember(Name = "payer_account", EmitDefaultValue = false)]
        public string PayerAccount { get; set; }

        /// <summary>
        /// 扣款对象pid
        /// </summary>
        /// <value>扣款对象pid</value>
        [DataMember(Name = "payer_ip_role_id", EmitDefaultValue = false)]
        public string PayerIpRoleId { get; set; }

        /// <summary>
        /// 产品码
        /// </summary>
        /// <value>产品码</value>
        [DataMember(Name = "prod_code", EmitDefaultValue = false)]
        public string ProdCode { get; set; }

        /// <summary>
        /// Gets or Sets ReceivedAmt
        /// </summary>
        [DataMember(Name = "received_amt", EmitDefaultValue = false)]
        public MultiCurrencyMoneyOpenApi ReceivedAmt { get; set; }

        /// <summary>
        /// 记录id，账单全局唯一号
        /// </summary>
        /// <value>记录id，账单全局唯一号</value>
        [DataMember(Name = "record_id", EmitDefaultValue = false)]
        public string RecordId { get; set; }

        /// <summary>
        /// Gets or Sets ServiceAmt
        /// </summary>
        [DataMember(Name = "service_amt", EmitDefaultValue = false)]
        public MultiCurrencyMoneyOpenApi ServiceAmt { get; set; }

        /// <summary>
        /// 结算类型  01：实时；02：预收；03：后收；04：周期结算；05：按日汇总结算；09：延期结算
        /// </summary>
        /// <value>结算类型  01：实时；02：预收；03：后收；04：周期结算；05：按日汇总结算；09：延期结算</value>
        [DataMember(Name = "settle_type", EmitDefaultValue = false)]
        public string SettleType { get; set; }

        /// <summary>
        /// 签约对象参与者标识
        /// </summary>
        /// <value>签约对象参与者标识</value>
        [DataMember(Name = "sign_ip_id", EmitDefaultValue = false)]
        public string SignIpId { get; set; }

        /// <summary>
        /// 签约对象参与者角色标识
        /// </summary>
        /// <value>签约对象参与者角色标识</value>
        [DataMember(Name = "sign_ip_role_id", EmitDefaultValue = false)]
        public string SignIpRoleId { get; set; }

        /// <summary>
        /// 结算对象PID
        /// </summary>
        /// <value>结算对象PID</value>
        [DataMember(Name = "stl_ip_role_id", EmitDefaultValue = false)]
        public string StlIpRoleId { get; set; }

        /// <summary>
        /// Gets or Sets TaxAmt
        /// </summary>
        [DataMember(Name = "tax_amt", EmitDefaultValue = false)]
        public MultiCurrencyMoneyOpenApi TaxAmt { get; set; }

        /// <summary>
        /// 税率
        /// </summary>
        /// <value>税率</value>
        [DataMember(Name = "tax_rate", EmitDefaultValue = false)]
        public int TaxRate { get; set; }

        /// <summary>
        /// 税收类型，01：增值税，02：营业税  营业税已经在大部分行业废弃，要传入需咨询后再确认
        /// </summary>
        /// <value>税收类型，01：增值税，02：营业税  营业税已经在大部分行业废弃，要传入需咨询后再确认</value>
        [DataMember(Name = "tax_type", EmitDefaultValue = false)]
        public string TaxType { get; set; }

        /// <summary>
        /// 待核销明细数量
        /// </summary>
        /// <value>待核销明细数量</value>
        [DataMember(Name = "to_writeoff_detail_count", EmitDefaultValue = false)]
        public int ToWriteoffDetailCount { get; set; }

        /// <summary>
        /// 账单分类 1应收，2返点
        /// </summary>
        /// <value>账单分类 1应收，2返点</value>
        [DataMember(Name = "type", EmitDefaultValue = false)]
        public string Type { get; set; }

        /// <summary>
        /// 核销明细数量
        /// </summary>
        /// <value>核销明细数量</value>
        [DataMember(Name = "writeoff_detail_dount", EmitDefaultValue = false)]
        public int WriteoffDetailDount { get; set; }

        /// <summary>
        /// Gets or Sets WritingoffAmt
        /// </summary>
        [DataMember(Name = "writingoff_amt", EmitDefaultValue = false)]
        public MultiCurrencyMoneyOpenApi WritingoffAmt { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ArMonthlyBillDTO {\n");
            sb.Append("  AccountDay: ").Append(AccountDay).Append("\n");
            sb.Append("  AccruedDate: ").Append(AccruedDate).Append("\n");
            sb.Append("  AdjustAmt: ").Append(AdjustAmt).Append("\n");
            sb.Append("  AnalysisDmsn1: ").Append(AnalysisDmsn1).Append("\n");
            sb.Append("  AnalysisDmsn2: ").Append(AnalysisDmsn2).Append("\n");
            sb.Append("  AnalysisDmsn3: ").Append(AnalysisDmsn3).Append("\n");
            sb.Append("  AnalysisDmsn4: ").Append(AnalysisDmsn4).Append("\n");
            sb.Append("  ArrangementNo: ").Append(ArrangementNo).Append("\n");
            sb.Append("  BillAmt: ").Append(BillAmt).Append("\n");
            sb.Append("  BillEndDate: ").Append(BillEndDate).Append("\n");
            sb.Append("  BillMonth: ").Append(BillMonth).Append("\n");
            sb.Append("  BillNo: ").Append(BillNo).Append("\n");
            sb.Append("  BillStartDate: ").Append(BillStartDate).Append("\n");
            sb.Append("  BillType: ").Append(BillType).Append("\n");
            sb.Append("  ChargeItemCode: ").Append(ChargeItemCode).Append("\n");
            sb.Append("  ChargeType: ").Append(ChargeType).Append("\n");
            sb.Append("  CheckStatus: ").Append(CheckStatus).Append("\n");
            sb.Append("  CheckedAmt: ").Append(CheckedAmt).Append("\n");
            sb.Append("  CheckingAmt: ").Append(CheckingAmt).Append("\n");
            sb.Append("  ClcnBasicAmt: ").Append(ClcnBasicAmt).Append("\n");
            sb.Append("  ClcnBasicType: ").Append(ClcnBasicType).Append("\n");
            sb.Append("  ClcnMethod: ").Append(ClcnMethod).Append("\n");
            sb.Append("  FreezeAmt: ").Append(FreezeAmt).Append("\n");
            sb.Append("  GmtCreate: ").Append(GmtCreate).Append("\n");
            sb.Append("  GmtModified: ").Append(GmtModified).Append("\n");
            sb.Append("  GmtPay: ").Append(GmtPay).Append("\n");
            sb.Append("  InstId: ").Append(InstId).Append("\n");
            sb.Append("  InvoiceAmt: ").Append(InvoiceAmt).Append("\n");
            sb.Append("  InvoicedAmt: ").Append(InvoicedAmt).Append("\n");
            sb.Append("  IpId: ").Append(IpId).Append("\n");
            sb.Append("  IpName: ").Append(IpName).Append("\n");
            sb.Append("  IpRoleId: ").Append(IpRoleId).Append("\n");
            sb.Append("  LastModer: ").Append(LastModer).Append("\n");
            sb.Append("  LinkInvoiceAmt: ").Append(LinkInvoiceAmt).Append("\n");
            sb.Append("  PayOriginal: ").Append(PayOriginal).Append("\n");
            sb.Append("  PayStatus: ").Append(PayStatus).Append("\n");
            sb.Append("  PayWay: ").Append(PayWay).Append("\n");
            sb.Append("  PayeeAccount: ").Append(PayeeAccount).Append("\n");
            sb.Append("  PayerAccount: ").Append(PayerAccount).Append("\n");
            sb.Append("  PayerIpRoleId: ").Append(PayerIpRoleId).Append("\n");
            sb.Append("  ProdCode: ").Append(ProdCode).Append("\n");
            sb.Append("  ReceivedAmt: ").Append(ReceivedAmt).Append("\n");
            sb.Append("  RecordId: ").Append(RecordId).Append("\n");
            sb.Append("  ServiceAmt: ").Append(ServiceAmt).Append("\n");
            sb.Append("  SettleType: ").Append(SettleType).Append("\n");
            sb.Append("  SignIpId: ").Append(SignIpId).Append("\n");
            sb.Append("  SignIpRoleId: ").Append(SignIpRoleId).Append("\n");
            sb.Append("  StlIpRoleId: ").Append(StlIpRoleId).Append("\n");
            sb.Append("  TaxAmt: ").Append(TaxAmt).Append("\n");
            sb.Append("  TaxRate: ").Append(TaxRate).Append("\n");
            sb.Append("  TaxType: ").Append(TaxType).Append("\n");
            sb.Append("  ToWriteoffDetailCount: ").Append(ToWriteoffDetailCount).Append("\n");
            sb.Append("  Type: ").Append(Type).Append("\n");
            sb.Append("  WriteoffDetailDount: ").Append(WriteoffDetailDount).Append("\n");
            sb.Append("  WritingoffAmt: ").Append(WritingoffAmt).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ArMonthlyBillDTO);
        }

        /// <summary>
        /// Returns true if ArMonthlyBillDTO instances are equal
        /// </summary>
        /// <param name="input">Instance of ArMonthlyBillDTO to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ArMonthlyBillDTO input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.AccountDay == input.AccountDay ||
                    (this.AccountDay != null &&
                    this.AccountDay.Equals(input.AccountDay))
                ) && 
                (
                    this.AccruedDate == input.AccruedDate ||
                    (this.AccruedDate != null &&
                    this.AccruedDate.Equals(input.AccruedDate))
                ) && 
                (
                    this.AdjustAmt == input.AdjustAmt ||
                    (this.AdjustAmt != null &&
                    this.AdjustAmt.Equals(input.AdjustAmt))
                ) && 
                (
                    this.AnalysisDmsn1 == input.AnalysisDmsn1 ||
                    (this.AnalysisDmsn1 != null &&
                    this.AnalysisDmsn1.Equals(input.AnalysisDmsn1))
                ) && 
                (
                    this.AnalysisDmsn2 == input.AnalysisDmsn2 ||
                    (this.AnalysisDmsn2 != null &&
                    this.AnalysisDmsn2.Equals(input.AnalysisDmsn2))
                ) && 
                (
                    this.AnalysisDmsn3 == input.AnalysisDmsn3 ||
                    (this.AnalysisDmsn3 != null &&
                    this.AnalysisDmsn3.Equals(input.AnalysisDmsn3))
                ) && 
                (
                    this.AnalysisDmsn4 == input.AnalysisDmsn4 ||
                    (this.AnalysisDmsn4 != null &&
                    this.AnalysisDmsn4.Equals(input.AnalysisDmsn4))
                ) && 
                (
                    this.ArrangementNo == input.ArrangementNo ||
                    (this.ArrangementNo != null &&
                    this.ArrangementNo.Equals(input.ArrangementNo))
                ) && 
                (
                    this.BillAmt == input.BillAmt ||
                    (this.BillAmt != null &&
                    this.BillAmt.Equals(input.BillAmt))
                ) && 
                (
                    this.BillEndDate == input.BillEndDate ||
                    (this.BillEndDate != null &&
                    this.BillEndDate.Equals(input.BillEndDate))
                ) && 
                (
                    this.BillMonth == input.BillMonth ||
                    (this.BillMonth != null &&
                    this.BillMonth.Equals(input.BillMonth))
                ) && 
                (
                    this.BillNo == input.BillNo ||
                    (this.BillNo != null &&
                    this.BillNo.Equals(input.BillNo))
                ) && 
                (
                    this.BillStartDate == input.BillStartDate ||
                    (this.BillStartDate != null &&
                    this.BillStartDate.Equals(input.BillStartDate))
                ) && 
                (
                    this.BillType == input.BillType ||
                    (this.BillType != null &&
                    this.BillType.Equals(input.BillType))
                ) && 
                (
                    this.ChargeItemCode == input.ChargeItemCode ||
                    (this.ChargeItemCode != null &&
                    this.ChargeItemCode.Equals(input.ChargeItemCode))
                ) && 
                (
                    this.ChargeType == input.ChargeType ||
                    (this.ChargeType != null &&
                    this.ChargeType.Equals(input.ChargeType))
                ) && 
                (
                    this.CheckStatus == input.CheckStatus ||
                    (this.CheckStatus != null &&
                    this.CheckStatus.Equals(input.CheckStatus))
                ) && 
                (
                    this.CheckedAmt == input.CheckedAmt ||
                    (this.CheckedAmt != null &&
                    this.CheckedAmt.Equals(input.CheckedAmt))
                ) && 
                (
                    this.CheckingAmt == input.CheckingAmt ||
                    (this.CheckingAmt != null &&
                    this.CheckingAmt.Equals(input.CheckingAmt))
                ) && 
                (
                    this.ClcnBasicAmt == input.ClcnBasicAmt ||
                    this.ClcnBasicAmt.Equals(input.ClcnBasicAmt)
                ) && 
                (
                    this.ClcnBasicType == input.ClcnBasicType ||
                    (this.ClcnBasicType != null &&
                    this.ClcnBasicType.Equals(input.ClcnBasicType))
                ) && 
                (
                    this.ClcnMethod == input.ClcnMethod ||
                    (this.ClcnMethod != null &&
                    this.ClcnMethod.Equals(input.ClcnMethod))
                ) && 
                (
                    this.FreezeAmt == input.FreezeAmt ||
                    (this.FreezeAmt != null &&
                    this.FreezeAmt.Equals(input.FreezeAmt))
                ) && 
                (
                    this.GmtCreate == input.GmtCreate ||
                    (this.GmtCreate != null &&
                    this.GmtCreate.Equals(input.GmtCreate))
                ) && 
                (
                    this.GmtModified == input.GmtModified ||
                    (this.GmtModified != null &&
                    this.GmtModified.Equals(input.GmtModified))
                ) && 
                (
                    this.GmtPay == input.GmtPay ||
                    (this.GmtPay != null &&
                    this.GmtPay.Equals(input.GmtPay))
                ) && 
                (
                    this.InstId == input.InstId ||
                    (this.InstId != null &&
                    this.InstId.Equals(input.InstId))
                ) && 
                (
                    this.InvoiceAmt == input.InvoiceAmt ||
                    (this.InvoiceAmt != null &&
                    this.InvoiceAmt.Equals(input.InvoiceAmt))
                ) && 
                (
                    this.InvoicedAmt == input.InvoicedAmt ||
                    (this.InvoicedAmt != null &&
                    this.InvoicedAmt.Equals(input.InvoicedAmt))
                ) && 
                (
                    this.IpId == input.IpId ||
                    (this.IpId != null &&
                    this.IpId.Equals(input.IpId))
                ) && 
                (
                    this.IpName == input.IpName ||
                    (this.IpName != null &&
                    this.IpName.Equals(input.IpName))
                ) && 
                (
                    this.IpRoleId == input.IpRoleId ||
                    (this.IpRoleId != null &&
                    this.IpRoleId.Equals(input.IpRoleId))
                ) && 
                (
                    this.LastModer == input.LastModer ||
                    (this.LastModer != null &&
                    this.LastModer.Equals(input.LastModer))
                ) && 
                (
                    this.LinkInvoiceAmt == input.LinkInvoiceAmt ||
                    (this.LinkInvoiceAmt != null &&
                    this.LinkInvoiceAmt.Equals(input.LinkInvoiceAmt))
                ) && 
                (
                    this.PayOriginal == input.PayOriginal ||
                    (this.PayOriginal != null &&
                    this.PayOriginal.Equals(input.PayOriginal))
                ) && 
                (
                    this.PayStatus == input.PayStatus ||
                    (this.PayStatus != null &&
                    this.PayStatus.Equals(input.PayStatus))
                ) && 
                (
                    this.PayWay == input.PayWay ||
                    (this.PayWay != null &&
                    this.PayWay.Equals(input.PayWay))
                ) && 
                (
                    this.PayeeAccount == input.PayeeAccount ||
                    (this.PayeeAccount != null &&
                    this.PayeeAccount.Equals(input.PayeeAccount))
                ) && 
                (
                    this.PayerAccount == input.PayerAccount ||
                    (this.PayerAccount != null &&
                    this.PayerAccount.Equals(input.PayerAccount))
                ) && 
                (
                    this.PayerIpRoleId == input.PayerIpRoleId ||
                    (this.PayerIpRoleId != null &&
                    this.PayerIpRoleId.Equals(input.PayerIpRoleId))
                ) && 
                (
                    this.ProdCode == input.ProdCode ||
                    (this.ProdCode != null &&
                    this.ProdCode.Equals(input.ProdCode))
                ) && 
                (
                    this.ReceivedAmt == input.ReceivedAmt ||
                    (this.ReceivedAmt != null &&
                    this.ReceivedAmt.Equals(input.ReceivedAmt))
                ) && 
                (
                    this.RecordId == input.RecordId ||
                    (this.RecordId != null &&
                    this.RecordId.Equals(input.RecordId))
                ) && 
                (
                    this.ServiceAmt == input.ServiceAmt ||
                    (this.ServiceAmt != null &&
                    this.ServiceAmt.Equals(input.ServiceAmt))
                ) && 
                (
                    this.SettleType == input.SettleType ||
                    (this.SettleType != null &&
                    this.SettleType.Equals(input.SettleType))
                ) && 
                (
                    this.SignIpId == input.SignIpId ||
                    (this.SignIpId != null &&
                    this.SignIpId.Equals(input.SignIpId))
                ) && 
                (
                    this.SignIpRoleId == input.SignIpRoleId ||
                    (this.SignIpRoleId != null &&
                    this.SignIpRoleId.Equals(input.SignIpRoleId))
                ) && 
                (
                    this.StlIpRoleId == input.StlIpRoleId ||
                    (this.StlIpRoleId != null &&
                    this.StlIpRoleId.Equals(input.StlIpRoleId))
                ) && 
                (
                    this.TaxAmt == input.TaxAmt ||
                    (this.TaxAmt != null &&
                    this.TaxAmt.Equals(input.TaxAmt))
                ) && 
                (
                    this.TaxRate == input.TaxRate ||
                    this.TaxRate.Equals(input.TaxRate)
                ) && 
                (
                    this.TaxType == input.TaxType ||
                    (this.TaxType != null &&
                    this.TaxType.Equals(input.TaxType))
                ) && 
                (
                    this.ToWriteoffDetailCount == input.ToWriteoffDetailCount ||
                    this.ToWriteoffDetailCount.Equals(input.ToWriteoffDetailCount)
                ) && 
                (
                    this.Type == input.Type ||
                    (this.Type != null &&
                    this.Type.Equals(input.Type))
                ) && 
                (
                    this.WriteoffDetailDount == input.WriteoffDetailDount ||
                    this.WriteoffDetailDount.Equals(input.WriteoffDetailDount)
                ) && 
                (
                    this.WritingoffAmt == input.WritingoffAmt ||
                    (this.WritingoffAmt != null &&
                    this.WritingoffAmt.Equals(input.WritingoffAmt))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.AccountDay != null)
                {
                    hashCode = (hashCode * 59) + this.AccountDay.GetHashCode();
                }
                if (this.AccruedDate != null)
                {
                    hashCode = (hashCode * 59) + this.AccruedDate.GetHashCode();
                }
                if (this.AdjustAmt != null)
                {
                    hashCode = (hashCode * 59) + this.AdjustAmt.GetHashCode();
                }
                if (this.AnalysisDmsn1 != null)
                {
                    hashCode = (hashCode * 59) + this.AnalysisDmsn1.GetHashCode();
                }
                if (this.AnalysisDmsn2 != null)
                {
                    hashCode = (hashCode * 59) + this.AnalysisDmsn2.GetHashCode();
                }
                if (this.AnalysisDmsn3 != null)
                {
                    hashCode = (hashCode * 59) + this.AnalysisDmsn3.GetHashCode();
                }
                if (this.AnalysisDmsn4 != null)
                {
                    hashCode = (hashCode * 59) + this.AnalysisDmsn4.GetHashCode();
                }
                if (this.ArrangementNo != null)
                {
                    hashCode = (hashCode * 59) + this.ArrangementNo.GetHashCode();
                }
                if (this.BillAmt != null)
                {
                    hashCode = (hashCode * 59) + this.BillAmt.GetHashCode();
                }
                if (this.BillEndDate != null)
                {
                    hashCode = (hashCode * 59) + this.BillEndDate.GetHashCode();
                }
                if (this.BillMonth != null)
                {
                    hashCode = (hashCode * 59) + this.BillMonth.GetHashCode();
                }
                if (this.BillNo != null)
                {
                    hashCode = (hashCode * 59) + this.BillNo.GetHashCode();
                }
                if (this.BillStartDate != null)
                {
                    hashCode = (hashCode * 59) + this.BillStartDate.GetHashCode();
                }
                if (this.BillType != null)
                {
                    hashCode = (hashCode * 59) + this.BillType.GetHashCode();
                }
                if (this.ChargeItemCode != null)
                {
                    hashCode = (hashCode * 59) + this.ChargeItemCode.GetHashCode();
                }
                if (this.ChargeType != null)
                {
                    hashCode = (hashCode * 59) + this.ChargeType.GetHashCode();
                }
                if (this.CheckStatus != null)
                {
                    hashCode = (hashCode * 59) + this.CheckStatus.GetHashCode();
                }
                if (this.CheckedAmt != null)
                {
                    hashCode = (hashCode * 59) + this.CheckedAmt.GetHashCode();
                }
                if (this.CheckingAmt != null)
                {
                    hashCode = (hashCode * 59) + this.CheckingAmt.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.ClcnBasicAmt.GetHashCode();
                if (this.ClcnBasicType != null)
                {
                    hashCode = (hashCode * 59) + this.ClcnBasicType.GetHashCode();
                }
                if (this.ClcnMethod != null)
                {
                    hashCode = (hashCode * 59) + this.ClcnMethod.GetHashCode();
                }
                if (this.FreezeAmt != null)
                {
                    hashCode = (hashCode * 59) + this.FreezeAmt.GetHashCode();
                }
                if (this.GmtCreate != null)
                {
                    hashCode = (hashCode * 59) + this.GmtCreate.GetHashCode();
                }
                if (this.GmtModified != null)
                {
                    hashCode = (hashCode * 59) + this.GmtModified.GetHashCode();
                }
                if (this.GmtPay != null)
                {
                    hashCode = (hashCode * 59) + this.GmtPay.GetHashCode();
                }
                if (this.InstId != null)
                {
                    hashCode = (hashCode * 59) + this.InstId.GetHashCode();
                }
                if (this.InvoiceAmt != null)
                {
                    hashCode = (hashCode * 59) + this.InvoiceAmt.GetHashCode();
                }
                if (this.InvoicedAmt != null)
                {
                    hashCode = (hashCode * 59) + this.InvoicedAmt.GetHashCode();
                }
                if (this.IpId != null)
                {
                    hashCode = (hashCode * 59) + this.IpId.GetHashCode();
                }
                if (this.IpName != null)
                {
                    hashCode = (hashCode * 59) + this.IpName.GetHashCode();
                }
                if (this.IpRoleId != null)
                {
                    hashCode = (hashCode * 59) + this.IpRoleId.GetHashCode();
                }
                if (this.LastModer != null)
                {
                    hashCode = (hashCode * 59) + this.LastModer.GetHashCode();
                }
                if (this.LinkInvoiceAmt != null)
                {
                    hashCode = (hashCode * 59) + this.LinkInvoiceAmt.GetHashCode();
                }
                if (this.PayOriginal != null)
                {
                    hashCode = (hashCode * 59) + this.PayOriginal.GetHashCode();
                }
                if (this.PayStatus != null)
                {
                    hashCode = (hashCode * 59) + this.PayStatus.GetHashCode();
                }
                if (this.PayWay != null)
                {
                    hashCode = (hashCode * 59) + this.PayWay.GetHashCode();
                }
                if (this.PayeeAccount != null)
                {
                    hashCode = (hashCode * 59) + this.PayeeAccount.GetHashCode();
                }
                if (this.PayerAccount != null)
                {
                    hashCode = (hashCode * 59) + this.PayerAccount.GetHashCode();
                }
                if (this.PayerIpRoleId != null)
                {
                    hashCode = (hashCode * 59) + this.PayerIpRoleId.GetHashCode();
                }
                if (this.ProdCode != null)
                {
                    hashCode = (hashCode * 59) + this.ProdCode.GetHashCode();
                }
                if (this.ReceivedAmt != null)
                {
                    hashCode = (hashCode * 59) + this.ReceivedAmt.GetHashCode();
                }
                if (this.RecordId != null)
                {
                    hashCode = (hashCode * 59) + this.RecordId.GetHashCode();
                }
                if (this.ServiceAmt != null)
                {
                    hashCode = (hashCode * 59) + this.ServiceAmt.GetHashCode();
                }
                if (this.SettleType != null)
                {
                    hashCode = (hashCode * 59) + this.SettleType.GetHashCode();
                }
                if (this.SignIpId != null)
                {
                    hashCode = (hashCode * 59) + this.SignIpId.GetHashCode();
                }
                if (this.SignIpRoleId != null)
                {
                    hashCode = (hashCode * 59) + this.SignIpRoleId.GetHashCode();
                }
                if (this.StlIpRoleId != null)
                {
                    hashCode = (hashCode * 59) + this.StlIpRoleId.GetHashCode();
                }
                if (this.TaxAmt != null)
                {
                    hashCode = (hashCode * 59) + this.TaxAmt.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.TaxRate.GetHashCode();
                if (this.TaxType != null)
                {
                    hashCode = (hashCode * 59) + this.TaxType.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.ToWriteoffDetailCount.GetHashCode();
                if (this.Type != null)
                {
                    hashCode = (hashCode * 59) + this.Type.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.WriteoffDetailDount.GetHashCode();
                if (this.WritingoffAmt != null)
                {
                    hashCode = (hashCode * 59) + this.WritingoffAmt.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
