/*
 * 支付宝开放平台API
 *
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2025-02-19
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = AlipaySDKNet.OpenAPI.Client.OpenAPIDateConverter;

namespace AlipaySDKNet.OpenAPI.Model
{
    /// <summary>
    /// AlipayDataBillBalanceQueryResponseModel
    /// </summary>
    [DataContract(Name = "AlipayDataBillBalanceQueryResponseModel")]
    public partial class AlipayDataBillBalanceQueryResponseModel : IEquatable<AlipayDataBillBalanceQueryResponseModel>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AlipayDataBillBalanceQueryResponseModel" /> class.
        /// </summary>
        /// <param name="availableAmount">账户可用余额.</param>
        /// <param name="freezeAmount">冻结金额。单位（元）.</param>
        /// <param name="settleAmount">待结算金额，单位（元）.</param>
        /// <param name="totalAmount">支付宝账户余额.</param>
        public AlipayDataBillBalanceQueryResponseModel(string availableAmount = default(string), string freezeAmount = default(string), string settleAmount = default(string), string totalAmount = default(string))
        {
            this.AvailableAmount = availableAmount;
            this.FreezeAmount = freezeAmount;
            this.SettleAmount = settleAmount;
            this.TotalAmount = totalAmount;
        }

        /// <summary>
        /// 账户可用余额
        /// </summary>
        /// <value>账户可用余额</value>
        [DataMember(Name = "available_amount", EmitDefaultValue = false)]
        public string AvailableAmount { get; set; }

        /// <summary>
        /// 冻结金额。单位（元）
        /// </summary>
        /// <value>冻结金额。单位（元）</value>
        [DataMember(Name = "freeze_amount", EmitDefaultValue = false)]
        public string FreezeAmount { get; set; }

        /// <summary>
        /// 待结算金额，单位（元）
        /// </summary>
        /// <value>待结算金额，单位（元）</value>
        [DataMember(Name = "settle_amount", EmitDefaultValue = false)]
        public string SettleAmount { get; set; }

        /// <summary>
        /// 支付宝账户余额
        /// </summary>
        /// <value>支付宝账户余额</value>
        [DataMember(Name = "total_amount", EmitDefaultValue = false)]
        public string TotalAmount { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class AlipayDataBillBalanceQueryResponseModel {\n");
            sb.Append("  AvailableAmount: ").Append(AvailableAmount).Append("\n");
            sb.Append("  FreezeAmount: ").Append(FreezeAmount).Append("\n");
            sb.Append("  SettleAmount: ").Append(SettleAmount).Append("\n");
            sb.Append("  TotalAmount: ").Append(TotalAmount).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as AlipayDataBillBalanceQueryResponseModel);
        }

        /// <summary>
        /// Returns true if AlipayDataBillBalanceQueryResponseModel instances are equal
        /// </summary>
        /// <param name="input">Instance of AlipayDataBillBalanceQueryResponseModel to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AlipayDataBillBalanceQueryResponseModel input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.AvailableAmount == input.AvailableAmount ||
                    (this.AvailableAmount != null &&
                    this.AvailableAmount.Equals(input.AvailableAmount))
                ) && 
                (
                    this.FreezeAmount == input.FreezeAmount ||
                    (this.FreezeAmount != null &&
                    this.FreezeAmount.Equals(input.FreezeAmount))
                ) && 
                (
                    this.SettleAmount == input.SettleAmount ||
                    (this.SettleAmount != null &&
                    this.SettleAmount.Equals(input.SettleAmount))
                ) && 
                (
                    this.TotalAmount == input.TotalAmount ||
                    (this.TotalAmount != null &&
                    this.TotalAmount.Equals(input.TotalAmount))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.AvailableAmount != null)
                {
                    hashCode = (hashCode * 59) + this.AvailableAmount.GetHashCode();
                }
                if (this.FreezeAmount != null)
                {
                    hashCode = (hashCode * 59) + this.FreezeAmount.GetHashCode();
                }
                if (this.SettleAmount != null)
                {
                    hashCode = (hashCode * 59) + this.SettleAmount.GetHashCode();
                }
                if (this.TotalAmount != null)
                {
                    hashCode = (hashCode * 59) + this.TotalAmount.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
