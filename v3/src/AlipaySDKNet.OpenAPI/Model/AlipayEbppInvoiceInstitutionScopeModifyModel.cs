/*
 * 支付宝开放平台API
 *
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2025-02-19
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = AlipaySDKNet.OpenAPI.Client.OpenAPIDateConverter;

namespace AlipaySDKNet.OpenAPI.Model
{
    /// <summary>
    /// AlipayEbppInvoiceInstitutionScopeModifyModel
    /// </summary>
    [DataContract(Name = "AlipayEbppInvoiceInstitutionScopeModifyModel")]
    public partial class AlipayEbppInvoiceInstitutionScopeModifyModel : IEquatable<AlipayEbppInvoiceInstitutionScopeModifyModel>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AlipayEbppInvoiceInstitutionScopeModifyModel" /> class.
        /// </summary>
        /// <param name="accountId">企业共同账户id.</param>
        /// <param name="adapterType">制度适用范围类型.</param>
        /// <param name="addOwnerIdList">增加适配id列表.</param>
        /// <param name="addOwnerOpenIdList">增加适配开放id列表.</param>
        /// <param name="agreementNo">授权签约协议号.</param>
        /// <param name="enterpriseId">企业id.</param>
        /// <param name="institutionId">制度id.</param>
        /// <param name="ownerType">归属类型.</param>
        /// <param name="removeOwnerIdList">删除适配id列表.</param>
        /// <param name="removeOwnerOpenIdList">删除适配开放id列表.</param>
        public AlipayEbppInvoiceInstitutionScopeModifyModel(string accountId = default(string), string adapterType = default(string), List<string> addOwnerIdList = default(List<string>), List<string> addOwnerOpenIdList = default(List<string>), string agreementNo = default(string), string enterpriseId = default(string), string institutionId = default(string), string ownerType = default(string), List<string> removeOwnerIdList = default(List<string>), List<string> removeOwnerOpenIdList = default(List<string>))
        {
            this.AccountId = accountId;
            this.AdapterType = adapterType;
            this.AddOwnerIdList = addOwnerIdList;
            this.AddOwnerOpenIdList = addOwnerOpenIdList;
            this.AgreementNo = agreementNo;
            this.EnterpriseId = enterpriseId;
            this.InstitutionId = institutionId;
            this.OwnerType = ownerType;
            this.RemoveOwnerIdList = removeOwnerIdList;
            this.RemoveOwnerOpenIdList = removeOwnerOpenIdList;
        }

        /// <summary>
        /// 企业共同账户id
        /// </summary>
        /// <value>企业共同账户id</value>
        [DataMember(Name = "account_id", EmitDefaultValue = false)]
        public string AccountId { get; set; }

        /// <summary>
        /// 制度适用范围类型
        /// </summary>
        /// <value>制度适用范围类型</value>
        [DataMember(Name = "adapter_type", EmitDefaultValue = false)]
        public string AdapterType { get; set; }

        /// <summary>
        /// 增加适配id列表
        /// </summary>
        /// <value>增加适配id列表</value>
        [DataMember(Name = "add_owner_id_list", EmitDefaultValue = false)]
        public List<string> AddOwnerIdList { get; set; }

        /// <summary>
        /// 增加适配开放id列表
        /// </summary>
        /// <value>增加适配开放id列表</value>
        [DataMember(Name = "add_owner_open_id_list", EmitDefaultValue = false)]
        public List<string> AddOwnerOpenIdList { get; set; }

        /// <summary>
        /// 授权签约协议号
        /// </summary>
        /// <value>授权签约协议号</value>
        [DataMember(Name = "agreement_no", EmitDefaultValue = false)]
        public string AgreementNo { get; set; }

        /// <summary>
        /// 企业id
        /// </summary>
        /// <value>企业id</value>
        [DataMember(Name = "enterprise_id", EmitDefaultValue = false)]
        public string EnterpriseId { get; set; }

        /// <summary>
        /// 制度id
        /// </summary>
        /// <value>制度id</value>
        [DataMember(Name = "institution_id", EmitDefaultValue = false)]
        public string InstitutionId { get; set; }

        /// <summary>
        /// 归属类型
        /// </summary>
        /// <value>归属类型</value>
        [DataMember(Name = "owner_type", EmitDefaultValue = false)]
        public string OwnerType { get; set; }

        /// <summary>
        /// 删除适配id列表
        /// </summary>
        /// <value>删除适配id列表</value>
        [DataMember(Name = "remove_owner_id_list", EmitDefaultValue = false)]
        public List<string> RemoveOwnerIdList { get; set; }

        /// <summary>
        /// 删除适配开放id列表
        /// </summary>
        /// <value>删除适配开放id列表</value>
        [DataMember(Name = "remove_owner_open_id_list", EmitDefaultValue = false)]
        public List<string> RemoveOwnerOpenIdList { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class AlipayEbppInvoiceInstitutionScopeModifyModel {\n");
            sb.Append("  AccountId: ").Append(AccountId).Append("\n");
            sb.Append("  AdapterType: ").Append(AdapterType).Append("\n");
            sb.Append("  AddOwnerIdList: ").Append(AddOwnerIdList).Append("\n");
            sb.Append("  AddOwnerOpenIdList: ").Append(AddOwnerOpenIdList).Append("\n");
            sb.Append("  AgreementNo: ").Append(AgreementNo).Append("\n");
            sb.Append("  EnterpriseId: ").Append(EnterpriseId).Append("\n");
            sb.Append("  InstitutionId: ").Append(InstitutionId).Append("\n");
            sb.Append("  OwnerType: ").Append(OwnerType).Append("\n");
            sb.Append("  RemoveOwnerIdList: ").Append(RemoveOwnerIdList).Append("\n");
            sb.Append("  RemoveOwnerOpenIdList: ").Append(RemoveOwnerOpenIdList).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as AlipayEbppInvoiceInstitutionScopeModifyModel);
        }

        /// <summary>
        /// Returns true if AlipayEbppInvoiceInstitutionScopeModifyModel instances are equal
        /// </summary>
        /// <param name="input">Instance of AlipayEbppInvoiceInstitutionScopeModifyModel to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AlipayEbppInvoiceInstitutionScopeModifyModel input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.AccountId == input.AccountId ||
                    (this.AccountId != null &&
                    this.AccountId.Equals(input.AccountId))
                ) && 
                (
                    this.AdapterType == input.AdapterType ||
                    (this.AdapterType != null &&
                    this.AdapterType.Equals(input.AdapterType))
                ) && 
                (
                    this.AddOwnerIdList == input.AddOwnerIdList ||
                    this.AddOwnerIdList != null &&
                    input.AddOwnerIdList != null &&
                    this.AddOwnerIdList.SequenceEqual(input.AddOwnerIdList)
                ) && 
                (
                    this.AddOwnerOpenIdList == input.AddOwnerOpenIdList ||
                    this.AddOwnerOpenIdList != null &&
                    input.AddOwnerOpenIdList != null &&
                    this.AddOwnerOpenIdList.SequenceEqual(input.AddOwnerOpenIdList)
                ) && 
                (
                    this.AgreementNo == input.AgreementNo ||
                    (this.AgreementNo != null &&
                    this.AgreementNo.Equals(input.AgreementNo))
                ) && 
                (
                    this.EnterpriseId == input.EnterpriseId ||
                    (this.EnterpriseId != null &&
                    this.EnterpriseId.Equals(input.EnterpriseId))
                ) && 
                (
                    this.InstitutionId == input.InstitutionId ||
                    (this.InstitutionId != null &&
                    this.InstitutionId.Equals(input.InstitutionId))
                ) && 
                (
                    this.OwnerType == input.OwnerType ||
                    (this.OwnerType != null &&
                    this.OwnerType.Equals(input.OwnerType))
                ) && 
                (
                    this.RemoveOwnerIdList == input.RemoveOwnerIdList ||
                    this.RemoveOwnerIdList != null &&
                    input.RemoveOwnerIdList != null &&
                    this.RemoveOwnerIdList.SequenceEqual(input.RemoveOwnerIdList)
                ) && 
                (
                    this.RemoveOwnerOpenIdList == input.RemoveOwnerOpenIdList ||
                    this.RemoveOwnerOpenIdList != null &&
                    input.RemoveOwnerOpenIdList != null &&
                    this.RemoveOwnerOpenIdList.SequenceEqual(input.RemoveOwnerOpenIdList)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.AccountId != null)
                {
                    hashCode = (hashCode * 59) + this.AccountId.GetHashCode();
                }
                if (this.AdapterType != null)
                {
                    hashCode = (hashCode * 59) + this.AdapterType.GetHashCode();
                }
                if (this.AddOwnerIdList != null)
                {
                    hashCode = (hashCode * 59) + this.AddOwnerIdList.GetHashCode();
                }
                if (this.AddOwnerOpenIdList != null)
                {
                    hashCode = (hashCode * 59) + this.AddOwnerOpenIdList.GetHashCode();
                }
                if (this.AgreementNo != null)
                {
                    hashCode = (hashCode * 59) + this.AgreementNo.GetHashCode();
                }
                if (this.EnterpriseId != null)
                {
                    hashCode = (hashCode * 59) + this.EnterpriseId.GetHashCode();
                }
                if (this.InstitutionId != null)
                {
                    hashCode = (hashCode * 59) + this.InstitutionId.GetHashCode();
                }
                if (this.OwnerType != null)
                {
                    hashCode = (hashCode * 59) + this.OwnerType.GetHashCode();
                }
                if (this.RemoveOwnerIdList != null)
                {
                    hashCode = (hashCode * 59) + this.RemoveOwnerIdList.GetHashCode();
                }
                if (this.RemoveOwnerOpenIdList != null)
                {
                    hashCode = (hashCode * 59) + this.RemoveOwnerOpenIdList.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
