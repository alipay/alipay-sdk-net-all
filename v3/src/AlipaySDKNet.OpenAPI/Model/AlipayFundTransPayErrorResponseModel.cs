/*
 * 支付宝开放平台API
 *
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2025-02-19
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = AlipaySDKNet.OpenAPI.Client.OpenAPIDateConverter;

namespace AlipaySDKNet.OpenAPI.Model
{
    /// <summary>
    /// AlipayFundTransPayErrorResponseModel
    /// </summary>
    [DataContract(Name = "AlipayFundTransPayErrorResponseModel")]
    public partial class AlipayFundTransPayErrorResponseModel : IEquatable<AlipayFundTransPayErrorResponseModel>, IValidatableObject
    {
        /// <summary>
        /// 错误码
        /// </summary>
        /// <value>错误码</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum CodeEnum
        {
            /// <summary>
            /// Enum PRODUCTNOTSIGN for value: PRODUCT_NOT_SIGN
            /// </summary>
            [EnumMember(Value = "PRODUCT_NOT_SIGN")]
            PRODUCTNOTSIGN = 1,

            /// <summary>
            /// Enum NOPERMISSIONACCOUNT for value: NO_PERMISSION_ACCOUNT
            /// </summary>
            [EnumMember(Value = "NO_PERMISSION_ACCOUNT")]
            NOPERMISSIONACCOUNT = 2,

            /// <summary>
            /// Enum PAYMENTTIMEEXPIRE for value: PAYMENT_TIME_EXPIRE
            /// </summary>
            [EnumMember(Value = "PAYMENT_TIME_EXPIRE")]
            PAYMENTTIMEEXPIRE = 3,

            /// <summary>
            /// Enum PAYERUSERINFONOTEXSIT for value: PAYER_USERINFO_NOT_EXSIT
            /// </summary>
            [EnumMember(Value = "PAYER_USERINFO_NOT_EXSIT")]
            PAYERUSERINFONOTEXSIT = 4,

            /// <summary>
            /// Enum PAYERNOTRELNAMECERTIFY for value: PAYER_NOT_RELNAME_CERTIFY
            /// </summary>
            [EnumMember(Value = "PAYER_NOT_RELNAME_CERTIFY")]
            PAYERNOTRELNAMECERTIFY = 5,

            /// <summary>
            /// Enum PAYERNOTEXIST for value: PAYER_NOT_EXIST
            /// </summary>
            [EnumMember(Value = "PAYER_NOT_EXIST")]
            PAYERNOTEXIST = 6,

            /// <summary>
            /// Enum PAYEENOTEXIST for value: PAYEE_NOT_EXIST
            /// </summary>
            [EnumMember(Value = "PAYEE_NOT_EXIST")]
            PAYEENOTEXIST = 7,

            /// <summary>
            /// Enum PAYERSTATUSERROR for value: PAYER_STATUS_ERROR
            /// </summary>
            [EnumMember(Value = "PAYER_STATUS_ERROR")]
            PAYERSTATUSERROR = 8,

            /// <summary>
            /// Enum PAYEEACCOUNTSTATUSERROR for value: PAYEE_ACCOUNT_STATUS_ERROR
            /// </summary>
            [EnumMember(Value = "PAYEE_ACCOUNT_STATUS_ERROR")]
            PAYEEACCOUNTSTATUSERROR = 9,

            /// <summary>
            /// Enum NOACCOUNTRECEIVEPERMISSION for value: NO_ACCOUNT_RECEIVE_PERMISSION
            /// </summary>
            [EnumMember(Value = "NO_ACCOUNT_RECEIVE_PERMISSION")]
            NOACCOUNTRECEIVEPERMISSION = 10,

            /// <summary>
            /// Enum MEMOREQUIREDINTRANSFERERROR for value: MEMO_REQUIRED_IN_TRANSFER_ERROR
            /// </summary>
            [EnumMember(Value = "MEMO_REQUIRED_IN_TRANSFER_ERROR")]
            MEMOREQUIREDINTRANSFERERROR = 11,

            /// <summary>
            /// Enum SYSTEMERROR for value: SYSTEM_ERROR
            /// </summary>
            [EnumMember(Value = "SYSTEM_ERROR")]
            SYSTEMERROR = 12,

            /// <summary>
            /// Enum PERMITNONBANKLIMITPAYEE for value: PERMIT_NON_BANK_LIMIT_PAYEE
            /// </summary>
            [EnumMember(Value = "PERMIT_NON_BANK_LIMIT_PAYEE")]
            PERMITNONBANKLIMITPAYEE = 13,

            /// <summary>
            /// Enum PAYERPAYEECANNOTSAME for value: PAYER_PAYEE_CANNOT_SAME
            /// </summary>
            [EnumMember(Value = "PAYER_PAYEE_CANNOT_SAME")]
            PAYERPAYEECANNOTSAME = 14,

            /// <summary>
            /// Enum REMARKHASSENSITIVEWORD for value: REMARK_HAS_SENSITIVE_WORD
            /// </summary>
            [EnumMember(Value = "REMARK_HAS_SENSITIVE_WORD")]
            REMARKHASSENSITIVEWORD = 15,

            /// <summary>
            /// Enum PAYEEACCOUNTNOTEXSIT for value: PAYEE_ACCOUNT_NOT_EXSIT
            /// </summary>
            [EnumMember(Value = "PAYEE_ACCOUNT_NOT_EXSIT")]
            PAYEEACCOUNTNOTEXSIT = 16,

            /// <summary>
            /// Enum TRUSTEESHIPRECIEVEQUOTALIMIT for value: TRUSTEESHIP_RECIEVE_QUOTA_LIMIT
            /// </summary>
            [EnumMember(Value = "TRUSTEESHIP_RECIEVE_QUOTA_LIMIT")]
            TRUSTEESHIPRECIEVEQUOTALIMIT = 17,

            /// <summary>
            /// Enum EXCEEDLIMITSMAMOUNT for value: EXCEED_LIMIT_SM_AMOUNT
            /// </summary>
            [EnumMember(Value = "EXCEED_LIMIT_SM_AMOUNT")]
            EXCEEDLIMITSMAMOUNT = 18,

            /// <summary>
            /// Enum EXCEEDLIMITDMAMOUNT for value: EXCEED_LIMIT_DM_AMOUNT
            /// </summary>
            [EnumMember(Value = "EXCEED_LIMIT_DM_AMOUNT")]
            EXCEEDLIMITDMAMOUNT = 19,

            /// <summary>
            /// Enum REFUNDTIMEINVALID for value: REFUND_TIME_INVALID
            /// </summary>
            [EnumMember(Value = "REFUND_TIME_INVALID")]
            REFUNDTIMEINVALID = 20,

            /// <summary>
            /// Enum AUTHCODEERROR for value: AUTH_CODE_ERROR
            /// </summary>
            [EnumMember(Value = "AUTH_CODE_ERROR")]
            AUTHCODEERROR = 21,

            /// <summary>
            /// Enum PAYMENTTIMEINVALID for value: PAYMENT_TIME_INVALID
            /// </summary>
            [EnumMember(Value = "PAYMENT_TIME_INVALID")]
            PAYMENTTIMEINVALID = 22,

            /// <summary>
            /// Enum INVALIDPARAMETER for value: INVALID_PARAMETER
            /// </summary>
            [EnumMember(Value = "INVALID_PARAMETER")]
            INVALIDPARAMETER = 23,

            /// <summary>
            /// Enum MONEYPAYCLOSED for value: MONEY_PAY_CLOSED
            /// </summary>
            [EnumMember(Value = "MONEY_PAY_CLOSED")]
            MONEYPAYCLOSED = 24,

            /// <summary>
            /// Enum USERBALANCENOTENOUGH for value: USER_BALANCE_NOT_ENOUGH
            /// </summary>
            [EnumMember(Value = "USER_BALANCE_NOT_ENOUGH")]
            USERBALANCENOTENOUGH = 25,

            /// <summary>
            /// Enum USERBANKCARDBALANCENOTENOUGH for value: USER_BANKCARD_BALANCE_NOT_ENOUGH
            /// </summary>
            [EnumMember(Value = "USER_BANKCARD_BALANCE_NOT_ENOUGH")]
            USERBANKCARDBALANCENOTENOUGH = 26,

            /// <summary>
            /// Enum SECURITYCHECKFAILED for value: SECURITY_CHECK_FAILED
            /// </summary>
            [EnumMember(Value = "SECURITY_CHECK_FAILED")]
            SECURITYCHECKFAILED = 27,

            /// <summary>
            /// Enum PERMITCHECKFAIL for value: PERMIT_CHECK_FAIL
            /// </summary>
            [EnumMember(Value = "PERMIT_CHECK_FAIL")]
            PERMITCHECKFAIL = 28,

            /// <summary>
            /// Enum ORDERPAYSUCCESS for value: ORDER_PAY_SUCCESS
            /// </summary>
            [EnumMember(Value = "ORDER_PAY_SUCCESS")]
            ORDERPAYSUCCESS = 29,

            /// <summary>
            /// Enum NOAVAILABLEPAYMENTTOOLS for value: NO_AVAILABLE_PAYMENT_TOOLS
            /// </summary>
            [EnumMember(Value = "NO_AVAILABLE_PAYMENT_TOOLS")]
            NOAVAILABLEPAYMENTTOOLS = 30,

            /// <summary>
            /// Enum PAYMENTINFOINCONSISTENCY for value: PAYMENT_INFO_INCONSISTENCY
            /// </summary>
            [EnumMember(Value = "PAYMENT_INFO_INCONSISTENCY")]
            PAYMENTINFOINCONSISTENCY = 31,

            /// <summary>
            /// Enum ORDERSTATUSINVALID for value: ORDER_STATUS_INVALID
            /// </summary>
            [EnumMember(Value = "ORDER_STATUS_INVALID")]
            ORDERSTATUSINVALID = 32,

            /// <summary>
            /// Enum ORDERPAYSUCCESSPAYEEERROR for value: ORDER_PAY_SUCCESS_PAYEE_ERROR
            /// </summary>
            [EnumMember(Value = "ORDER_PAY_SUCCESS_PAYEE_ERROR")]
            ORDERPAYSUCCESSPAYEEERROR = 33,

            /// <summary>
            /// Enum USERBLOCKED for value: USER_BLOCKED
            /// </summary>
            [EnumMember(Value = "USER_BLOCKED")]
            USERBLOCKED = 34,

            /// <summary>
            /// Enum ORDEROTHERPAYSUCCESS for value: ORDER_OTHER_PAY_SUCCESS
            /// </summary>
            [EnumMember(Value = "ORDER_OTHER_PAY_SUCCESS")]
            ORDEROTHERPAYSUCCESS = 35,

            /// <summary>
            /// Enum TRUSTEESHIPACCOUNTNOTEXIST for value: TRUSTEESHIP_ACCOUNT_NOT_EXIST
            /// </summary>
            [EnumMember(Value = "TRUSTEESHIP_ACCOUNT_NOT_EXIST")]
            TRUSTEESHIPACCOUNTNOTEXIST = 36,

            /// <summary>
            /// Enum NOACCOUNTPAYMENTPERMISSION for value: NO_ACCOUNT_PAYMENT_PERMISSION
            /// </summary>
            [EnumMember(Value = "NO_ACCOUNT_PAYMENT_PERMISSION")]
            NOACCOUNTPAYMENTPERMISSION = 37,

            /// <summary>
            /// Enum PAYMENTFAIL for value: PAYMENT_FAIL
            /// </summary>
            [EnumMember(Value = "PAYMENT_FAIL")]
            PAYMENTFAIL = 38,

            /// <summary>
            /// Enum AUTHOREEISNOTMATCH for value: AUTHOREE_IS_NOT_MATCH
            /// </summary>
            [EnumMember(Value = "AUTHOREE_IS_NOT_MATCH")]
            AUTHOREEISNOTMATCH = 39,

            /// <summary>
            /// Enum USERAGREEMENTSTATUSABNORMAL for value: USER_AGREEMENT_STATUS_ABNORMAL
            /// </summary>
            [EnumMember(Value = "USER_AGREEMENT_STATUS_ABNORMAL")]
            USERAGREEMENTSTATUSABNORMAL = 40,

            /// <summary>
            /// Enum USERAGREEMENTISOUTOFDATE for value: USER_AGREEMENT_IS_OUT_OF_DATE
            /// </summary>
            [EnumMember(Value = "USER_AGREEMENT_IS_OUT_OF_DATE")]
            USERAGREEMENTISOUTOFDATE = 41,

            /// <summary>
            /// Enum USERAGREEMENTVERIFYFAIL for value: USER_AGREEMENT_VERIFY_FAIL
            /// </summary>
            [EnumMember(Value = "USER_AGREEMENT_VERIFY_FAIL")]
            USERAGREEMENTVERIFYFAIL = 42,

            /// <summary>
            /// Enum MERCHANTAGREEMENTVERIFYFAIL for value: MERCHANT_AGREEMENT_VERIFY_FAIL
            /// </summary>
            [EnumMember(Value = "MERCHANT_AGREEMENT_VERIFY_FAIL")]
            MERCHANTAGREEMENTVERIFYFAIL = 43,

            /// <summary>
            /// Enum RESOURCELIMITEXCEED for value: RESOURCE_LIMIT_EXCEED
            /// </summary>
            [EnumMember(Value = "RESOURCE_LIMIT_EXCEED")]
            RESOURCELIMITEXCEED = 44,

            /// <summary>
            /// Enum INVALIDPAYEEACCOUNT for value: INVALID_PAYEE_ACCOUNT
            /// </summary>
            [EnumMember(Value = "INVALID_PAYEE_ACCOUNT")]
            INVALIDPAYEEACCOUNT = 45,

            /// <summary>
            /// Enum PAYERISNOTSAMEPAYEE for value: PAYER_IS_NOT_SAME_PAYEE
            /// </summary>
            [EnumMember(Value = "PAYER_IS_NOT_SAME_PAYEE")]
            PAYERISNOTSAMEPAYEE = 46,

            /// <summary>
            /// Enum ILLEGALREQUESTUSERID for value: ILLEGAL_REQUEST_USER_ID
            /// </summary>
            [EnumMember(Value = "ILLEGAL_REQUEST_USER_ID")]
            ILLEGALREQUESTUSERID = 47,

            /// <summary>
            /// Enum FREEZEAMOUNTISNOTENOUGH for value: FREEZE_AMOUNT_IS_NOT_ENOUGH
            /// </summary>
            [EnumMember(Value = "FREEZE_AMOUNT_IS_NOT_ENOUGH")]
            FREEZEAMOUNTISNOTENOUGH = 48,

            /// <summary>
            /// Enum AGREEMENTSCENEVERIFYFAIL for value: AGREEMENT_SCENE_VERIFY_FAIL
            /// </summary>
            [EnumMember(Value = "AGREEMENT_SCENE_VERIFY_FAIL")]
            AGREEMENTSCENEVERIFYFAIL = 49,

            /// <summary>
            /// Enum AUTHUSERIDISNOTMATCH for value: AUTH_USERID_IS_NOT_MATCH
            /// </summary>
            [EnumMember(Value = "AUTH_USERID_IS_NOT_MATCH")]
            AUTHUSERIDISNOTMATCH = 50,

            /// <summary>
            /// Enum RELEASEUSERFORBBIDENRECIEVE for value: RELEASE_USER_FORBBIDEN_RECIEVE
            /// </summary>
            [EnumMember(Value = "RELEASE_USER_FORBBIDEN_RECIEVE")]
            RELEASEUSERFORBBIDENRECIEVE = 51,

            /// <summary>
            /// Enum AMOUNTCOMPAREINCONSISTENCY for value: AMOUNT_COMPARE_INCONSISTENCY
            /// </summary>
            [EnumMember(Value = "AMOUNT_COMPARE_INCONSISTENCY")]
            AMOUNTCOMPAREINCONSISTENCY = 52,

            /// <summary>
            /// Enum PAYEEUSERINFOSTATUSERROR for value: PAYEE_USERINFO_STATUS_ERROR
            /// </summary>
            [EnumMember(Value = "PAYEE_USERINFO_STATUS_ERROR")]
            PAYEEUSERINFOSTATUSERROR = 53,

            /// <summary>
            /// Enum PAYERBALANCENOTENOUGH for value: PAYER_BALANCE_NOT_ENOUGH
            /// </summary>
            [EnumMember(Value = "PAYER_BALANCE_NOT_ENOUGH")]
            PAYERBALANCENOTENOUGH = 54,

            /// <summary>
            /// Enum BIZUNIQUEEXCEPTION for value: BIZ_UNIQUE_EXCEPTION
            /// </summary>
            [EnumMember(Value = "BIZ_UNIQUE_EXCEPTION")]
            BIZUNIQUEEXCEPTION = 55,

            /// <summary>
            /// Enum BLOCKUSERFORBBIDENRECIEVE for value: BLOCK_USER_FORBBIDEN_RECIEVE
            /// </summary>
            [EnumMember(Value = "BLOCK_USER_FORBBIDEN_RECIEVE")]
            BLOCKUSERFORBBIDENRECIEVE = 56,

            /// <summary>
            /// Enum NOACCOUNTUSERFORBBIDENRECIEVE for value: NO_ACCOUNT_USER_FORBBIDEN_RECIEVE
            /// </summary>
            [EnumMember(Value = "NO_ACCOUNT_USER_FORBBIDEN_RECIEVE")]
            NOACCOUNTUSERFORBBIDENRECIEVE = 57,

            /// <summary>
            /// Enum SUBBIZSCENEERROR for value: SUB_BIZ_SCENE_ERROR
            /// </summary>
            [EnumMember(Value = "SUB_BIZ_SCENE_ERROR")]
            SUBBIZSCENEERROR = 58,

            /// <summary>
            /// Enum PAYERNOTADMITERROR for value: PAYER_NOT_ADMIT_ERROR
            /// </summary>
            [EnumMember(Value = "PAYER_NOT_ADMIT_ERROR")]
            PAYERNOTADMITERROR = 59,

            /// <summary>
            /// Enum PAYEECARDINFOERROR for value: PAYEE_CARD_INFO_ERROR
            /// </summary>
            [EnumMember(Value = "PAYEE_CARD_INFO_ERROR")]
            PAYEECARDINFOERROR = 60,

            /// <summary>
            /// Enum PERMAMLNOTREALNAMEREV for value: PERM_AML_NOT_REALNAME_REV
            /// </summary>
            [EnumMember(Value = "PERM_AML_NOT_REALNAME_REV")]
            PERMAMLNOTREALNAMEREV = 61,

            /// <summary>
            /// Enum EXCEEDLIMITMMAMOUNT for value: EXCEED_LIMIT_MM_AMOUNT
            /// </summary>
            [EnumMember(Value = "EXCEED_LIMIT_MM_AMOUNT")]
            EXCEEDLIMITMMAMOUNT = 62,

            /// <summary>
            /// Enum CARDBINERROR for value: CARD_BIN_ERROR
            /// </summary>
            [EnumMember(Value = "CARD_BIN_ERROR")]
            CARDBINERROR = 63,

            /// <summary>
            /// Enum INSTPAYUNABLE for value: INST_PAY_UNABLE
            /// </summary>
            [EnumMember(Value = "INST_PAY_UNABLE")]
            INSTPAYUNABLE = 64,

            /// <summary>
            /// Enum PERMITCHECKPERMIDENTITYTHEFT for value: PERMIT_CHECK_PERM_IDENTITY_THEFT
            /// </summary>
            [EnumMember(Value = "PERMIT_CHECK_PERM_IDENTITY_THEFT")]
            PERMITCHECKPERMIDENTITYTHEFT = 65,

            /// <summary>
            /// Enum BALANCEISNOTENOUGH for value: BALANCE_IS_NOT_ENOUGH
            /// </summary>
            [EnumMember(Value = "BALANCE_IS_NOT_ENOUGH")]
            BALANCEISNOTENOUGH = 66,

            /// <summary>
            /// Enum INVALIDCARDNO for value: INVALID_CARDNO
            /// </summary>
            [EnumMember(Value = "INVALID_CARDNO")]
            INVALIDCARDNO = 67,

            /// <summary>
            /// Enum PAYEETRUSTEESHIPACCOVERLIMIT for value: PAYEE_TRUSTEESHIP_ACC_OVER_LIMIT
            /// </summary>
            [EnumMember(Value = "PAYEE_TRUSTEESHIP_ACC_OVER_LIMIT")]
            PAYEETRUSTEESHIPACCOVERLIMIT = 68,

            /// <summary>
            /// Enum EXCEEDLIMITDCRECEIVED for value: EXCEED_LIMIT_DC_RECEIVED
            /// </summary>
            [EnumMember(Value = "EXCEED_LIMIT_DC_RECEIVED")]
            EXCEEDLIMITDCRECEIVED = 69,

            /// <summary>
            /// Enum PAYERPERMLIMITCHECKFAILURE for value: PAYER_PERMLIMIT_CHECK_FAILURE
            /// </summary>
            [EnumMember(Value = "PAYER_PERMLIMIT_CHECK_FAILURE")]
            PAYERPERMLIMITCHECKFAILURE = 70,

            /// <summary>
            /// Enum PAYEEACCOCUPIED for value: PAYEE_ACC_OCUPIED
            /// </summary>
            [EnumMember(Value = "PAYEE_ACC_OCUPIED")]
            PAYEEACCOCUPIED = 71,

            /// <summary>
            /// Enum PERMITCHECKPERMLIMITED for value: PERMIT_CHECK_PERM_LIMITED
            /// </summary>
            [EnumMember(Value = "PERMIT_CHECK_PERM_LIMITED")]
            PERMITCHECKPERMLIMITED = 72,

            /// <summary>
            /// Enum EXCEEDLIMITDMMAXAMOUNT for value: EXCEED_LIMIT_DM_MAX_AMOUNT
            /// </summary>
            [EnumMember(Value = "EXCEED_LIMIT_DM_MAX_AMOUNT")]
            EXCEEDLIMITDMMAXAMOUNT = 73,

            /// <summary>
            /// Enum EXCEEDLIMITPERSONALSMAMOUNT for value: EXCEED_LIMIT_PERSONAL_SM_AMOUNT
            /// </summary>
            [EnumMember(Value = "EXCEED_LIMIT_PERSONAL_SM_AMOUNT")]
            EXCEEDLIMITPERSONALSMAMOUNT = 74,

            /// <summary>
            /// Enum EXCEEDLIMITUNRNDMAMOUNT for value: EXCEED_LIMIT_UNRN_DM_AMOUNT
            /// </summary>
            [EnumMember(Value = "EXCEED_LIMIT_UNRN_DM_AMOUNT")]
            EXCEEDLIMITUNRNDMAMOUNT = 75,

            /// <summary>
            /// Enum PAYEEUSERTYPEERROR for value: PAYEE_USER_TYPE_ERROR
            /// </summary>
            [EnumMember(Value = "PAYEE_USER_TYPE_ERROR")]
            PAYEEUSERTYPEERROR = 76,

            /// <summary>
            /// Enum EXCEEDLIMITSMMINAMOUNT for value: EXCEED_LIMIT_SM_MIN_AMOUNT
            /// </summary>
            [EnumMember(Value = "EXCEED_LIMIT_SM_MIN_AMOUNT")]
            EXCEEDLIMITSMMINAMOUNT = 77,

            /// <summary>
            /// Enum PERMITCHECKRECEIVELIMIT for value: PERMIT_CHECK_RECEIVE_LIMIT
            /// </summary>
            [EnumMember(Value = "PERMIT_CHECK_RECEIVE_LIMIT")]
            PERMITCHECKRECEIVELIMIT = 78,

            /// <summary>
            /// Enum PAYEENOTRELNAMECERTIFY for value: PAYEE_NOT_RELNAME_CERTIFY
            /// </summary>
            [EnumMember(Value = "PAYEE_NOT_RELNAME_CERTIFY")]
            PAYEENOTRELNAMECERTIFY = 79,

            /// <summary>
            /// Enum BANKCARDBALANCENOTENOUGH for value: BANK_CARD_BALANCE_NOT_ENOUGH
            /// </summary>
            [EnumMember(Value = "BANK_CARD_BALANCE_NOT_ENOUGH")]
            BANKCARDBALANCENOTENOUGH = 80,

            /// <summary>
            /// Enum MAXVISITLIMIT for value: MAX_VISIT_LIMIT
            /// </summary>
            [EnumMember(Value = "MAX_VISIT_LIMIT")]
            MAXVISITLIMIT = 81,

            /// <summary>
            /// Enum MONTHLIMITEXCEED for value: MONTH_LIMIT_EXCEED
            /// </summary>
            [EnumMember(Value = "MONTH_LIMIT_EXCEED")]
            MONTHLIMITEXCEED = 82,

            /// <summary>
            /// Enum DAILYLIMITEXCEED for value: DAILY_LIMIT_EXCEED
            /// </summary>
            [EnumMember(Value = "DAILY_LIMIT_EXCEED")]
            DAILYLIMITEXCEED = 83,

            /// <summary>
            /// Enum PERMRECEIVECUSTOMERALMSLIMIT for value: PERM_RECEIVE_CUSTOMER_ALMS_LIMIT
            /// </summary>
            [EnumMember(Value = "PERM_RECEIVE_CUSTOMER_ALMS_LIMIT")]
            PERMRECEIVECUSTOMERALMSLIMIT = 84,

            /// <summary>
            /// Enum PAYCARDUNABLEPAYMENT for value: PAYCARD_UNABLE_PAYMENT
            /// </summary>
            [EnumMember(Value = "PAYCARD_UNABLE_PAYMENT")]
            PAYCARDUNABLEPAYMENT = 85,

            /// <summary>
            /// Enum PAYEEUSERINFOERROR for value: PAYEE_USERINFO_ERROR
            /// </summary>
            [EnumMember(Value = "PAYEE_USERINFO_ERROR")]
            PAYEEUSERINFOERROR = 86,

            /// <summary>
            /// Enum NOTSUPPORTPAYERACCOUNTTYPE for value: NOT_SUPPORT_PAYER_ACCOUNT_TYPE
            /// </summary>
            [EnumMember(Value = "NOT_SUPPORT_PAYER_ACCOUNT_TYPE")]
            NOTSUPPORTPAYERACCOUNTTYPE = 87,

            /// <summary>
            /// Enum USERRISKFREEZE for value: USER_RISK_FREEZE
            /// </summary>
            [EnumMember(Value = "USER_RISK_FREEZE")]
            USERRISKFREEZE = 88

        }


        /// <summary>
        /// 错误码
        /// </summary>
        /// <value>错误码</value>
        [DataMember(Name = "code", EmitDefaultValue = false)]
        public CodeEnum Code { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="AlipayFundTransPayErrorResponseModel" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected AlipayFundTransPayErrorResponseModel() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="AlipayFundTransPayErrorResponseModel" /> class.
        /// </summary>
        /// <param name="code">错误码 (required).</param>
        /// <param name="links">解决方案链接.</param>
        /// <param name="message">错误描述 (required).</param>
        public AlipayFundTransPayErrorResponseModel(CodeEnum code = default(CodeEnum), string links = default(string), string message = default(string))
        {
            this.Code = code;
            // to ensure "message" is required (not null)
            // if (message == null)
            // {
            //     throw new ArgumentNullException("message is a required property for AlipayFundTransPayErrorResponseModel and cannot be null");
            // }
            this.Message = message;
            this.Links = links;
        }

        /// <summary>
        /// 解决方案链接
        /// </summary>
        /// <value>解决方案链接</value>
        [DataMember(Name = "links", EmitDefaultValue = false)]
        public string Links { get; set; }

        /// <summary>
        /// 错误描述
        /// </summary>
        /// <value>错误描述</value>
        [DataMember(Name = "message", EmitDefaultValue = false)]
        public string Message { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class AlipayFundTransPayErrorResponseModel {\n");
            sb.Append("  Code: ").Append(Code).Append("\n");
            sb.Append("  Links: ").Append(Links).Append("\n");
            sb.Append("  Message: ").Append(Message).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as AlipayFundTransPayErrorResponseModel);
        }

        /// <summary>
        /// Returns true if AlipayFundTransPayErrorResponseModel instances are equal
        /// </summary>
        /// <param name="input">Instance of AlipayFundTransPayErrorResponseModel to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AlipayFundTransPayErrorResponseModel input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.Code == input.Code ||
                    this.Code.Equals(input.Code)
                ) && 
                (
                    this.Links == input.Links ||
                    (this.Links != null &&
                    this.Links.Equals(input.Links))
                ) && 
                (
                    this.Message == input.Message ||
                    (this.Message != null &&
                    this.Message.Equals(input.Message))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                hashCode = (hashCode * 59) + this.Code.GetHashCode();
                if (this.Links != null)
                {
                    hashCode = (hashCode * 59) + this.Links.GetHashCode();
                }
                if (this.Message != null)
                {
                    hashCode = (hashCode * 59) + this.Message.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
