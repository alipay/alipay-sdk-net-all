/*
 * 支付宝开放平台API
 *
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2025-02-19
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = AlipaySDKNet.OpenAPI.Client.OpenAPIDateConverter;

namespace AlipaySDKNet.OpenAPI.Model
{
    /// <summary>
    /// AlipayOpenSearchBoxModifyModel
    /// </summary>
    [DataContract(Name = "AlipayOpenSearchBoxModifyModel")]
    public partial class AlipayOpenSearchBoxModifyModel : IEquatable<AlipayOpenSearchBoxModifyModel>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AlipayOpenSearchBoxModifyModel" /> class.
        /// </summary>
        /// <param name="boxDesc">品牌介绍，5-15个中文字符。当修改品牌介绍模块(module_type&#x3D;BOX_EXCLUSIVE_BASE)时传入。 小程序直达时不支持设置.</param>
        /// <param name="boxId">搜索直达配置id.</param>
        /// <param name="brandId">品牌id，参考&lt;a href&#x3D;\&quot;https://opendocs.alipay.com/rules/029uy4\&quot;&gt; 品牌认证说明 &lt;/a&gt;.</param>
        /// <param name="businessBenefitSwitch">可通过配置来开启商圈权益模块，关闭后搜索直达不展示商圈权益模块.</param>
        /// <param name="businessDistrictIds">小程序已关联商圈时，可添加商圈id（目前仅对品牌直达开放，小程序直达暂未开放）.</param>
        /// <param name="customKeywords">1024.</param>
        /// <param name="imageId">氛围图片id，调用 &lt;a href&#x3D;\&quot;https://opendocs.alipay.com/mini/03hvl1?ref&#x3D;api\&quot;&gt;支付宝文件上传接口&lt;/a&gt; 上传图片获取图片id(bizCode：search_box_atmosphere)。 &lt;a href&#x3D;\&quot;https://opendocs.alipay.com/b/03al6f\&quot;&gt;图片规范&lt;/a&gt;  小程序直达不支持设置此项。.</param>
        /// <param name="imageName">氛围图片名，当修改氛围图模块(module_type&#x3D;BOX_ATMOSPHERE_IMAGE)时传入。 小程序直达不支持设置.</param>
        /// <param name="merchantId">商户id，代运营模式下传入。代运营模式，需要服务商已获得商家\&quot;运营支付宝小程序\&quot;授权。.</param>
        /// <param name="moduleId">搜索直达模块配置id，新增模块时可不传，更新模块时必传。从alipay.open.search.box.query详情接口查询可获取已存在模块的配置id.</param>
        /// <param name="moduleType">搜索直达模块类型，参考&lt;a href&#x3D;\&quot;https://opendocs.alipay.com/mini/03fjba#%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E\&quot;&gt; 搜索直达模块说明 &lt;/a&gt;。.</param>
        /// <param name="relatedAccounts">\&quot;关联账号信息，可配置1-2个。传入账号需归属于商家主体。品牌直达修改官方账号(module_type&#x3D;BOX_EXCLUSIVE_ACCOUNTS)时传入，小程序直达修改常用服务模块时也需传值。 当为品牌直达时，数组中的第1个账号会被设置为\&quot;账号1\&quot;，也就是将作为搜索直达专区头部的跳转地址。\&quot;.</param>
        /// <param name="serviceInfos">服务信息，服务必须审核通过才能申请搜索直达，可配置1-4个。当修改常用服务模块(module_type&#x3D;BOX_EXCLUSIVE_FUNCTIONS)时传入.</param>
        /// <param name="targetAppid">小程序id，小程序直达时必传，需要和申请的商户主体保持一致，且符合&lt;a href&#x3D;\&quot;https://opendocs.alipay.com/b/03al6e\&quot;&gt; 准入类目 &lt;/a&gt;.</param>
        public AlipayOpenSearchBoxModifyModel(string boxDesc = default(string), string boxId = default(string), string brandId = default(string), bool businessBenefitSwitch = default(bool), List<string> businessDistrictIds = default(List<string>), string customKeywords = default(string), string imageId = default(string), string imageName = default(string), string merchantId = default(string), string moduleId = default(string), string moduleType = default(string), List<SearchBoxAppInfo> relatedAccounts = default(List<SearchBoxAppInfo>), List<SearchBoxServiceInfo> serviceInfos = default(List<SearchBoxServiceInfo>), string targetAppid = default(string))
        {
            this.BoxDesc = boxDesc;
            this.BoxId = boxId;
            this.BrandId = brandId;
            this.BusinessBenefitSwitch = businessBenefitSwitch;
            this.BusinessDistrictIds = businessDistrictIds;
            this.CustomKeywords = customKeywords;
            this.ImageId = imageId;
            this.ImageName = imageName;
            this.MerchantId = merchantId;
            this.ModuleId = moduleId;
            this.ModuleType = moduleType;
            this.RelatedAccounts = relatedAccounts;
            this.ServiceInfos = serviceInfos;
            this.TargetAppid = targetAppid;
        }

        /// <summary>
        /// 品牌介绍，5-15个中文字符。当修改品牌介绍模块(module_type&#x3D;BOX_EXCLUSIVE_BASE)时传入。 小程序直达时不支持设置
        /// </summary>
        /// <value>品牌介绍，5-15个中文字符。当修改品牌介绍模块(module_type&#x3D;BOX_EXCLUSIVE_BASE)时传入。 小程序直达时不支持设置</value>
        [DataMember(Name = "box_desc", EmitDefaultValue = false)]
        public string BoxDesc { get; set; }

        /// <summary>
        /// 搜索直达配置id
        /// </summary>
        /// <value>搜索直达配置id</value>
        [DataMember(Name = "box_id", EmitDefaultValue = false)]
        public string BoxId { get; set; }

        /// <summary>
        /// 品牌id，参考&lt;a href&#x3D;\&quot;https://opendocs.alipay.com/rules/029uy4\&quot;&gt; 品牌认证说明 &lt;/a&gt;
        /// </summary>
        /// <value>品牌id，参考&lt;a href&#x3D;\&quot;https://opendocs.alipay.com/rules/029uy4\&quot;&gt; 品牌认证说明 &lt;/a&gt;</value>
        [DataMember(Name = "brand_id", EmitDefaultValue = false)]
        public string BrandId { get; set; }

        /// <summary>
        /// 可通过配置来开启商圈权益模块，关闭后搜索直达不展示商圈权益模块
        /// </summary>
        /// <value>可通过配置来开启商圈权益模块，关闭后搜索直达不展示商圈权益模块</value>
        [DataMember(Name = "business_benefit_switch", EmitDefaultValue = true)]
        public bool BusinessBenefitSwitch { get; set; }

        /// <summary>
        /// 小程序已关联商圈时，可添加商圈id（目前仅对品牌直达开放，小程序直达暂未开放）
        /// </summary>
        /// <value>小程序已关联商圈时，可添加商圈id（目前仅对品牌直达开放，小程序直达暂未开放）</value>
        [DataMember(Name = "business_district_ids", EmitDefaultValue = false)]
        public List<string> BusinessDistrictIds { get; set; }

        /// <summary>
        /// 1024
        /// </summary>
        /// <value>1024</value>
        [DataMember(Name = "custom_keywords", EmitDefaultValue = false)]
        public string CustomKeywords { get; set; }

        /// <summary>
        /// 氛围图片id，调用 &lt;a href&#x3D;\&quot;https://opendocs.alipay.com/mini/03hvl1?ref&#x3D;api\&quot;&gt;支付宝文件上传接口&lt;/a&gt; 上传图片获取图片id(bizCode：search_box_atmosphere)。 &lt;a href&#x3D;\&quot;https://opendocs.alipay.com/b/03al6f\&quot;&gt;图片规范&lt;/a&gt;  小程序直达不支持设置此项。
        /// </summary>
        /// <value>氛围图片id，调用 &lt;a href&#x3D;\&quot;https://opendocs.alipay.com/mini/03hvl1?ref&#x3D;api\&quot;&gt;支付宝文件上传接口&lt;/a&gt; 上传图片获取图片id(bizCode：search_box_atmosphere)。 &lt;a href&#x3D;\&quot;https://opendocs.alipay.com/b/03al6f\&quot;&gt;图片规范&lt;/a&gt;  小程序直达不支持设置此项。</value>
        [DataMember(Name = "image_id", EmitDefaultValue = false)]
        public string ImageId { get; set; }

        /// <summary>
        /// 氛围图片名，当修改氛围图模块(module_type&#x3D;BOX_ATMOSPHERE_IMAGE)时传入。 小程序直达不支持设置
        /// </summary>
        /// <value>氛围图片名，当修改氛围图模块(module_type&#x3D;BOX_ATMOSPHERE_IMAGE)时传入。 小程序直达不支持设置</value>
        [DataMember(Name = "image_name", EmitDefaultValue = false)]
        public string ImageName { get; set; }

        /// <summary>
        /// 商户id，代运营模式下传入。代运营模式，需要服务商已获得商家\&quot;运营支付宝小程序\&quot;授权。
        /// </summary>
        /// <value>商户id，代运营模式下传入。代运营模式，需要服务商已获得商家\&quot;运营支付宝小程序\&quot;授权。</value>
        [DataMember(Name = "merchant_id", EmitDefaultValue = false)]
        public string MerchantId { get; set; }

        /// <summary>
        /// 搜索直达模块配置id，新增模块时可不传，更新模块时必传。从alipay.open.search.box.query详情接口查询可获取已存在模块的配置id
        /// </summary>
        /// <value>搜索直达模块配置id，新增模块时可不传，更新模块时必传。从alipay.open.search.box.query详情接口查询可获取已存在模块的配置id</value>
        [DataMember(Name = "module_id", EmitDefaultValue = false)]
        public string ModuleId { get; set; }

        /// <summary>
        /// 搜索直达模块类型，参考&lt;a href&#x3D;\&quot;https://opendocs.alipay.com/mini/03fjba#%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E\&quot;&gt; 搜索直达模块说明 &lt;/a&gt;。
        /// </summary>
        /// <value>搜索直达模块类型，参考&lt;a href&#x3D;\&quot;https://opendocs.alipay.com/mini/03fjba#%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E\&quot;&gt; 搜索直达模块说明 &lt;/a&gt;。</value>
        [DataMember(Name = "module_type", EmitDefaultValue = false)]
        public string ModuleType { get; set; }

        /// <summary>
        /// \&quot;关联账号信息，可配置1-2个。传入账号需归属于商家主体。品牌直达修改官方账号(module_type&#x3D;BOX_EXCLUSIVE_ACCOUNTS)时传入，小程序直达修改常用服务模块时也需传值。 当为品牌直达时，数组中的第1个账号会被设置为\&quot;账号1\&quot;，也就是将作为搜索直达专区头部的跳转地址。\&quot;
        /// </summary>
        /// <value>\&quot;关联账号信息，可配置1-2个。传入账号需归属于商家主体。品牌直达修改官方账号(module_type&#x3D;BOX_EXCLUSIVE_ACCOUNTS)时传入，小程序直达修改常用服务模块时也需传值。 当为品牌直达时，数组中的第1个账号会被设置为\&quot;账号1\&quot;，也就是将作为搜索直达专区头部的跳转地址。\&quot;</value>
        [DataMember(Name = "related_accounts", EmitDefaultValue = false)]
        public List<SearchBoxAppInfo> RelatedAccounts { get; set; }

        /// <summary>
        /// 服务信息，服务必须审核通过才能申请搜索直达，可配置1-4个。当修改常用服务模块(module_type&#x3D;BOX_EXCLUSIVE_FUNCTIONS)时传入
        /// </summary>
        /// <value>服务信息，服务必须审核通过才能申请搜索直达，可配置1-4个。当修改常用服务模块(module_type&#x3D;BOX_EXCLUSIVE_FUNCTIONS)时传入</value>
        [DataMember(Name = "service_infos", EmitDefaultValue = false)]
        public List<SearchBoxServiceInfo> ServiceInfos { get; set; }

        /// <summary>
        /// 小程序id，小程序直达时必传，需要和申请的商户主体保持一致，且符合&lt;a href&#x3D;\&quot;https://opendocs.alipay.com/b/03al6e\&quot;&gt; 准入类目 &lt;/a&gt;
        /// </summary>
        /// <value>小程序id，小程序直达时必传，需要和申请的商户主体保持一致，且符合&lt;a href&#x3D;\&quot;https://opendocs.alipay.com/b/03al6e\&quot;&gt; 准入类目 &lt;/a&gt;</value>
        [DataMember(Name = "target_appid", EmitDefaultValue = false)]
        public string TargetAppid { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class AlipayOpenSearchBoxModifyModel {\n");
            sb.Append("  BoxDesc: ").Append(BoxDesc).Append("\n");
            sb.Append("  BoxId: ").Append(BoxId).Append("\n");
            sb.Append("  BrandId: ").Append(BrandId).Append("\n");
            sb.Append("  BusinessBenefitSwitch: ").Append(BusinessBenefitSwitch).Append("\n");
            sb.Append("  BusinessDistrictIds: ").Append(BusinessDistrictIds).Append("\n");
            sb.Append("  CustomKeywords: ").Append(CustomKeywords).Append("\n");
            sb.Append("  ImageId: ").Append(ImageId).Append("\n");
            sb.Append("  ImageName: ").Append(ImageName).Append("\n");
            sb.Append("  MerchantId: ").Append(MerchantId).Append("\n");
            sb.Append("  ModuleId: ").Append(ModuleId).Append("\n");
            sb.Append("  ModuleType: ").Append(ModuleType).Append("\n");
            sb.Append("  RelatedAccounts: ").Append(RelatedAccounts).Append("\n");
            sb.Append("  ServiceInfos: ").Append(ServiceInfos).Append("\n");
            sb.Append("  TargetAppid: ").Append(TargetAppid).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as AlipayOpenSearchBoxModifyModel);
        }

        /// <summary>
        /// Returns true if AlipayOpenSearchBoxModifyModel instances are equal
        /// </summary>
        /// <param name="input">Instance of AlipayOpenSearchBoxModifyModel to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AlipayOpenSearchBoxModifyModel input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.BoxDesc == input.BoxDesc ||
                    (this.BoxDesc != null &&
                    this.BoxDesc.Equals(input.BoxDesc))
                ) && 
                (
                    this.BoxId == input.BoxId ||
                    (this.BoxId != null &&
                    this.BoxId.Equals(input.BoxId))
                ) && 
                (
                    this.BrandId == input.BrandId ||
                    (this.BrandId != null &&
                    this.BrandId.Equals(input.BrandId))
                ) && 
                (
                    this.BusinessBenefitSwitch == input.BusinessBenefitSwitch ||
                    this.BusinessBenefitSwitch.Equals(input.BusinessBenefitSwitch)
                ) && 
                (
                    this.BusinessDistrictIds == input.BusinessDistrictIds ||
                    this.BusinessDistrictIds != null &&
                    input.BusinessDistrictIds != null &&
                    this.BusinessDistrictIds.SequenceEqual(input.BusinessDistrictIds)
                ) && 
                (
                    this.CustomKeywords == input.CustomKeywords ||
                    (this.CustomKeywords != null &&
                    this.CustomKeywords.Equals(input.CustomKeywords))
                ) && 
                (
                    this.ImageId == input.ImageId ||
                    (this.ImageId != null &&
                    this.ImageId.Equals(input.ImageId))
                ) && 
                (
                    this.ImageName == input.ImageName ||
                    (this.ImageName != null &&
                    this.ImageName.Equals(input.ImageName))
                ) && 
                (
                    this.MerchantId == input.MerchantId ||
                    (this.MerchantId != null &&
                    this.MerchantId.Equals(input.MerchantId))
                ) && 
                (
                    this.ModuleId == input.ModuleId ||
                    (this.ModuleId != null &&
                    this.ModuleId.Equals(input.ModuleId))
                ) && 
                (
                    this.ModuleType == input.ModuleType ||
                    (this.ModuleType != null &&
                    this.ModuleType.Equals(input.ModuleType))
                ) && 
                (
                    this.RelatedAccounts == input.RelatedAccounts ||
                    this.RelatedAccounts != null &&
                    input.RelatedAccounts != null &&
                    this.RelatedAccounts.SequenceEqual(input.RelatedAccounts)
                ) && 
                (
                    this.ServiceInfos == input.ServiceInfos ||
                    this.ServiceInfos != null &&
                    input.ServiceInfos != null &&
                    this.ServiceInfos.SequenceEqual(input.ServiceInfos)
                ) && 
                (
                    this.TargetAppid == input.TargetAppid ||
                    (this.TargetAppid != null &&
                    this.TargetAppid.Equals(input.TargetAppid))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.BoxDesc != null)
                {
                    hashCode = (hashCode * 59) + this.BoxDesc.GetHashCode();
                }
                if (this.BoxId != null)
                {
                    hashCode = (hashCode * 59) + this.BoxId.GetHashCode();
                }
                if (this.BrandId != null)
                {
                    hashCode = (hashCode * 59) + this.BrandId.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.BusinessBenefitSwitch.GetHashCode();
                if (this.BusinessDistrictIds != null)
                {
                    hashCode = (hashCode * 59) + this.BusinessDistrictIds.GetHashCode();
                }
                if (this.CustomKeywords != null)
                {
                    hashCode = (hashCode * 59) + this.CustomKeywords.GetHashCode();
                }
                if (this.ImageId != null)
                {
                    hashCode = (hashCode * 59) + this.ImageId.GetHashCode();
                }
                if (this.ImageName != null)
                {
                    hashCode = (hashCode * 59) + this.ImageName.GetHashCode();
                }
                if (this.MerchantId != null)
                {
                    hashCode = (hashCode * 59) + this.MerchantId.GetHashCode();
                }
                if (this.ModuleId != null)
                {
                    hashCode = (hashCode * 59) + this.ModuleId.GetHashCode();
                }
                if (this.ModuleType != null)
                {
                    hashCode = (hashCode * 59) + this.ModuleType.GetHashCode();
                }
                if (this.RelatedAccounts != null)
                {
                    hashCode = (hashCode * 59) + this.RelatedAccounts.GetHashCode();
                }
                if (this.ServiceInfos != null)
                {
                    hashCode = (hashCode * 59) + this.ServiceInfos.GetHashCode();
                }
                if (this.TargetAppid != null)
                {
                    hashCode = (hashCode * 59) + this.TargetAppid.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
