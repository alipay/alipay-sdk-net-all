/*
 * 支付宝开放平台API
 *
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2025-02-19
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = AlipaySDKNet.OpenAPI.Client.OpenAPIDateConverter;

namespace AlipaySDKNet.OpenAPI.Model
{
    /// <summary>
    /// AlipayEcoEduKtSchoolinfoModifyModel
    /// </summary>
    [DataContract(Name = "AlipayEcoEduKtSchoolinfoModifyModel")]
    public partial class AlipayEcoEduKtSchoolinfoModifyModel : IEquatable<AlipayEcoEduKtSchoolinfoModifyModel>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AlipayEcoEduKtSchoolinfoModifyModel" /> class.
        /// </summary>
        /// <param name="bankNotifyUrl">与浙江网商交易见证平台有交互ISV输入网商交易异步通知回调URL，教育缴费同步账单信息给网商，网商会回调此url，ISV即可获取网商相关的参数，根据教育缴费平台账单发送接口返回的 order_no和网商返回的outer_trade_no来对应账单信息。.</param>
        /// <param name="bankPartnerId">与浙江网商交易见证平台有交互的ISV,由交易见证平台分配给合作方业务平台 签约唯一ID ，由网商分配给ISV的渠道参数.</param>
        /// <param name="bankUid">与浙江网商交易见证平台有交互的ISV在创建账户时的uid，也就是ISV平台上的用户ID（字母或数字）.</param>
        /// <param name="bankcardNo">对应集团到卡模式的银行编号.学校与支付宝后台签约时，由学校提交给支付宝的编号.</param>
        /// <param name="batchNo">集团收单模式：分账批次号，支付宝配置后提供的银行卡批次号.</param>
        /// <param name="cardAliasNo">学校开通直付通卡编号，smid与card_alias_no必须同时填写.</param>
        /// <param name="cityCode">城市的国家编码。参见 &lt;a href&#x3D;\&quot;http://www.stats.gov.cn/tjsj/tjbz/tjyqhdmhcxhfdm/\&quot;&gt;国家统计局出版的行政区划代码&lt;/a&gt;。.</param>
        /// <param name="cityName">城市名称.</param>
        /// <param name="corporateBranchPid">集团收单模式：BD批量上传银行卡信息后，支付宝系统分配给ISV的每个卡分配的唯一标识.</param>
        /// <param name="districtCode">区县的国家编码。参见 &lt;a href&#x3D;\&quot;http://www.stats.gov.cn/tjsj/tjbz/tjyqhdmhcxhfdm/\&quot;&gt;国家统计局出版的行政区划代码&lt;/a&gt;。.</param>
        /// <param name="districtName">区县名称.</param>
        /// <param name="isvName">ISV公司名称 ， 会在账单详情页面展示给用户.</param>
        /// <param name="isvNo">注意：本参数于2017-08-03开始已经废弃，不再需要传递。 由支付宝提供的给已经签约的isv的编码，业务上一般直接采用isv的支付宝PID。.</param>
        /// <param name="isvNotifyUrl">此通知地址是为了保持教育缴费平台与ISV商户支付状态一致性。用户支付成功后，支付宝会根据本isv_notify_url(异步通知说明https://docs.open.alipay.com/203/105286/)，通过POST请求的形式将支付结果作为参数通知到商户系统，ISV商户可以根据返回的参数更新账单状态。.</param>
        /// <param name="isvPhone">ISV的联系方式 ， 会在账单详情页面展示给用户，用户有问题可以直接联系此电话获取帮助.</param>
        /// <param name="isvPid">填写已经签约教育缴费的isv的支付宝PID.</param>
        /// <param name="provinceCode">省份的国家编码，参见 &lt;a href&#x3D;\&quot;http://www.stats.gov.cn/tjsj/tjbz/tjyqhdmhcxhfdm/\&quot;&gt;国家统计局出版的行政区划代码&lt;/a&gt;。.</param>
        /// <param name="provinceName">省名称.</param>
        /// <param name="schoolIcon">学校的校徽或logo，在学校展示页面作为学校的标识。该字段为图片的链接地址，只支持png或jpg图片格式，图片高度为108，宽度为108 ，不大于20k。  注意：此链接要求公网可以访问，否则无法正常展示。.</param>
        /// <param name="schoolIconType">如果填写了school_icon参数，则此字段不能为空。目前只支持png和jpg两种格式.</param>
        /// <param name="schoolName">学校名称.</param>
        /// <param name="schoolPid">学校签约支付宝教育缴费支付宝pid,如果是直付通学校，填写直付通返回的smid.</param>
        /// <param name="schoolStdcode">学校(机构)标识码（由教育部按照国家标准及编码规则编制，可以在教育局官网查询）.</param>
        /// <param name="schoolType">学校的类型。枚举值如下： *1：代表托儿所。 *2：代表幼儿园。 *3：代表小学。 *4：代表初中。 *5：代表高中。 注意：如果学校兼有多种属性，可以连写，比如：45：代表兼有初中部高中部；34：代表兼有小学部初中部。.</param>
        /// <param name="smid">学校开通直付通返回的二级商户id，smid与card_alias_no必须同时填写.</param>
        /// <param name="transIn">集团收单模式：分账批次号，支付宝配置后提供的银行卡批次号.</param>
        /// <param name="whiteChannelCode">与浙江网商交易见证平台有交互的ISV,由网商分配给ISV的渠道参数.</param>
        public AlipayEcoEduKtSchoolinfoModifyModel(string bankNotifyUrl = default(string), string bankPartnerId = default(string), string bankUid = default(string), string bankcardNo = default(string), string batchNo = default(string), string cardAliasNo = default(string), string cityCode = default(string), string cityName = default(string), string corporateBranchPid = default(string), string districtCode = default(string), string districtName = default(string), string isvName = default(string), string isvNo = default(string), string isvNotifyUrl = default(string), string isvPhone = default(string), string isvPid = default(string), string provinceCode = default(string), string provinceName = default(string), string schoolIcon = default(string), string schoolIconType = default(string), string schoolName = default(string), string schoolPid = default(string), string schoolStdcode = default(string), string schoolType = default(string), string smid = default(string), string transIn = default(string), string whiteChannelCode = default(string))
        {
            this.BankNotifyUrl = bankNotifyUrl;
            this.BankPartnerId = bankPartnerId;
            this.BankUid = bankUid;
            this.BankcardNo = bankcardNo;
            this.BatchNo = batchNo;
            this.CardAliasNo = cardAliasNo;
            this.CityCode = cityCode;
            this.CityName = cityName;
            this.CorporateBranchPid = corporateBranchPid;
            this.DistrictCode = districtCode;
            this.DistrictName = districtName;
            this.IsvName = isvName;
            this.IsvNo = isvNo;
            this.IsvNotifyUrl = isvNotifyUrl;
            this.IsvPhone = isvPhone;
            this.IsvPid = isvPid;
            this.ProvinceCode = provinceCode;
            this.ProvinceName = provinceName;
            this.SchoolIcon = schoolIcon;
            this.SchoolIconType = schoolIconType;
            this.SchoolName = schoolName;
            this.SchoolPid = schoolPid;
            this.SchoolStdcode = schoolStdcode;
            this.SchoolType = schoolType;
            this.Smid = smid;
            this.TransIn = transIn;
            this.WhiteChannelCode = whiteChannelCode;
        }

        /// <summary>
        /// 与浙江网商交易见证平台有交互ISV输入网商交易异步通知回调URL，教育缴费同步账单信息给网商，网商会回调此url，ISV即可获取网商相关的参数，根据教育缴费平台账单发送接口返回的 order_no和网商返回的outer_trade_no来对应账单信息。
        /// </summary>
        /// <value>与浙江网商交易见证平台有交互ISV输入网商交易异步通知回调URL，教育缴费同步账单信息给网商，网商会回调此url，ISV即可获取网商相关的参数，根据教育缴费平台账单发送接口返回的 order_no和网商返回的outer_trade_no来对应账单信息。</value>
        [DataMember(Name = "bank_notify_url", EmitDefaultValue = false)]
        public string BankNotifyUrl { get; set; }

        /// <summary>
        /// 与浙江网商交易见证平台有交互的ISV,由交易见证平台分配给合作方业务平台 签约唯一ID ，由网商分配给ISV的渠道参数
        /// </summary>
        /// <value>与浙江网商交易见证平台有交互的ISV,由交易见证平台分配给合作方业务平台 签约唯一ID ，由网商分配给ISV的渠道参数</value>
        [DataMember(Name = "bank_partner_id", EmitDefaultValue = false)]
        public string BankPartnerId { get; set; }

        /// <summary>
        /// 与浙江网商交易见证平台有交互的ISV在创建账户时的uid，也就是ISV平台上的用户ID（字母或数字）
        /// </summary>
        /// <value>与浙江网商交易见证平台有交互的ISV在创建账户时的uid，也就是ISV平台上的用户ID（字母或数字）</value>
        [DataMember(Name = "bank_uid", EmitDefaultValue = false)]
        public string BankUid { get; set; }

        /// <summary>
        /// 对应集团到卡模式的银行编号.学校与支付宝后台签约时，由学校提交给支付宝的编号
        /// </summary>
        /// <value>对应集团到卡模式的银行编号.学校与支付宝后台签约时，由学校提交给支付宝的编号</value>
        [DataMember(Name = "bankcard_no", EmitDefaultValue = false)]
        public string BankcardNo { get; set; }

        /// <summary>
        /// 集团收单模式：分账批次号，支付宝配置后提供的银行卡批次号
        /// </summary>
        /// <value>集团收单模式：分账批次号，支付宝配置后提供的银行卡批次号</value>
        [DataMember(Name = "batch_no", EmitDefaultValue = false)]
        public string BatchNo { get; set; }

        /// <summary>
        /// 学校开通直付通卡编号，smid与card_alias_no必须同时填写
        /// </summary>
        /// <value>学校开通直付通卡编号，smid与card_alias_no必须同时填写</value>
        [DataMember(Name = "card_alias_no", EmitDefaultValue = false)]
        public string CardAliasNo { get; set; }

        /// <summary>
        /// 城市的国家编码。参见 &lt;a href&#x3D;\&quot;http://www.stats.gov.cn/tjsj/tjbz/tjyqhdmhcxhfdm/\&quot;&gt;国家统计局出版的行政区划代码&lt;/a&gt;。
        /// </summary>
        /// <value>城市的国家编码。参见 &lt;a href&#x3D;\&quot;http://www.stats.gov.cn/tjsj/tjbz/tjyqhdmhcxhfdm/\&quot;&gt;国家统计局出版的行政区划代码&lt;/a&gt;。</value>
        [DataMember(Name = "city_code", EmitDefaultValue = false)]
        public string CityCode { get; set; }

        /// <summary>
        /// 城市名称
        /// </summary>
        /// <value>城市名称</value>
        [DataMember(Name = "city_name", EmitDefaultValue = false)]
        public string CityName { get; set; }

        /// <summary>
        /// 集团收单模式：BD批量上传银行卡信息后，支付宝系统分配给ISV的每个卡分配的唯一标识
        /// </summary>
        /// <value>集团收单模式：BD批量上传银行卡信息后，支付宝系统分配给ISV的每个卡分配的唯一标识</value>
        [DataMember(Name = "corporate_branch_pid", EmitDefaultValue = false)]
        public string CorporateBranchPid { get; set; }

        /// <summary>
        /// 区县的国家编码。参见 &lt;a href&#x3D;\&quot;http://www.stats.gov.cn/tjsj/tjbz/tjyqhdmhcxhfdm/\&quot;&gt;国家统计局出版的行政区划代码&lt;/a&gt;。
        /// </summary>
        /// <value>区县的国家编码。参见 &lt;a href&#x3D;\&quot;http://www.stats.gov.cn/tjsj/tjbz/tjyqhdmhcxhfdm/\&quot;&gt;国家统计局出版的行政区划代码&lt;/a&gt;。</value>
        [DataMember(Name = "district_code", EmitDefaultValue = false)]
        public string DistrictCode { get; set; }

        /// <summary>
        /// 区县名称
        /// </summary>
        /// <value>区县名称</value>
        [DataMember(Name = "district_name", EmitDefaultValue = false)]
        public string DistrictName { get; set; }

        /// <summary>
        /// ISV公司名称 ， 会在账单详情页面展示给用户
        /// </summary>
        /// <value>ISV公司名称 ， 会在账单详情页面展示给用户</value>
        [DataMember(Name = "isv_name", EmitDefaultValue = false)]
        public string IsvName { get; set; }

        /// <summary>
        /// 注意：本参数于2017-08-03开始已经废弃，不再需要传递。 由支付宝提供的给已经签约的isv的编码，业务上一般直接采用isv的支付宝PID。
        /// </summary>
        /// <value>注意：本参数于2017-08-03开始已经废弃，不再需要传递。 由支付宝提供的给已经签约的isv的编码，业务上一般直接采用isv的支付宝PID。</value>
        [DataMember(Name = "isv_no", EmitDefaultValue = false)]
        public string IsvNo { get; set; }

        /// <summary>
        /// 此通知地址是为了保持教育缴费平台与ISV商户支付状态一致性。用户支付成功后，支付宝会根据本isv_notify_url(异步通知说明https://docs.open.alipay.com/203/105286/)，通过POST请求的形式将支付结果作为参数通知到商户系统，ISV商户可以根据返回的参数更新账单状态。
        /// </summary>
        /// <value>此通知地址是为了保持教育缴费平台与ISV商户支付状态一致性。用户支付成功后，支付宝会根据本isv_notify_url(异步通知说明https://docs.open.alipay.com/203/105286/)，通过POST请求的形式将支付结果作为参数通知到商户系统，ISV商户可以根据返回的参数更新账单状态。</value>
        [DataMember(Name = "isv_notify_url", EmitDefaultValue = false)]
        public string IsvNotifyUrl { get; set; }

        /// <summary>
        /// ISV的联系方式 ， 会在账单详情页面展示给用户，用户有问题可以直接联系此电话获取帮助
        /// </summary>
        /// <value>ISV的联系方式 ， 会在账单详情页面展示给用户，用户有问题可以直接联系此电话获取帮助</value>
        [DataMember(Name = "isv_phone", EmitDefaultValue = false)]
        public string IsvPhone { get; set; }

        /// <summary>
        /// 填写已经签约教育缴费的isv的支付宝PID
        /// </summary>
        /// <value>填写已经签约教育缴费的isv的支付宝PID</value>
        [DataMember(Name = "isv_pid", EmitDefaultValue = false)]
        public string IsvPid { get; set; }

        /// <summary>
        /// 省份的国家编码，参见 &lt;a href&#x3D;\&quot;http://www.stats.gov.cn/tjsj/tjbz/tjyqhdmhcxhfdm/\&quot;&gt;国家统计局出版的行政区划代码&lt;/a&gt;。
        /// </summary>
        /// <value>省份的国家编码，参见 &lt;a href&#x3D;\&quot;http://www.stats.gov.cn/tjsj/tjbz/tjyqhdmhcxhfdm/\&quot;&gt;国家统计局出版的行政区划代码&lt;/a&gt;。</value>
        [DataMember(Name = "province_code", EmitDefaultValue = false)]
        public string ProvinceCode { get; set; }

        /// <summary>
        /// 省名称
        /// </summary>
        /// <value>省名称</value>
        [DataMember(Name = "province_name", EmitDefaultValue = false)]
        public string ProvinceName { get; set; }

        /// <summary>
        /// 学校的校徽或logo，在学校展示页面作为学校的标识。该字段为图片的链接地址，只支持png或jpg图片格式，图片高度为108，宽度为108 ，不大于20k。  注意：此链接要求公网可以访问，否则无法正常展示。
        /// </summary>
        /// <value>学校的校徽或logo，在学校展示页面作为学校的标识。该字段为图片的链接地址，只支持png或jpg图片格式，图片高度为108，宽度为108 ，不大于20k。  注意：此链接要求公网可以访问，否则无法正常展示。</value>
        [DataMember(Name = "school_icon", EmitDefaultValue = false)]
        public string SchoolIcon { get; set; }

        /// <summary>
        /// 如果填写了school_icon参数，则此字段不能为空。目前只支持png和jpg两种格式
        /// </summary>
        /// <value>如果填写了school_icon参数，则此字段不能为空。目前只支持png和jpg两种格式</value>
        [DataMember(Name = "school_icon_type", EmitDefaultValue = false)]
        public string SchoolIconType { get; set; }

        /// <summary>
        /// 学校名称
        /// </summary>
        /// <value>学校名称</value>
        [DataMember(Name = "school_name", EmitDefaultValue = false)]
        public string SchoolName { get; set; }

        /// <summary>
        /// 学校签约支付宝教育缴费支付宝pid,如果是直付通学校，填写直付通返回的smid
        /// </summary>
        /// <value>学校签约支付宝教育缴费支付宝pid,如果是直付通学校，填写直付通返回的smid</value>
        [DataMember(Name = "school_pid", EmitDefaultValue = false)]
        public string SchoolPid { get; set; }

        /// <summary>
        /// 学校(机构)标识码（由教育部按照国家标准及编码规则编制，可以在教育局官网查询）
        /// </summary>
        /// <value>学校(机构)标识码（由教育部按照国家标准及编码规则编制，可以在教育局官网查询）</value>
        [DataMember(Name = "school_stdcode", EmitDefaultValue = false)]
        public string SchoolStdcode { get; set; }

        /// <summary>
        /// 学校的类型。枚举值如下： *1：代表托儿所。 *2：代表幼儿园。 *3：代表小学。 *4：代表初中。 *5：代表高中。 注意：如果学校兼有多种属性，可以连写，比如：45：代表兼有初中部高中部；34：代表兼有小学部初中部。
        /// </summary>
        /// <value>学校的类型。枚举值如下： *1：代表托儿所。 *2：代表幼儿园。 *3：代表小学。 *4：代表初中。 *5：代表高中。 注意：如果学校兼有多种属性，可以连写，比如：45：代表兼有初中部高中部；34：代表兼有小学部初中部。</value>
        [DataMember(Name = "school_type", EmitDefaultValue = false)]
        public string SchoolType { get; set; }

        /// <summary>
        /// 学校开通直付通返回的二级商户id，smid与card_alias_no必须同时填写
        /// </summary>
        /// <value>学校开通直付通返回的二级商户id，smid与card_alias_no必须同时填写</value>
        [DataMember(Name = "smid", EmitDefaultValue = false)]
        public string Smid { get; set; }

        /// <summary>
        /// 集团收单模式：分账批次号，支付宝配置后提供的银行卡批次号
        /// </summary>
        /// <value>集团收单模式：分账批次号，支付宝配置后提供的银行卡批次号</value>
        [DataMember(Name = "trans_in", EmitDefaultValue = false)]
        public string TransIn { get; set; }

        /// <summary>
        /// 与浙江网商交易见证平台有交互的ISV,由网商分配给ISV的渠道参数
        /// </summary>
        /// <value>与浙江网商交易见证平台有交互的ISV,由网商分配给ISV的渠道参数</value>
        [DataMember(Name = "white_channel_code", EmitDefaultValue = false)]
        public string WhiteChannelCode { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class AlipayEcoEduKtSchoolinfoModifyModel {\n");
            sb.Append("  BankNotifyUrl: ").Append(BankNotifyUrl).Append("\n");
            sb.Append("  BankPartnerId: ").Append(BankPartnerId).Append("\n");
            sb.Append("  BankUid: ").Append(BankUid).Append("\n");
            sb.Append("  BankcardNo: ").Append(BankcardNo).Append("\n");
            sb.Append("  BatchNo: ").Append(BatchNo).Append("\n");
            sb.Append("  CardAliasNo: ").Append(CardAliasNo).Append("\n");
            sb.Append("  CityCode: ").Append(CityCode).Append("\n");
            sb.Append("  CityName: ").Append(CityName).Append("\n");
            sb.Append("  CorporateBranchPid: ").Append(CorporateBranchPid).Append("\n");
            sb.Append("  DistrictCode: ").Append(DistrictCode).Append("\n");
            sb.Append("  DistrictName: ").Append(DistrictName).Append("\n");
            sb.Append("  IsvName: ").Append(IsvName).Append("\n");
            sb.Append("  IsvNo: ").Append(IsvNo).Append("\n");
            sb.Append("  IsvNotifyUrl: ").Append(IsvNotifyUrl).Append("\n");
            sb.Append("  IsvPhone: ").Append(IsvPhone).Append("\n");
            sb.Append("  IsvPid: ").Append(IsvPid).Append("\n");
            sb.Append("  ProvinceCode: ").Append(ProvinceCode).Append("\n");
            sb.Append("  ProvinceName: ").Append(ProvinceName).Append("\n");
            sb.Append("  SchoolIcon: ").Append(SchoolIcon).Append("\n");
            sb.Append("  SchoolIconType: ").Append(SchoolIconType).Append("\n");
            sb.Append("  SchoolName: ").Append(SchoolName).Append("\n");
            sb.Append("  SchoolPid: ").Append(SchoolPid).Append("\n");
            sb.Append("  SchoolStdcode: ").Append(SchoolStdcode).Append("\n");
            sb.Append("  SchoolType: ").Append(SchoolType).Append("\n");
            sb.Append("  Smid: ").Append(Smid).Append("\n");
            sb.Append("  TransIn: ").Append(TransIn).Append("\n");
            sb.Append("  WhiteChannelCode: ").Append(WhiteChannelCode).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as AlipayEcoEduKtSchoolinfoModifyModel);
        }

        /// <summary>
        /// Returns true if AlipayEcoEduKtSchoolinfoModifyModel instances are equal
        /// </summary>
        /// <param name="input">Instance of AlipayEcoEduKtSchoolinfoModifyModel to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AlipayEcoEduKtSchoolinfoModifyModel input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.BankNotifyUrl == input.BankNotifyUrl ||
                    (this.BankNotifyUrl != null &&
                    this.BankNotifyUrl.Equals(input.BankNotifyUrl))
                ) && 
                (
                    this.BankPartnerId == input.BankPartnerId ||
                    (this.BankPartnerId != null &&
                    this.BankPartnerId.Equals(input.BankPartnerId))
                ) && 
                (
                    this.BankUid == input.BankUid ||
                    (this.BankUid != null &&
                    this.BankUid.Equals(input.BankUid))
                ) && 
                (
                    this.BankcardNo == input.BankcardNo ||
                    (this.BankcardNo != null &&
                    this.BankcardNo.Equals(input.BankcardNo))
                ) && 
                (
                    this.BatchNo == input.BatchNo ||
                    (this.BatchNo != null &&
                    this.BatchNo.Equals(input.BatchNo))
                ) && 
                (
                    this.CardAliasNo == input.CardAliasNo ||
                    (this.CardAliasNo != null &&
                    this.CardAliasNo.Equals(input.CardAliasNo))
                ) && 
                (
                    this.CityCode == input.CityCode ||
                    (this.CityCode != null &&
                    this.CityCode.Equals(input.CityCode))
                ) && 
                (
                    this.CityName == input.CityName ||
                    (this.CityName != null &&
                    this.CityName.Equals(input.CityName))
                ) && 
                (
                    this.CorporateBranchPid == input.CorporateBranchPid ||
                    (this.CorporateBranchPid != null &&
                    this.CorporateBranchPid.Equals(input.CorporateBranchPid))
                ) && 
                (
                    this.DistrictCode == input.DistrictCode ||
                    (this.DistrictCode != null &&
                    this.DistrictCode.Equals(input.DistrictCode))
                ) && 
                (
                    this.DistrictName == input.DistrictName ||
                    (this.DistrictName != null &&
                    this.DistrictName.Equals(input.DistrictName))
                ) && 
                (
                    this.IsvName == input.IsvName ||
                    (this.IsvName != null &&
                    this.IsvName.Equals(input.IsvName))
                ) && 
                (
                    this.IsvNo == input.IsvNo ||
                    (this.IsvNo != null &&
                    this.IsvNo.Equals(input.IsvNo))
                ) && 
                (
                    this.IsvNotifyUrl == input.IsvNotifyUrl ||
                    (this.IsvNotifyUrl != null &&
                    this.IsvNotifyUrl.Equals(input.IsvNotifyUrl))
                ) && 
                (
                    this.IsvPhone == input.IsvPhone ||
                    (this.IsvPhone != null &&
                    this.IsvPhone.Equals(input.IsvPhone))
                ) && 
                (
                    this.IsvPid == input.IsvPid ||
                    (this.IsvPid != null &&
                    this.IsvPid.Equals(input.IsvPid))
                ) && 
                (
                    this.ProvinceCode == input.ProvinceCode ||
                    (this.ProvinceCode != null &&
                    this.ProvinceCode.Equals(input.ProvinceCode))
                ) && 
                (
                    this.ProvinceName == input.ProvinceName ||
                    (this.ProvinceName != null &&
                    this.ProvinceName.Equals(input.ProvinceName))
                ) && 
                (
                    this.SchoolIcon == input.SchoolIcon ||
                    (this.SchoolIcon != null &&
                    this.SchoolIcon.Equals(input.SchoolIcon))
                ) && 
                (
                    this.SchoolIconType == input.SchoolIconType ||
                    (this.SchoolIconType != null &&
                    this.SchoolIconType.Equals(input.SchoolIconType))
                ) && 
                (
                    this.SchoolName == input.SchoolName ||
                    (this.SchoolName != null &&
                    this.SchoolName.Equals(input.SchoolName))
                ) && 
                (
                    this.SchoolPid == input.SchoolPid ||
                    (this.SchoolPid != null &&
                    this.SchoolPid.Equals(input.SchoolPid))
                ) && 
                (
                    this.SchoolStdcode == input.SchoolStdcode ||
                    (this.SchoolStdcode != null &&
                    this.SchoolStdcode.Equals(input.SchoolStdcode))
                ) && 
                (
                    this.SchoolType == input.SchoolType ||
                    (this.SchoolType != null &&
                    this.SchoolType.Equals(input.SchoolType))
                ) && 
                (
                    this.Smid == input.Smid ||
                    (this.Smid != null &&
                    this.Smid.Equals(input.Smid))
                ) && 
                (
                    this.TransIn == input.TransIn ||
                    (this.TransIn != null &&
                    this.TransIn.Equals(input.TransIn))
                ) && 
                (
                    this.WhiteChannelCode == input.WhiteChannelCode ||
                    (this.WhiteChannelCode != null &&
                    this.WhiteChannelCode.Equals(input.WhiteChannelCode))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.BankNotifyUrl != null)
                {
                    hashCode = (hashCode * 59) + this.BankNotifyUrl.GetHashCode();
                }
                if (this.BankPartnerId != null)
                {
                    hashCode = (hashCode * 59) + this.BankPartnerId.GetHashCode();
                }
                if (this.BankUid != null)
                {
                    hashCode = (hashCode * 59) + this.BankUid.GetHashCode();
                }
                if (this.BankcardNo != null)
                {
                    hashCode = (hashCode * 59) + this.BankcardNo.GetHashCode();
                }
                if (this.BatchNo != null)
                {
                    hashCode = (hashCode * 59) + this.BatchNo.GetHashCode();
                }
                if (this.CardAliasNo != null)
                {
                    hashCode = (hashCode * 59) + this.CardAliasNo.GetHashCode();
                }
                if (this.CityCode != null)
                {
                    hashCode = (hashCode * 59) + this.CityCode.GetHashCode();
                }
                if (this.CityName != null)
                {
                    hashCode = (hashCode * 59) + this.CityName.GetHashCode();
                }
                if (this.CorporateBranchPid != null)
                {
                    hashCode = (hashCode * 59) + this.CorporateBranchPid.GetHashCode();
                }
                if (this.DistrictCode != null)
                {
                    hashCode = (hashCode * 59) + this.DistrictCode.GetHashCode();
                }
                if (this.DistrictName != null)
                {
                    hashCode = (hashCode * 59) + this.DistrictName.GetHashCode();
                }
                if (this.IsvName != null)
                {
                    hashCode = (hashCode * 59) + this.IsvName.GetHashCode();
                }
                if (this.IsvNo != null)
                {
                    hashCode = (hashCode * 59) + this.IsvNo.GetHashCode();
                }
                if (this.IsvNotifyUrl != null)
                {
                    hashCode = (hashCode * 59) + this.IsvNotifyUrl.GetHashCode();
                }
                if (this.IsvPhone != null)
                {
                    hashCode = (hashCode * 59) + this.IsvPhone.GetHashCode();
                }
                if (this.IsvPid != null)
                {
                    hashCode = (hashCode * 59) + this.IsvPid.GetHashCode();
                }
                if (this.ProvinceCode != null)
                {
                    hashCode = (hashCode * 59) + this.ProvinceCode.GetHashCode();
                }
                if (this.ProvinceName != null)
                {
                    hashCode = (hashCode * 59) + this.ProvinceName.GetHashCode();
                }
                if (this.SchoolIcon != null)
                {
                    hashCode = (hashCode * 59) + this.SchoolIcon.GetHashCode();
                }
                if (this.SchoolIconType != null)
                {
                    hashCode = (hashCode * 59) + this.SchoolIconType.GetHashCode();
                }
                if (this.SchoolName != null)
                {
                    hashCode = (hashCode * 59) + this.SchoolName.GetHashCode();
                }
                if (this.SchoolPid != null)
                {
                    hashCode = (hashCode * 59) + this.SchoolPid.GetHashCode();
                }
                if (this.SchoolStdcode != null)
                {
                    hashCode = (hashCode * 59) + this.SchoolStdcode.GetHashCode();
                }
                if (this.SchoolType != null)
                {
                    hashCode = (hashCode * 59) + this.SchoolType.GetHashCode();
                }
                if (this.Smid != null)
                {
                    hashCode = (hashCode * 59) + this.Smid.GetHashCode();
                }
                if (this.TransIn != null)
                {
                    hashCode = (hashCode * 59) + this.TransIn.GetHashCode();
                }
                if (this.WhiteChannelCode != null)
                {
                    hashCode = (hashCode * 59) + this.WhiteChannelCode.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
