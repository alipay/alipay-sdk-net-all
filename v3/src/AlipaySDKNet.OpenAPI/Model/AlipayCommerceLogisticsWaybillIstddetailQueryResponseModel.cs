/*
 * 支付宝开放平台API
 *
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2025-02-19
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = AlipaySDKNet.OpenAPI.Client.OpenAPIDateConverter;

namespace AlipaySDKNet.OpenAPI.Model
{
    /// <summary>
    /// AlipayCommerceLogisticsWaybillIstddetailQueryResponseModel
    /// </summary>
    [DataContract(Name = "AlipayCommerceLogisticsWaybillIstddetailQueryResponseModel")]
    public partial class AlipayCommerceLogisticsWaybillIstddetailQueryResponseModel : IEquatable<AlipayCommerceLogisticsWaybillIstddetailQueryResponseModel>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AlipayCommerceLogisticsWaybillIstddetailQueryResponseModel" /> class.
        /// </summary>
        /// <param name="reachDuration">预计还剩多久送达 单位：秒.</param>
        /// <param name="riderLat">骑手位置纬度.</param>
        /// <param name="riderLng">骑手位置经度.</param>
        /// <param name="riderMobileNo">骑手电话.</param>
        /// <param name="riderName">骑手姓名.</param>
        /// <param name="riderPoiLink">骑手实时定位H5链接字段，在骑手已接单后，将可展示骑手实时位置的H5页面链接同步商户.</param>
        /// <param name="status">即时配送运单状态.</param>
        public AlipayCommerceLogisticsWaybillIstddetailQueryResponseModel(int reachDuration = default(int), string riderLat = default(string), string riderLng = default(string), string riderMobileNo = default(string), string riderName = default(string), string riderPoiLink = default(string), string status = default(string))
        {
            this.ReachDuration = reachDuration;
            this.RiderLat = riderLat;
            this.RiderLng = riderLng;
            this.RiderMobileNo = riderMobileNo;
            this.RiderName = riderName;
            this.RiderPoiLink = riderPoiLink;
            this.Status = status;
        }

        /// <summary>
        /// 预计还剩多久送达 单位：秒
        /// </summary>
        /// <value>预计还剩多久送达 单位：秒</value>
        [DataMember(Name = "reach_duration", EmitDefaultValue = false)]
        public int ReachDuration { get; set; }

        /// <summary>
        /// 骑手位置纬度
        /// </summary>
        /// <value>骑手位置纬度</value>
        [DataMember(Name = "rider_lat", EmitDefaultValue = false)]
        public string RiderLat { get; set; }

        /// <summary>
        /// 骑手位置经度
        /// </summary>
        /// <value>骑手位置经度</value>
        [DataMember(Name = "rider_lng", EmitDefaultValue = false)]
        public string RiderLng { get; set; }

        /// <summary>
        /// 骑手电话
        /// </summary>
        /// <value>骑手电话</value>
        [DataMember(Name = "rider_mobile_no", EmitDefaultValue = false)]
        public string RiderMobileNo { get; set; }

        /// <summary>
        /// 骑手姓名
        /// </summary>
        /// <value>骑手姓名</value>
        [DataMember(Name = "rider_name", EmitDefaultValue = false)]
        public string RiderName { get; set; }

        /// <summary>
        /// 骑手实时定位H5链接字段，在骑手已接单后，将可展示骑手实时位置的H5页面链接同步商户
        /// </summary>
        /// <value>骑手实时定位H5链接字段，在骑手已接单后，将可展示骑手实时位置的H5页面链接同步商户</value>
        [DataMember(Name = "rider_poi_link", EmitDefaultValue = false)]
        public string RiderPoiLink { get; set; }

        /// <summary>
        /// 即时配送运单状态
        /// </summary>
        /// <value>即时配送运单状态</value>
        [DataMember(Name = "status", EmitDefaultValue = false)]
        public string Status { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class AlipayCommerceLogisticsWaybillIstddetailQueryResponseModel {\n");
            sb.Append("  ReachDuration: ").Append(ReachDuration).Append("\n");
            sb.Append("  RiderLat: ").Append(RiderLat).Append("\n");
            sb.Append("  RiderLng: ").Append(RiderLng).Append("\n");
            sb.Append("  RiderMobileNo: ").Append(RiderMobileNo).Append("\n");
            sb.Append("  RiderName: ").Append(RiderName).Append("\n");
            sb.Append("  RiderPoiLink: ").Append(RiderPoiLink).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as AlipayCommerceLogisticsWaybillIstddetailQueryResponseModel);
        }

        /// <summary>
        /// Returns true if AlipayCommerceLogisticsWaybillIstddetailQueryResponseModel instances are equal
        /// </summary>
        /// <param name="input">Instance of AlipayCommerceLogisticsWaybillIstddetailQueryResponseModel to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AlipayCommerceLogisticsWaybillIstddetailQueryResponseModel input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.ReachDuration == input.ReachDuration ||
                    this.ReachDuration.Equals(input.ReachDuration)
                ) && 
                (
                    this.RiderLat == input.RiderLat ||
                    (this.RiderLat != null &&
                    this.RiderLat.Equals(input.RiderLat))
                ) && 
                (
                    this.RiderLng == input.RiderLng ||
                    (this.RiderLng != null &&
                    this.RiderLng.Equals(input.RiderLng))
                ) && 
                (
                    this.RiderMobileNo == input.RiderMobileNo ||
                    (this.RiderMobileNo != null &&
                    this.RiderMobileNo.Equals(input.RiderMobileNo))
                ) && 
                (
                    this.RiderName == input.RiderName ||
                    (this.RiderName != null &&
                    this.RiderName.Equals(input.RiderName))
                ) && 
                (
                    this.RiderPoiLink == input.RiderPoiLink ||
                    (this.RiderPoiLink != null &&
                    this.RiderPoiLink.Equals(input.RiderPoiLink))
                ) && 
                (
                    this.Status == input.Status ||
                    (this.Status != null &&
                    this.Status.Equals(input.Status))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                hashCode = (hashCode * 59) + this.ReachDuration.GetHashCode();
                if (this.RiderLat != null)
                {
                    hashCode = (hashCode * 59) + this.RiderLat.GetHashCode();
                }
                if (this.RiderLng != null)
                {
                    hashCode = (hashCode * 59) + this.RiderLng.GetHashCode();
                }
                if (this.RiderMobileNo != null)
                {
                    hashCode = (hashCode * 59) + this.RiderMobileNo.GetHashCode();
                }
                if (this.RiderName != null)
                {
                    hashCode = (hashCode * 59) + this.RiderName.GetHashCode();
                }
                if (this.RiderPoiLink != null)
                {
                    hashCode = (hashCode * 59) + this.RiderPoiLink.GetHashCode();
                }
                if (this.Status != null)
                {
                    hashCode = (hashCode * 59) + this.Status.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
