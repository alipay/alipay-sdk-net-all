/*
 * 支付宝开放平台API
 *
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2025-02-19
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = AlipaySDKNet.OpenAPI.Client.OpenAPIDateConverter;

namespace AlipaySDKNet.OpenAPI.Model
{
    /// <summary>
    /// AlipayTradeRoyaltyRateQueryResponseModel
    /// </summary>
    [DataContract(Name = "AlipayTradeRoyaltyRateQueryResponseModel")]
    public partial class AlipayTradeRoyaltyRateQueryResponseModel : IEquatable<AlipayTradeRoyaltyRateQueryResponseModel>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AlipayTradeRoyaltyRateQueryResponseModel" /> class.
        /// </summary>
        /// <param name="maxRatio">最大分账比例，百分比整数，取值范围0～100.</param>
        /// <param name="userId">当前商户userId.</param>
        public AlipayTradeRoyaltyRateQueryResponseModel(int maxRatio = default(int), string userId = default(string))
        {
            this.MaxRatio = maxRatio;
            this.UserId = userId;
        }

        /// <summary>
        /// 最大分账比例，百分比整数，取值范围0～100
        /// </summary>
        /// <value>最大分账比例，百分比整数，取值范围0～100</value>
        [DataMember(Name = "max_ratio", EmitDefaultValue = false)]
        public int MaxRatio { get; set; }

        /// <summary>
        /// 当前商户userId
        /// </summary>
        /// <value>当前商户userId</value>
        [DataMember(Name = "user_id", EmitDefaultValue = false)]
        public string UserId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class AlipayTradeRoyaltyRateQueryResponseModel {\n");
            sb.Append("  MaxRatio: ").Append(MaxRatio).Append("\n");
            sb.Append("  UserId: ").Append(UserId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as AlipayTradeRoyaltyRateQueryResponseModel);
        }

        /// <summary>
        /// Returns true if AlipayTradeRoyaltyRateQueryResponseModel instances are equal
        /// </summary>
        /// <param name="input">Instance of AlipayTradeRoyaltyRateQueryResponseModel to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AlipayTradeRoyaltyRateQueryResponseModel input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.MaxRatio == input.MaxRatio ||
                    this.MaxRatio.Equals(input.MaxRatio)
                ) && 
                (
                    this.UserId == input.UserId ||
                    (this.UserId != null &&
                    this.UserId.Equals(input.UserId))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                hashCode = (hashCode * 59) + this.MaxRatio.GetHashCode();
                if (this.UserId != null)
                {
                    hashCode = (hashCode * 59) + this.UserId.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
