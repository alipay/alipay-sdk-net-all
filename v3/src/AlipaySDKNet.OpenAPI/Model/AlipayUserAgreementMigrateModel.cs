/*
 * 支付宝开放平台API
 *
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2025-02-19
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = AlipaySDKNet.OpenAPI.Client.OpenAPIDateConverter;

namespace AlipaySDKNet.OpenAPI.Model
{
    /// <summary>
    /// AlipayUserAgreementMigrateModel
    /// </summary>
    [DataContract(Name = "AlipayUserAgreementMigrateModel")]
    public partial class AlipayUserAgreementMigrateModel : IEquatable<AlipayUserAgreementMigrateModel>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AlipayUserAgreementMigrateModel" /> class.
        /// </summary>
        /// <param name="agreementNo">支付宝系统中用以唯一标识用户签约记录的编号（用户签约成功后的协议号 ）.</param>
        /// <param name="targetAppId">需要迁移的目标商户应用id.</param>
        /// <param name="targetInvokeAppId">需要迁移的目标商户调用应用id.</param>
        /// <param name="targetPartnerId">需要迁移的目标商户id.</param>
        public AlipayUserAgreementMigrateModel(string agreementNo = default(string), string targetAppId = default(string), string targetInvokeAppId = default(string), string targetPartnerId = default(string))
        {
            this.AgreementNo = agreementNo;
            this.TargetAppId = targetAppId;
            this.TargetInvokeAppId = targetInvokeAppId;
            this.TargetPartnerId = targetPartnerId;
        }

        /// <summary>
        /// 支付宝系统中用以唯一标识用户签约记录的编号（用户签约成功后的协议号 ）
        /// </summary>
        /// <value>支付宝系统中用以唯一标识用户签约记录的编号（用户签约成功后的协议号 ）</value>
        [DataMember(Name = "agreement_no", EmitDefaultValue = false)]
        public string AgreementNo { get; set; }

        /// <summary>
        /// 需要迁移的目标商户应用id
        /// </summary>
        /// <value>需要迁移的目标商户应用id</value>
        [DataMember(Name = "target_app_id", EmitDefaultValue = false)]
        public string TargetAppId { get; set; }

        /// <summary>
        /// 需要迁移的目标商户调用应用id
        /// </summary>
        /// <value>需要迁移的目标商户调用应用id</value>
        [DataMember(Name = "target_invoke_app_id", EmitDefaultValue = false)]
        public string TargetInvokeAppId { get; set; }

        /// <summary>
        /// 需要迁移的目标商户id
        /// </summary>
        /// <value>需要迁移的目标商户id</value>
        [DataMember(Name = "target_partner_id", EmitDefaultValue = false)]
        public string TargetPartnerId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class AlipayUserAgreementMigrateModel {\n");
            sb.Append("  AgreementNo: ").Append(AgreementNo).Append("\n");
            sb.Append("  TargetAppId: ").Append(TargetAppId).Append("\n");
            sb.Append("  TargetInvokeAppId: ").Append(TargetInvokeAppId).Append("\n");
            sb.Append("  TargetPartnerId: ").Append(TargetPartnerId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as AlipayUserAgreementMigrateModel);
        }

        /// <summary>
        /// Returns true if AlipayUserAgreementMigrateModel instances are equal
        /// </summary>
        /// <param name="input">Instance of AlipayUserAgreementMigrateModel to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AlipayUserAgreementMigrateModel input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.AgreementNo == input.AgreementNo ||
                    (this.AgreementNo != null &&
                    this.AgreementNo.Equals(input.AgreementNo))
                ) && 
                (
                    this.TargetAppId == input.TargetAppId ||
                    (this.TargetAppId != null &&
                    this.TargetAppId.Equals(input.TargetAppId))
                ) && 
                (
                    this.TargetInvokeAppId == input.TargetInvokeAppId ||
                    (this.TargetInvokeAppId != null &&
                    this.TargetInvokeAppId.Equals(input.TargetInvokeAppId))
                ) && 
                (
                    this.TargetPartnerId == input.TargetPartnerId ||
                    (this.TargetPartnerId != null &&
                    this.TargetPartnerId.Equals(input.TargetPartnerId))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.AgreementNo != null)
                {
                    hashCode = (hashCode * 59) + this.AgreementNo.GetHashCode();
                }
                if (this.TargetAppId != null)
                {
                    hashCode = (hashCode * 59) + this.TargetAppId.GetHashCode();
                }
                if (this.TargetInvokeAppId != null)
                {
                    hashCode = (hashCode * 59) + this.TargetInvokeAppId.GetHashCode();
                }
                if (this.TargetPartnerId != null)
                {
                    hashCode = (hashCode * 59) + this.TargetPartnerId.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
