/*
 * 支付宝开放平台API
 *
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2025-02-19
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = AlipaySDKNet.OpenAPI.Client.OpenAPIDateConverter;

namespace AlipaySDKNet.OpenAPI.Model
{
    /// <summary>
    /// UserDetails
    /// </summary>
    [DataContract(Name = "UserDetails")]
    public partial class UserDetails : IEquatable<UserDetails>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="UserDetails" /> class.
        /// </summary>
        /// <param name="userChangeMobile">用户变更手机号，替换旧的手机号.</param>
        /// <param name="userMobile">孩子家长的手机号.</param>
        /// <param name="userName">张三.</param>
        /// <param name="userRelation">孩子与家长的关系： 1、爸爸  2、妈妈  3、爷爷  4、奶奶  5、外公  6、外婆  7、家长.</param>
        public UserDetails(string userChangeMobile = default(string), string userMobile = default(string), string userName = default(string), string userRelation = default(string))
        {
            this.UserChangeMobile = userChangeMobile;
            this.UserMobile = userMobile;
            this.UserName = userName;
            this.UserRelation = userRelation;
        }

        /// <summary>
        /// 用户变更手机号，替换旧的手机号
        /// </summary>
        /// <value>用户变更手机号，替换旧的手机号</value>
        [DataMember(Name = "user_change_mobile", EmitDefaultValue = false)]
        public string UserChangeMobile { get; set; }

        /// <summary>
        /// 孩子家长的手机号
        /// </summary>
        /// <value>孩子家长的手机号</value>
        [DataMember(Name = "user_mobile", EmitDefaultValue = false)]
        public string UserMobile { get; set; }

        /// <summary>
        /// 张三
        /// </summary>
        /// <value>张三</value>
        [DataMember(Name = "user_name", EmitDefaultValue = false)]
        public string UserName { get; set; }

        /// <summary>
        /// 孩子与家长的关系： 1、爸爸  2、妈妈  3、爷爷  4、奶奶  5、外公  6、外婆  7、家长
        /// </summary>
        /// <value>孩子与家长的关系： 1、爸爸  2、妈妈  3、爷爷  4、奶奶  5、外公  6、外婆  7、家长</value>
        [DataMember(Name = "user_relation", EmitDefaultValue = false)]
        public string UserRelation { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class UserDetails {\n");
            sb.Append("  UserChangeMobile: ").Append(UserChangeMobile).Append("\n");
            sb.Append("  UserMobile: ").Append(UserMobile).Append("\n");
            sb.Append("  UserName: ").Append(UserName).Append("\n");
            sb.Append("  UserRelation: ").Append(UserRelation).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as UserDetails);
        }

        /// <summary>
        /// Returns true if UserDetails instances are equal
        /// </summary>
        /// <param name="input">Instance of UserDetails to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(UserDetails input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.UserChangeMobile == input.UserChangeMobile ||
                    (this.UserChangeMobile != null &&
                    this.UserChangeMobile.Equals(input.UserChangeMobile))
                ) && 
                (
                    this.UserMobile == input.UserMobile ||
                    (this.UserMobile != null &&
                    this.UserMobile.Equals(input.UserMobile))
                ) && 
                (
                    this.UserName == input.UserName ||
                    (this.UserName != null &&
                    this.UserName.Equals(input.UserName))
                ) && 
                (
                    this.UserRelation == input.UserRelation ||
                    (this.UserRelation != null &&
                    this.UserRelation.Equals(input.UserRelation))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.UserChangeMobile != null)
                {
                    hashCode = (hashCode * 59) + this.UserChangeMobile.GetHashCode();
                }
                if (this.UserMobile != null)
                {
                    hashCode = (hashCode * 59) + this.UserMobile.GetHashCode();
                }
                if (this.UserName != null)
                {
                    hashCode = (hashCode * 59) + this.UserName.GetHashCode();
                }
                if (this.UserRelation != null)
                {
                    hashCode = (hashCode * 59) + this.UserRelation.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
