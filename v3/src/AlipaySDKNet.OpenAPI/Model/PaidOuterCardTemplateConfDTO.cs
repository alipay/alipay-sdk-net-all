/*
 * 支付宝开放平台API
 *
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2025-02-19
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = AlipaySDKNet.OpenAPI.Client.OpenAPIDateConverter;

namespace AlipaySDKNet.OpenAPI.Model
{
    /// <summary>
    /// PaidOuterCardTemplateConfDTO
    /// </summary>
    [DataContract(Name = "PaidOuterCardTemplateConfDTO")]
    public partial class PaidOuterCardTemplateConfDTO : IEquatable<PaidOuterCardTemplateConfDTO>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="PaidOuterCardTemplateConfDTO" /> class.
        /// </summary>
        /// <param name="cycleSellingConf">cycleSellingConf.</param>
        /// <param name="manageUrlConf">manageUrlConf.</param>
        /// <param name="openSellingConf">openSellingConf.</param>
        public PaidOuterCardTemplateConfDTO(PaidOuterCardCycleSellConfDTO cycleSellingConf = default(PaidOuterCardCycleSellConfDTO), PaidOuterCardManageUrlConfDTO manageUrlConf = default(PaidOuterCardManageUrlConfDTO), PaidOuterCardSellingConfDTO openSellingConf = default(PaidOuterCardSellingConfDTO))
        {
            this.CycleSellingConf = cycleSellingConf;
            this.ManageUrlConf = manageUrlConf;
            this.OpenSellingConf = openSellingConf;
        }

        /// <summary>
        /// Gets or Sets CycleSellingConf
        /// </summary>
        [DataMember(Name = "cycle_selling_conf", EmitDefaultValue = false)]
        public PaidOuterCardCycleSellConfDTO CycleSellingConf { get; set; }

        /// <summary>
        /// Gets or Sets ManageUrlConf
        /// </summary>
        [DataMember(Name = "manage_url_conf", EmitDefaultValue = false)]
        public PaidOuterCardManageUrlConfDTO ManageUrlConf { get; set; }

        /// <summary>
        /// Gets or Sets OpenSellingConf
        /// </summary>
        [DataMember(Name = "open_selling_conf", EmitDefaultValue = false)]
        public PaidOuterCardSellingConfDTO OpenSellingConf { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class PaidOuterCardTemplateConfDTO {\n");
            sb.Append("  CycleSellingConf: ").Append(CycleSellingConf).Append("\n");
            sb.Append("  ManageUrlConf: ").Append(ManageUrlConf).Append("\n");
            sb.Append("  OpenSellingConf: ").Append(OpenSellingConf).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as PaidOuterCardTemplateConfDTO);
        }

        /// <summary>
        /// Returns true if PaidOuterCardTemplateConfDTO instances are equal
        /// </summary>
        /// <param name="input">Instance of PaidOuterCardTemplateConfDTO to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(PaidOuterCardTemplateConfDTO input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.CycleSellingConf == input.CycleSellingConf ||
                    (this.CycleSellingConf != null &&
                    this.CycleSellingConf.Equals(input.CycleSellingConf))
                ) && 
                (
                    this.ManageUrlConf == input.ManageUrlConf ||
                    (this.ManageUrlConf != null &&
                    this.ManageUrlConf.Equals(input.ManageUrlConf))
                ) && 
                (
                    this.OpenSellingConf == input.OpenSellingConf ||
                    (this.OpenSellingConf != null &&
                    this.OpenSellingConf.Equals(input.OpenSellingConf))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.CycleSellingConf != null)
                {
                    hashCode = (hashCode * 59) + this.CycleSellingConf.GetHashCode();
                }
                if (this.ManageUrlConf != null)
                {
                    hashCode = (hashCode * 59) + this.ManageUrlConf.GetHashCode();
                }
                if (this.OpenSellingConf != null)
                {
                    hashCode = (hashCode * 59) + this.OpenSellingConf.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
