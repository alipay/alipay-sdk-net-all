/*
 * 支付宝开放平台API
 *
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2025-02-19
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = AlipaySDKNet.OpenAPI.Client.OpenAPIDateConverter;

namespace AlipaySDKNet.OpenAPI.Model
{
    /// <summary>
    /// CloudResumeEducationExperience
    /// </summary>
    [DataContract(Name = "CloudResumeEducationExperience")]
    public partial class CloudResumeEducationExperience : IEquatable<CloudResumeEducationExperience>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CloudResumeEducationExperience" /> class.
        /// </summary>
        /// <param name="degree">学历.</param>
        /// <param name="educationStatus">教育状态.</param>
        /// <param name="finishSchoolMonth">毕业月份.</param>
        /// <param name="finishSchoolYear">毕业年份.</param>
        /// <param name="inSchoolMonth">入学月份.</param>
        /// <param name="inSchoolYear">入学年份.</param>
        /// <param name="location">受教育地点.</param>
        /// <param name="major">上学专业.</param>
        /// <param name="month">月.</param>
        /// <param name="schoolName">学校名称.</param>
        /// <param name="tongZhao">是否统招.</param>
        /// <param name="year">年.</param>
        public CloudResumeEducationExperience(string degree = default(string), string educationStatus = default(string), string finishSchoolMonth = default(string), int finishSchoolYear = default(int), int inSchoolMonth = default(int), int inSchoolYear = default(int), string location = default(string), string major = default(string), int month = default(int), string schoolName = default(string), bool tongZhao = default(bool), int year = default(int))
        {
            this.Degree = degree;
            this.EducationStatus = educationStatus;
            this.FinishSchoolMonth = finishSchoolMonth;
            this.FinishSchoolYear = finishSchoolYear;
            this.InSchoolMonth = inSchoolMonth;
            this.InSchoolYear = inSchoolYear;
            this.Location = location;
            this.Major = major;
            this.Month = month;
            this.SchoolName = schoolName;
            this.TongZhao = tongZhao;
            this.Year = year;
        }

        /// <summary>
        /// 学历
        /// </summary>
        /// <value>学历</value>
        [DataMember(Name = "degree", EmitDefaultValue = false)]
        public string Degree { get; set; }

        /// <summary>
        /// 教育状态
        /// </summary>
        /// <value>教育状态</value>
        [DataMember(Name = "education_status", EmitDefaultValue = false)]
        public string EducationStatus { get; set; }

        /// <summary>
        /// 毕业月份
        /// </summary>
        /// <value>毕业月份</value>
        [DataMember(Name = "finish_school_month", EmitDefaultValue = false)]
        public string FinishSchoolMonth { get; set; }

        /// <summary>
        /// 毕业年份
        /// </summary>
        /// <value>毕业年份</value>
        [DataMember(Name = "finish_school_year", EmitDefaultValue = false)]
        public int FinishSchoolYear { get; set; }

        /// <summary>
        /// 入学月份
        /// </summary>
        /// <value>入学月份</value>
        [DataMember(Name = "in_school_month", EmitDefaultValue = false)]
        public int InSchoolMonth { get; set; }

        /// <summary>
        /// 入学年份
        /// </summary>
        /// <value>入学年份</value>
        [DataMember(Name = "in_school_year", EmitDefaultValue = false)]
        public int InSchoolYear { get; set; }

        /// <summary>
        /// 受教育地点
        /// </summary>
        /// <value>受教育地点</value>
        [DataMember(Name = "location", EmitDefaultValue = false)]
        public string Location { get; set; }

        /// <summary>
        /// 上学专业
        /// </summary>
        /// <value>上学专业</value>
        [DataMember(Name = "major", EmitDefaultValue = false)]
        public string Major { get; set; }

        /// <summary>
        /// 月
        /// </summary>
        /// <value>月</value>
        [DataMember(Name = "month", EmitDefaultValue = false)]
        public int Month { get; set; }

        /// <summary>
        /// 学校名称
        /// </summary>
        /// <value>学校名称</value>
        [DataMember(Name = "school_name", EmitDefaultValue = false)]
        public string SchoolName { get; set; }

        /// <summary>
        /// 是否统招
        /// </summary>
        /// <value>是否统招</value>
        [DataMember(Name = "tong_zhao", EmitDefaultValue = true)]
        public bool TongZhao { get; set; }

        /// <summary>
        /// 年
        /// </summary>
        /// <value>年</value>
        [DataMember(Name = "year", EmitDefaultValue = false)]
        public int Year { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CloudResumeEducationExperience {\n");
            sb.Append("  Degree: ").Append(Degree).Append("\n");
            sb.Append("  EducationStatus: ").Append(EducationStatus).Append("\n");
            sb.Append("  FinishSchoolMonth: ").Append(FinishSchoolMonth).Append("\n");
            sb.Append("  FinishSchoolYear: ").Append(FinishSchoolYear).Append("\n");
            sb.Append("  InSchoolMonth: ").Append(InSchoolMonth).Append("\n");
            sb.Append("  InSchoolYear: ").Append(InSchoolYear).Append("\n");
            sb.Append("  Location: ").Append(Location).Append("\n");
            sb.Append("  Major: ").Append(Major).Append("\n");
            sb.Append("  Month: ").Append(Month).Append("\n");
            sb.Append("  SchoolName: ").Append(SchoolName).Append("\n");
            sb.Append("  TongZhao: ").Append(TongZhao).Append("\n");
            sb.Append("  Year: ").Append(Year).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as CloudResumeEducationExperience);
        }

        /// <summary>
        /// Returns true if CloudResumeEducationExperience instances are equal
        /// </summary>
        /// <param name="input">Instance of CloudResumeEducationExperience to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(CloudResumeEducationExperience input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.Degree == input.Degree ||
                    (this.Degree != null &&
                    this.Degree.Equals(input.Degree))
                ) && 
                (
                    this.EducationStatus == input.EducationStatus ||
                    (this.EducationStatus != null &&
                    this.EducationStatus.Equals(input.EducationStatus))
                ) && 
                (
                    this.FinishSchoolMonth == input.FinishSchoolMonth ||
                    (this.FinishSchoolMonth != null &&
                    this.FinishSchoolMonth.Equals(input.FinishSchoolMonth))
                ) && 
                (
                    this.FinishSchoolYear == input.FinishSchoolYear ||
                    this.FinishSchoolYear.Equals(input.FinishSchoolYear)
                ) && 
                (
                    this.InSchoolMonth == input.InSchoolMonth ||
                    this.InSchoolMonth.Equals(input.InSchoolMonth)
                ) && 
                (
                    this.InSchoolYear == input.InSchoolYear ||
                    this.InSchoolYear.Equals(input.InSchoolYear)
                ) && 
                (
                    this.Location == input.Location ||
                    (this.Location != null &&
                    this.Location.Equals(input.Location))
                ) && 
                (
                    this.Major == input.Major ||
                    (this.Major != null &&
                    this.Major.Equals(input.Major))
                ) && 
                (
                    this.Month == input.Month ||
                    this.Month.Equals(input.Month)
                ) && 
                (
                    this.SchoolName == input.SchoolName ||
                    (this.SchoolName != null &&
                    this.SchoolName.Equals(input.SchoolName))
                ) && 
                (
                    this.TongZhao == input.TongZhao ||
                    this.TongZhao.Equals(input.TongZhao)
                ) && 
                (
                    this.Year == input.Year ||
                    this.Year.Equals(input.Year)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Degree != null)
                {
                    hashCode = (hashCode * 59) + this.Degree.GetHashCode();
                }
                if (this.EducationStatus != null)
                {
                    hashCode = (hashCode * 59) + this.EducationStatus.GetHashCode();
                }
                if (this.FinishSchoolMonth != null)
                {
                    hashCode = (hashCode * 59) + this.FinishSchoolMonth.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.FinishSchoolYear.GetHashCode();
                hashCode = (hashCode * 59) + this.InSchoolMonth.GetHashCode();
                hashCode = (hashCode * 59) + this.InSchoolYear.GetHashCode();
                if (this.Location != null)
                {
                    hashCode = (hashCode * 59) + this.Location.GetHashCode();
                }
                if (this.Major != null)
                {
                    hashCode = (hashCode * 59) + this.Major.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.Month.GetHashCode();
                if (this.SchoolName != null)
                {
                    hashCode = (hashCode * 59) + this.SchoolName.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.TongZhao.GetHashCode();
                hashCode = (hashCode * 59) + this.Year.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
