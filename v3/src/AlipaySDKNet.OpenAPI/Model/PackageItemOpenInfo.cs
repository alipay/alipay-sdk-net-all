/*
 * 支付宝开放平台API
 *
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2025-02-19
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = AlipaySDKNet.OpenAPI.Client.OpenAPIDateConverter;

namespace AlipaySDKNet.OpenAPI.Model
{
    /// <summary>
    /// PackageItemOpenInfo
    /// </summary>
    [DataContract(Name = "PackageItemOpenInfo")]
    public partial class PackageItemOpenInfo : IEquatable<PackageItemOpenInfo>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="PackageItemOpenInfo" /> class.
        /// </summary>
        /// <param name="consumeOutputInfo">consumeOutputInfo.</param>
        /// <param name="fileDownloadUrl">发票文件下载链接.</param>
        /// <param name="fileType">文件类型，如pdf，ofd，jpg.</param>
        /// <param name="invoiceOutputInfo">invoiceOutputInfo.</param>
        /// <param name="itemSource">项目来源，如：ocr\\einvoice\\consume.</param>
        /// <param name="itemSubType">项目子类，如：出租车、火车、飞机等.</param>
        /// <param name="itemType">项目大类，如：餐饮美食、酒店住宿、差旅出行等.</param>
        /// <param name="ocrNormalScanInfo">ocrNormalScanInfo.</param>
        /// <param name="ocrPlaneScanInfo">ocrPlaneScanInfo.</param>
        /// <param name="ocrTaxiScanInfo">ocrTaxiScanInfo.</param>
        /// <param name="ocrTrainScanInfo">ocrTrainScanInfo.</param>
        public PackageItemOpenInfo(ConsumeOutputInfo consumeOutputInfo = default(ConsumeOutputInfo), string fileDownloadUrl = default(string), string fileType = default(string), InvoiceOutputInfo invoiceOutputInfo = default(InvoiceOutputInfo), string itemSource = default(string), string itemSubType = default(string), string itemType = default(string), OcrNormalScanInfo ocrNormalScanInfo = default(OcrNormalScanInfo), OcrPlaneScanInfo ocrPlaneScanInfo = default(OcrPlaneScanInfo), OcrTaxiScanInfo ocrTaxiScanInfo = default(OcrTaxiScanInfo), OcrTrainScanInfo ocrTrainScanInfo = default(OcrTrainScanInfo))
        {
            this.ConsumeOutputInfo = consumeOutputInfo;
            this.FileDownloadUrl = fileDownloadUrl;
            this.FileType = fileType;
            this.InvoiceOutputInfo = invoiceOutputInfo;
            this.ItemSource = itemSource;
            this.ItemSubType = itemSubType;
            this.ItemType = itemType;
            this.OcrNormalScanInfo = ocrNormalScanInfo;
            this.OcrPlaneScanInfo = ocrPlaneScanInfo;
            this.OcrTaxiScanInfo = ocrTaxiScanInfo;
            this.OcrTrainScanInfo = ocrTrainScanInfo;
        }

        /// <summary>
        /// Gets or Sets ConsumeOutputInfo
        /// </summary>
        [DataMember(Name = "consume_output_info", EmitDefaultValue = false)]
        public ConsumeOutputInfo ConsumeOutputInfo { get; set; }

        /// <summary>
        /// 发票文件下载链接
        /// </summary>
        /// <value>发票文件下载链接</value>
        [DataMember(Name = "file_download_url", EmitDefaultValue = false)]
        public string FileDownloadUrl { get; set; }

        /// <summary>
        /// 文件类型，如pdf，ofd，jpg
        /// </summary>
        /// <value>文件类型，如pdf，ofd，jpg</value>
        [DataMember(Name = "file_type", EmitDefaultValue = false)]
        public string FileType { get; set; }

        /// <summary>
        /// Gets or Sets InvoiceOutputInfo
        /// </summary>
        [DataMember(Name = "invoice_output_info", EmitDefaultValue = false)]
        public InvoiceOutputInfo InvoiceOutputInfo { get; set; }

        /// <summary>
        /// 项目来源，如：ocr\\einvoice\\consume
        /// </summary>
        /// <value>项目来源，如：ocr\\einvoice\\consume</value>
        [DataMember(Name = "item_source", EmitDefaultValue = false)]
        public string ItemSource { get; set; }

        /// <summary>
        /// 项目子类，如：出租车、火车、飞机等
        /// </summary>
        /// <value>项目子类，如：出租车、火车、飞机等</value>
        [DataMember(Name = "item_sub_type", EmitDefaultValue = false)]
        public string ItemSubType { get; set; }

        /// <summary>
        /// 项目大类，如：餐饮美食、酒店住宿、差旅出行等
        /// </summary>
        /// <value>项目大类，如：餐饮美食、酒店住宿、差旅出行等</value>
        [DataMember(Name = "item_type", EmitDefaultValue = false)]
        public string ItemType { get; set; }

        /// <summary>
        /// Gets or Sets OcrNormalScanInfo
        /// </summary>
        [DataMember(Name = "ocr_normal_scan_info", EmitDefaultValue = false)]
        public OcrNormalScanInfo OcrNormalScanInfo { get; set; }

        /// <summary>
        /// Gets or Sets OcrPlaneScanInfo
        /// </summary>
        [DataMember(Name = "ocr_plane_scan_info", EmitDefaultValue = false)]
        public OcrPlaneScanInfo OcrPlaneScanInfo { get; set; }

        /// <summary>
        /// Gets or Sets OcrTaxiScanInfo
        /// </summary>
        [DataMember(Name = "ocr_taxi_scan_info", EmitDefaultValue = false)]
        public OcrTaxiScanInfo OcrTaxiScanInfo { get; set; }

        /// <summary>
        /// Gets or Sets OcrTrainScanInfo
        /// </summary>
        [DataMember(Name = "ocr_train_scan_info", EmitDefaultValue = false)]
        public OcrTrainScanInfo OcrTrainScanInfo { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class PackageItemOpenInfo {\n");
            sb.Append("  ConsumeOutputInfo: ").Append(ConsumeOutputInfo).Append("\n");
            sb.Append("  FileDownloadUrl: ").Append(FileDownloadUrl).Append("\n");
            sb.Append("  FileType: ").Append(FileType).Append("\n");
            sb.Append("  InvoiceOutputInfo: ").Append(InvoiceOutputInfo).Append("\n");
            sb.Append("  ItemSource: ").Append(ItemSource).Append("\n");
            sb.Append("  ItemSubType: ").Append(ItemSubType).Append("\n");
            sb.Append("  ItemType: ").Append(ItemType).Append("\n");
            sb.Append("  OcrNormalScanInfo: ").Append(OcrNormalScanInfo).Append("\n");
            sb.Append("  OcrPlaneScanInfo: ").Append(OcrPlaneScanInfo).Append("\n");
            sb.Append("  OcrTaxiScanInfo: ").Append(OcrTaxiScanInfo).Append("\n");
            sb.Append("  OcrTrainScanInfo: ").Append(OcrTrainScanInfo).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as PackageItemOpenInfo);
        }

        /// <summary>
        /// Returns true if PackageItemOpenInfo instances are equal
        /// </summary>
        /// <param name="input">Instance of PackageItemOpenInfo to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(PackageItemOpenInfo input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.ConsumeOutputInfo == input.ConsumeOutputInfo ||
                    (this.ConsumeOutputInfo != null &&
                    this.ConsumeOutputInfo.Equals(input.ConsumeOutputInfo))
                ) && 
                (
                    this.FileDownloadUrl == input.FileDownloadUrl ||
                    (this.FileDownloadUrl != null &&
                    this.FileDownloadUrl.Equals(input.FileDownloadUrl))
                ) && 
                (
                    this.FileType == input.FileType ||
                    (this.FileType != null &&
                    this.FileType.Equals(input.FileType))
                ) && 
                (
                    this.InvoiceOutputInfo == input.InvoiceOutputInfo ||
                    (this.InvoiceOutputInfo != null &&
                    this.InvoiceOutputInfo.Equals(input.InvoiceOutputInfo))
                ) && 
                (
                    this.ItemSource == input.ItemSource ||
                    (this.ItemSource != null &&
                    this.ItemSource.Equals(input.ItemSource))
                ) && 
                (
                    this.ItemSubType == input.ItemSubType ||
                    (this.ItemSubType != null &&
                    this.ItemSubType.Equals(input.ItemSubType))
                ) && 
                (
                    this.ItemType == input.ItemType ||
                    (this.ItemType != null &&
                    this.ItemType.Equals(input.ItemType))
                ) && 
                (
                    this.OcrNormalScanInfo == input.OcrNormalScanInfo ||
                    (this.OcrNormalScanInfo != null &&
                    this.OcrNormalScanInfo.Equals(input.OcrNormalScanInfo))
                ) && 
                (
                    this.OcrPlaneScanInfo == input.OcrPlaneScanInfo ||
                    (this.OcrPlaneScanInfo != null &&
                    this.OcrPlaneScanInfo.Equals(input.OcrPlaneScanInfo))
                ) && 
                (
                    this.OcrTaxiScanInfo == input.OcrTaxiScanInfo ||
                    (this.OcrTaxiScanInfo != null &&
                    this.OcrTaxiScanInfo.Equals(input.OcrTaxiScanInfo))
                ) && 
                (
                    this.OcrTrainScanInfo == input.OcrTrainScanInfo ||
                    (this.OcrTrainScanInfo != null &&
                    this.OcrTrainScanInfo.Equals(input.OcrTrainScanInfo))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ConsumeOutputInfo != null)
                {
                    hashCode = (hashCode * 59) + this.ConsumeOutputInfo.GetHashCode();
                }
                if (this.FileDownloadUrl != null)
                {
                    hashCode = (hashCode * 59) + this.FileDownloadUrl.GetHashCode();
                }
                if (this.FileType != null)
                {
                    hashCode = (hashCode * 59) + this.FileType.GetHashCode();
                }
                if (this.InvoiceOutputInfo != null)
                {
                    hashCode = (hashCode * 59) + this.InvoiceOutputInfo.GetHashCode();
                }
                if (this.ItemSource != null)
                {
                    hashCode = (hashCode * 59) + this.ItemSource.GetHashCode();
                }
                if (this.ItemSubType != null)
                {
                    hashCode = (hashCode * 59) + this.ItemSubType.GetHashCode();
                }
                if (this.ItemType != null)
                {
                    hashCode = (hashCode * 59) + this.ItemType.GetHashCode();
                }
                if (this.OcrNormalScanInfo != null)
                {
                    hashCode = (hashCode * 59) + this.OcrNormalScanInfo.GetHashCode();
                }
                if (this.OcrPlaneScanInfo != null)
                {
                    hashCode = (hashCode * 59) + this.OcrPlaneScanInfo.GetHashCode();
                }
                if (this.OcrTaxiScanInfo != null)
                {
                    hashCode = (hashCode * 59) + this.OcrTaxiScanInfo.GetHashCode();
                }
                if (this.OcrTrainScanInfo != null)
                {
                    hashCode = (hashCode * 59) + this.OcrTrainScanInfo.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
