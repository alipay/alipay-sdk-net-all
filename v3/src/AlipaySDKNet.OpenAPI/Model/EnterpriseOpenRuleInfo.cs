/*
 * 支付宝开放平台API
 *
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2025-02-19
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = AlipaySDKNet.OpenAPI.Client.OpenAPIDateConverter;

namespace AlipaySDKNet.OpenAPI.Model
{
    /// <summary>
    /// EnterpriseOpenRuleInfo
    /// </summary>
    [DataContract(Name = "EnterpriseOpenRuleInfo")]
    public partial class EnterpriseOpenRuleInfo : IEquatable<EnterpriseOpenRuleInfo>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="EnterpriseOpenRuleInfo" /> class.
        /// </summary>
        /// <param name="enterpriseId">企业ID.</param>
        /// <param name="enterpriseOpenRuleRecordInfoList">当前生效和下次生效的开票规则记录.</param>
        /// <param name="enterpriseOpenRuleRelationInfoList">开票规则绑定关系.</param>
        /// <param name="gmtCreate">创建时间.</param>
        /// <param name="gmtModified">修改时间.</param>
        /// <param name="invoiceRuleId">开票规则ID.</param>
        /// <param name="invoiceRuleName">开票规则名称.</param>
        /// <param name="ownerId">所有者ID（企业情况下即为企业ID）。.</param>
        /// <param name="sellerType">\&quot;销方类型：TP开票、商户开票、商户优先枚举定义：MERCHANT（商户）、TP（TP）\&quot;.</param>
        public EnterpriseOpenRuleInfo(string enterpriseId = default(string), List<EnterpriseOpenRuleRecordInfo> enterpriseOpenRuleRecordInfoList = default(List<EnterpriseOpenRuleRecordInfo>), List<EnterpriseOpenRuleRelationInfo> enterpriseOpenRuleRelationInfoList = default(List<EnterpriseOpenRuleRelationInfo>), string gmtCreate = default(string), string gmtModified = default(string), string invoiceRuleId = default(string), string invoiceRuleName = default(string), string ownerId = default(string), string sellerType = default(string))
        {
            this.EnterpriseId = enterpriseId;
            this.EnterpriseOpenRuleRecordInfoList = enterpriseOpenRuleRecordInfoList;
            this.EnterpriseOpenRuleRelationInfoList = enterpriseOpenRuleRelationInfoList;
            this.GmtCreate = gmtCreate;
            this.GmtModified = gmtModified;
            this.InvoiceRuleId = invoiceRuleId;
            this.InvoiceRuleName = invoiceRuleName;
            this.OwnerId = ownerId;
            this.SellerType = sellerType;
        }

        /// <summary>
        /// 企业ID
        /// </summary>
        /// <value>企业ID</value>
        [DataMember(Name = "enterprise_id", EmitDefaultValue = false)]
        public string EnterpriseId { get; set; }

        /// <summary>
        /// 当前生效和下次生效的开票规则记录
        /// </summary>
        /// <value>当前生效和下次生效的开票规则记录</value>
        [DataMember(Name = "enterprise_open_rule_record_info_list", EmitDefaultValue = false)]
        public List<EnterpriseOpenRuleRecordInfo> EnterpriseOpenRuleRecordInfoList { get; set; }

        /// <summary>
        /// 开票规则绑定关系
        /// </summary>
        /// <value>开票规则绑定关系</value>
        [DataMember(Name = "enterprise_open_rule_relation_info_list", EmitDefaultValue = false)]
        public List<EnterpriseOpenRuleRelationInfo> EnterpriseOpenRuleRelationInfoList { get; set; }

        /// <summary>
        /// 创建时间
        /// </summary>
        /// <value>创建时间</value>
        [DataMember(Name = "gmt_create", EmitDefaultValue = false)]
        public string GmtCreate { get; set; }

        /// <summary>
        /// 修改时间
        /// </summary>
        /// <value>修改时间</value>
        [DataMember(Name = "gmt_modified", EmitDefaultValue = false)]
        public string GmtModified { get; set; }

        /// <summary>
        /// 开票规则ID
        /// </summary>
        /// <value>开票规则ID</value>
        [DataMember(Name = "invoice_rule_id", EmitDefaultValue = false)]
        public string InvoiceRuleId { get; set; }

        /// <summary>
        /// 开票规则名称
        /// </summary>
        /// <value>开票规则名称</value>
        [DataMember(Name = "invoice_rule_name", EmitDefaultValue = false)]
        public string InvoiceRuleName { get; set; }

        /// <summary>
        /// 所有者ID（企业情况下即为企业ID）。
        /// </summary>
        /// <value>所有者ID（企业情况下即为企业ID）。</value>
        [DataMember(Name = "owner_id", EmitDefaultValue = false)]
        public string OwnerId { get; set; }

        /// <summary>
        /// \&quot;销方类型：TP开票、商户开票、商户优先枚举定义：MERCHANT（商户）、TP（TP）\&quot;
        /// </summary>
        /// <value>\&quot;销方类型：TP开票、商户开票、商户优先枚举定义：MERCHANT（商户）、TP（TP）\&quot;</value>
        [DataMember(Name = "seller_type", EmitDefaultValue = false)]
        public string SellerType { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class EnterpriseOpenRuleInfo {\n");
            sb.Append("  EnterpriseId: ").Append(EnterpriseId).Append("\n");
            sb.Append("  EnterpriseOpenRuleRecordInfoList: ").Append(EnterpriseOpenRuleRecordInfoList).Append("\n");
            sb.Append("  EnterpriseOpenRuleRelationInfoList: ").Append(EnterpriseOpenRuleRelationInfoList).Append("\n");
            sb.Append("  GmtCreate: ").Append(GmtCreate).Append("\n");
            sb.Append("  GmtModified: ").Append(GmtModified).Append("\n");
            sb.Append("  InvoiceRuleId: ").Append(InvoiceRuleId).Append("\n");
            sb.Append("  InvoiceRuleName: ").Append(InvoiceRuleName).Append("\n");
            sb.Append("  OwnerId: ").Append(OwnerId).Append("\n");
            sb.Append("  SellerType: ").Append(SellerType).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as EnterpriseOpenRuleInfo);
        }

        /// <summary>
        /// Returns true if EnterpriseOpenRuleInfo instances are equal
        /// </summary>
        /// <param name="input">Instance of EnterpriseOpenRuleInfo to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(EnterpriseOpenRuleInfo input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.EnterpriseId == input.EnterpriseId ||
                    (this.EnterpriseId != null &&
                    this.EnterpriseId.Equals(input.EnterpriseId))
                ) && 
                (
                    this.EnterpriseOpenRuleRecordInfoList == input.EnterpriseOpenRuleRecordInfoList ||
                    this.EnterpriseOpenRuleRecordInfoList != null &&
                    input.EnterpriseOpenRuleRecordInfoList != null &&
                    this.EnterpriseOpenRuleRecordInfoList.SequenceEqual(input.EnterpriseOpenRuleRecordInfoList)
                ) && 
                (
                    this.EnterpriseOpenRuleRelationInfoList == input.EnterpriseOpenRuleRelationInfoList ||
                    this.EnterpriseOpenRuleRelationInfoList != null &&
                    input.EnterpriseOpenRuleRelationInfoList != null &&
                    this.EnterpriseOpenRuleRelationInfoList.SequenceEqual(input.EnterpriseOpenRuleRelationInfoList)
                ) && 
                (
                    this.GmtCreate == input.GmtCreate ||
                    (this.GmtCreate != null &&
                    this.GmtCreate.Equals(input.GmtCreate))
                ) && 
                (
                    this.GmtModified == input.GmtModified ||
                    (this.GmtModified != null &&
                    this.GmtModified.Equals(input.GmtModified))
                ) && 
                (
                    this.InvoiceRuleId == input.InvoiceRuleId ||
                    (this.InvoiceRuleId != null &&
                    this.InvoiceRuleId.Equals(input.InvoiceRuleId))
                ) && 
                (
                    this.InvoiceRuleName == input.InvoiceRuleName ||
                    (this.InvoiceRuleName != null &&
                    this.InvoiceRuleName.Equals(input.InvoiceRuleName))
                ) && 
                (
                    this.OwnerId == input.OwnerId ||
                    (this.OwnerId != null &&
                    this.OwnerId.Equals(input.OwnerId))
                ) && 
                (
                    this.SellerType == input.SellerType ||
                    (this.SellerType != null &&
                    this.SellerType.Equals(input.SellerType))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.EnterpriseId != null)
                {
                    hashCode = (hashCode * 59) + this.EnterpriseId.GetHashCode();
                }
                if (this.EnterpriseOpenRuleRecordInfoList != null)
                {
                    hashCode = (hashCode * 59) + this.EnterpriseOpenRuleRecordInfoList.GetHashCode();
                }
                if (this.EnterpriseOpenRuleRelationInfoList != null)
                {
                    hashCode = (hashCode * 59) + this.EnterpriseOpenRuleRelationInfoList.GetHashCode();
                }
                if (this.GmtCreate != null)
                {
                    hashCode = (hashCode * 59) + this.GmtCreate.GetHashCode();
                }
                if (this.GmtModified != null)
                {
                    hashCode = (hashCode * 59) + this.GmtModified.GetHashCode();
                }
                if (this.InvoiceRuleId != null)
                {
                    hashCode = (hashCode * 59) + this.InvoiceRuleId.GetHashCode();
                }
                if (this.InvoiceRuleName != null)
                {
                    hashCode = (hashCode * 59) + this.InvoiceRuleName.GetHashCode();
                }
                if (this.OwnerId != null)
                {
                    hashCode = (hashCode * 59) + this.OwnerId.GetHashCode();
                }
                if (this.SellerType != null)
                {
                    hashCode = (hashCode * 59) + this.SellerType.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
