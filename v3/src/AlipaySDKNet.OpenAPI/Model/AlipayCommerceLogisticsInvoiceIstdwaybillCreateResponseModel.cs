/*
 * 支付宝开放平台API
 *
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2025-02-19
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = AlipaySDKNet.OpenAPI.Client.OpenAPIDateConverter;

namespace AlipaySDKNet.OpenAPI.Model
{
    /// <summary>
    /// AlipayCommerceLogisticsInvoiceIstdwaybillCreateResponseModel
    /// </summary>
    [DataContract(Name = "AlipayCommerceLogisticsInvoiceIstdwaybillCreateResponseModel")]
    public partial class AlipayCommerceLogisticsInvoiceIstdwaybillCreateResponseModel : IEquatable<AlipayCommerceLogisticsInvoiceIstdwaybillCreateResponseModel>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AlipayCommerceLogisticsInvoiceIstdwaybillCreateResponseModel" /> class.
        /// </summary>
        /// <param name="invoiceFee">开票金额.</param>
        /// <param name="status">整体的运单开票状态，0：处理中 1：开票成功 2：开票失败.</param>
        /// <param name="waybillInvoices">即时配送运单列表.</param>
        public AlipayCommerceLogisticsInvoiceIstdwaybillCreateResponseModel(string invoiceFee = default(string), int status = default(int), List<WaybillInvoiceIstd> waybillInvoices = default(List<WaybillInvoiceIstd>))
        {
            this.InvoiceFee = invoiceFee;
            this.Status = status;
            this.WaybillInvoices = waybillInvoices;
        }

        /// <summary>
        /// 开票金额
        /// </summary>
        /// <value>开票金额</value>
        [DataMember(Name = "invoice_fee", EmitDefaultValue = false)]
        public string InvoiceFee { get; set; }

        /// <summary>
        /// 整体的运单开票状态，0：处理中 1：开票成功 2：开票失败
        /// </summary>
        /// <value>整体的运单开票状态，0：处理中 1：开票成功 2：开票失败</value>
        [DataMember(Name = "status", EmitDefaultValue = false)]
        public int Status { get; set; }

        /// <summary>
        /// 即时配送运单列表
        /// </summary>
        /// <value>即时配送运单列表</value>
        [DataMember(Name = "waybill_invoices", EmitDefaultValue = false)]
        public List<WaybillInvoiceIstd> WaybillInvoices { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class AlipayCommerceLogisticsInvoiceIstdwaybillCreateResponseModel {\n");
            sb.Append("  InvoiceFee: ").Append(InvoiceFee).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("  WaybillInvoices: ").Append(WaybillInvoices).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as AlipayCommerceLogisticsInvoiceIstdwaybillCreateResponseModel);
        }

        /// <summary>
        /// Returns true if AlipayCommerceLogisticsInvoiceIstdwaybillCreateResponseModel instances are equal
        /// </summary>
        /// <param name="input">Instance of AlipayCommerceLogisticsInvoiceIstdwaybillCreateResponseModel to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AlipayCommerceLogisticsInvoiceIstdwaybillCreateResponseModel input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.InvoiceFee == input.InvoiceFee ||
                    (this.InvoiceFee != null &&
                    this.InvoiceFee.Equals(input.InvoiceFee))
                ) && 
                (
                    this.Status == input.Status ||
                    this.Status.Equals(input.Status)
                ) && 
                (
                    this.WaybillInvoices == input.WaybillInvoices ||
                    this.WaybillInvoices != null &&
                    input.WaybillInvoices != null &&
                    this.WaybillInvoices.SequenceEqual(input.WaybillInvoices)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.InvoiceFee != null)
                {
                    hashCode = (hashCode * 59) + this.InvoiceFee.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.Status.GetHashCode();
                if (this.WaybillInvoices != null)
                {
                    hashCode = (hashCode * 59) + this.WaybillInvoices.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
