/*
 * 支付宝开放平台API
 *
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2025-02-19
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = AlipaySDKNet.OpenAPI.Client.OpenAPIDateConverter;

namespace AlipaySDKNet.OpenAPI.Model
{
    /// <summary>
    /// ZolozAuthenticationCustomerFtokenQueryModel
    /// </summary>
    [DataContract(Name = "ZolozAuthenticationCustomerFtokenQueryModel")]
    public partial class ZolozAuthenticationCustomerFtokenQueryModel : IEquatable<ZolozAuthenticationCustomerFtokenQueryModel>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ZolozAuthenticationCustomerFtokenQueryModel" /> class.
        /// </summary>
        /// <param name="bizType">1、1：1人脸验证能力  2、1：n人脸搜索能力（支付宝uid入库）  3、1：n人脸搜索能力（支付宝手机号入库）  4、手机号和人脸识别综合能力.</param>
        /// <param name="extInfo">extInfo.</param>
        /// <param name="ftoken">人脸token.</param>
        /// <param name="zimId">刷脸初始化流程中产生的zimId值.</param>
        public ZolozAuthenticationCustomerFtokenQueryModel(string bizType = default(string), FaceExtInfo extInfo = default(FaceExtInfo), string ftoken = default(string), string zimId = default(string))
        {
            this.BizType = bizType;
            this.ExtInfo = extInfo;
            this.Ftoken = ftoken;
            this.ZimId = zimId;
        }

        /// <summary>
        /// 1、1：1人脸验证能力  2、1：n人脸搜索能力（支付宝uid入库）  3、1：n人脸搜索能力（支付宝手机号入库）  4、手机号和人脸识别综合能力
        /// </summary>
        /// <value>1、1：1人脸验证能力  2、1：n人脸搜索能力（支付宝uid入库）  3、1：n人脸搜索能力（支付宝手机号入库）  4、手机号和人脸识别综合能力</value>
        [DataMember(Name = "biz_type", EmitDefaultValue = false)]
        public string BizType { get; set; }

        /// <summary>
        /// Gets or Sets ExtInfo
        /// </summary>
        [DataMember(Name = "ext_info", EmitDefaultValue = false)]
        public FaceExtInfo ExtInfo { get; set; }

        /// <summary>
        /// 人脸token
        /// </summary>
        /// <value>人脸token</value>
        [DataMember(Name = "ftoken", EmitDefaultValue = false)]
        public string Ftoken { get; set; }

        /// <summary>
        /// 刷脸初始化流程中产生的zimId值
        /// </summary>
        /// <value>刷脸初始化流程中产生的zimId值</value>
        [DataMember(Name = "zim_id", EmitDefaultValue = false)]
        public string ZimId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ZolozAuthenticationCustomerFtokenQueryModel {\n");
            sb.Append("  BizType: ").Append(BizType).Append("\n");
            sb.Append("  ExtInfo: ").Append(ExtInfo).Append("\n");
            sb.Append("  Ftoken: ").Append(Ftoken).Append("\n");
            sb.Append("  ZimId: ").Append(ZimId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ZolozAuthenticationCustomerFtokenQueryModel);
        }

        /// <summary>
        /// Returns true if ZolozAuthenticationCustomerFtokenQueryModel instances are equal
        /// </summary>
        /// <param name="input">Instance of ZolozAuthenticationCustomerFtokenQueryModel to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ZolozAuthenticationCustomerFtokenQueryModel input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.BizType == input.BizType ||
                    (this.BizType != null &&
                    this.BizType.Equals(input.BizType))
                ) && 
                (
                    this.ExtInfo == input.ExtInfo ||
                    (this.ExtInfo != null &&
                    this.ExtInfo.Equals(input.ExtInfo))
                ) && 
                (
                    this.Ftoken == input.Ftoken ||
                    (this.Ftoken != null &&
                    this.Ftoken.Equals(input.Ftoken))
                ) && 
                (
                    this.ZimId == input.ZimId ||
                    (this.ZimId != null &&
                    this.ZimId.Equals(input.ZimId))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.BizType != null)
                {
                    hashCode = (hashCode * 59) + this.BizType.GetHashCode();
                }
                if (this.ExtInfo != null)
                {
                    hashCode = (hashCode * 59) + this.ExtInfo.GetHashCode();
                }
                if (this.Ftoken != null)
                {
                    hashCode = (hashCode * 59) + this.Ftoken.GetHashCode();
                }
                if (this.ZimId != null)
                {
                    hashCode = (hashCode * 59) + this.ZimId.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
