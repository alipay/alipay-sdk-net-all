/*
 * 支付宝开放平台API
 *
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2025-02-19
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = AlipaySDKNet.OpenAPI.Client.OpenAPIDateConverter;

namespace AlipaySDKNet.OpenAPI.Model
{
    /// <summary>
    /// AlipayFundJointaccountMemberBatchqueryModel
    /// </summary>
    [DataContract(Name = "AlipayFundJointaccountMemberBatchqueryModel")]
    public partial class AlipayFundJointaccountMemberBatchqueryModel : IEquatable<AlipayFundJointaccountMemberBatchqueryModel>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AlipayFundJointaccountMemberBatchqueryModel" /> class.
        /// </summary>
        /// <param name="accountId">共同账户ID.</param>
        /// <param name="agreementNo">三方授权协议号.</param>
        /// <param name="bizScene">业务场景.</param>
        /// <param name="identity">企业账号：identity_type是ALIPAY_USER_ID填支付宝会员ID（2088开头）； 是ALIPAY_LOGON_ID 填支付宝登录号.</param>
        /// <param name="identityType">账号类型，目前支持如下类型： 1、ALIPAY_USER_ID 支付宝的会员ID 2、ALIPAY_LOGON_ID：支付宝登录号，支持邮箱和手机号格式.</param>
        /// <param name="lastOpenId">按游标查询，传入上次查询最后一个用户的openId.</param>
        /// <param name="lastUserId">按游标查询，传入上次查询最后一个用户ID，适用于逐页查询。优先级大于page_num.</param>
        /// <param name="pageNum">采用分页查询，本参数为空或0默认显示第一页。如果输入的值大于总页数，则支付宝返回最后一页数据。.</param>
        /// <param name="pageSize">每页大小，不传的情况下默认20条，上限100；不足20条则按实际记录数返回.</param>
        /// <param name="productCode">销售产品码.</param>
        public AlipayFundJointaccountMemberBatchqueryModel(string accountId = default(string), string agreementNo = default(string), string bizScene = default(string), string identity = default(string), string identityType = default(string), string lastOpenId = default(string), string lastUserId = default(string), string pageNum = default(string), string pageSize = default(string), string productCode = default(string))
        {
            this.AccountId = accountId;
            this.AgreementNo = agreementNo;
            this.BizScene = bizScene;
            this.Identity = identity;
            this.IdentityType = identityType;
            this.LastOpenId = lastOpenId;
            this.LastUserId = lastUserId;
            this.PageNum = pageNum;
            this.PageSize = pageSize;
            this.ProductCode = productCode;
        }

        /// <summary>
        /// 共同账户ID
        /// </summary>
        /// <value>共同账户ID</value>
        [DataMember(Name = "account_id", EmitDefaultValue = false)]
        public string AccountId { get; set; }

        /// <summary>
        /// 三方授权协议号
        /// </summary>
        /// <value>三方授权协议号</value>
        [DataMember(Name = "agreement_no", EmitDefaultValue = false)]
        public string AgreementNo { get; set; }

        /// <summary>
        /// 业务场景
        /// </summary>
        /// <value>业务场景</value>
        [DataMember(Name = "biz_scene", EmitDefaultValue = false)]
        public string BizScene { get; set; }

        /// <summary>
        /// 企业账号：identity_type是ALIPAY_USER_ID填支付宝会员ID（2088开头）； 是ALIPAY_LOGON_ID 填支付宝登录号
        /// </summary>
        /// <value>企业账号：identity_type是ALIPAY_USER_ID填支付宝会员ID（2088开头）； 是ALIPAY_LOGON_ID 填支付宝登录号</value>
        [DataMember(Name = "identity", EmitDefaultValue = false)]
        public string Identity { get; set; }

        /// <summary>
        /// 账号类型，目前支持如下类型： 1、ALIPAY_USER_ID 支付宝的会员ID 2、ALIPAY_LOGON_ID：支付宝登录号，支持邮箱和手机号格式
        /// </summary>
        /// <value>账号类型，目前支持如下类型： 1、ALIPAY_USER_ID 支付宝的会员ID 2、ALIPAY_LOGON_ID：支付宝登录号，支持邮箱和手机号格式</value>
        [DataMember(Name = "identity_type", EmitDefaultValue = false)]
        public string IdentityType { get; set; }

        /// <summary>
        /// 按游标查询，传入上次查询最后一个用户的openId
        /// </summary>
        /// <value>按游标查询，传入上次查询最后一个用户的openId</value>
        [DataMember(Name = "last_open_id", EmitDefaultValue = false)]
        public string LastOpenId { get; set; }

        /// <summary>
        /// 按游标查询，传入上次查询最后一个用户ID，适用于逐页查询。优先级大于page_num
        /// </summary>
        /// <value>按游标查询，传入上次查询最后一个用户ID，适用于逐页查询。优先级大于page_num</value>
        [DataMember(Name = "last_user_id", EmitDefaultValue = false)]
        public string LastUserId { get; set; }

        /// <summary>
        /// 采用分页查询，本参数为空或0默认显示第一页。如果输入的值大于总页数，则支付宝返回最后一页数据。
        /// </summary>
        /// <value>采用分页查询，本参数为空或0默认显示第一页。如果输入的值大于总页数，则支付宝返回最后一页数据。</value>
        [DataMember(Name = "page_num", EmitDefaultValue = false)]
        public string PageNum { get; set; }

        /// <summary>
        /// 每页大小，不传的情况下默认20条，上限100；不足20条则按实际记录数返回
        /// </summary>
        /// <value>每页大小，不传的情况下默认20条，上限100；不足20条则按实际记录数返回</value>
        [DataMember(Name = "page_size", EmitDefaultValue = false)]
        public string PageSize { get; set; }

        /// <summary>
        /// 销售产品码
        /// </summary>
        /// <value>销售产品码</value>
        [DataMember(Name = "product_code", EmitDefaultValue = false)]
        public string ProductCode { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class AlipayFundJointaccountMemberBatchqueryModel {\n");
            sb.Append("  AccountId: ").Append(AccountId).Append("\n");
            sb.Append("  AgreementNo: ").Append(AgreementNo).Append("\n");
            sb.Append("  BizScene: ").Append(BizScene).Append("\n");
            sb.Append("  Identity: ").Append(Identity).Append("\n");
            sb.Append("  IdentityType: ").Append(IdentityType).Append("\n");
            sb.Append("  LastOpenId: ").Append(LastOpenId).Append("\n");
            sb.Append("  LastUserId: ").Append(LastUserId).Append("\n");
            sb.Append("  PageNum: ").Append(PageNum).Append("\n");
            sb.Append("  PageSize: ").Append(PageSize).Append("\n");
            sb.Append("  ProductCode: ").Append(ProductCode).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as AlipayFundJointaccountMemberBatchqueryModel);
        }

        /// <summary>
        /// Returns true if AlipayFundJointaccountMemberBatchqueryModel instances are equal
        /// </summary>
        /// <param name="input">Instance of AlipayFundJointaccountMemberBatchqueryModel to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AlipayFundJointaccountMemberBatchqueryModel input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.AccountId == input.AccountId ||
                    (this.AccountId != null &&
                    this.AccountId.Equals(input.AccountId))
                ) && 
                (
                    this.AgreementNo == input.AgreementNo ||
                    (this.AgreementNo != null &&
                    this.AgreementNo.Equals(input.AgreementNo))
                ) && 
                (
                    this.BizScene == input.BizScene ||
                    (this.BizScene != null &&
                    this.BizScene.Equals(input.BizScene))
                ) && 
                (
                    this.Identity == input.Identity ||
                    (this.Identity != null &&
                    this.Identity.Equals(input.Identity))
                ) && 
                (
                    this.IdentityType == input.IdentityType ||
                    (this.IdentityType != null &&
                    this.IdentityType.Equals(input.IdentityType))
                ) && 
                (
                    this.LastOpenId == input.LastOpenId ||
                    (this.LastOpenId != null &&
                    this.LastOpenId.Equals(input.LastOpenId))
                ) && 
                (
                    this.LastUserId == input.LastUserId ||
                    (this.LastUserId != null &&
                    this.LastUserId.Equals(input.LastUserId))
                ) && 
                (
                    this.PageNum == input.PageNum ||
                    (this.PageNum != null &&
                    this.PageNum.Equals(input.PageNum))
                ) && 
                (
                    this.PageSize == input.PageSize ||
                    (this.PageSize != null &&
                    this.PageSize.Equals(input.PageSize))
                ) && 
                (
                    this.ProductCode == input.ProductCode ||
                    (this.ProductCode != null &&
                    this.ProductCode.Equals(input.ProductCode))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.AccountId != null)
                {
                    hashCode = (hashCode * 59) + this.AccountId.GetHashCode();
                }
                if (this.AgreementNo != null)
                {
                    hashCode = (hashCode * 59) + this.AgreementNo.GetHashCode();
                }
                if (this.BizScene != null)
                {
                    hashCode = (hashCode * 59) + this.BizScene.GetHashCode();
                }
                if (this.Identity != null)
                {
                    hashCode = (hashCode * 59) + this.Identity.GetHashCode();
                }
                if (this.IdentityType != null)
                {
                    hashCode = (hashCode * 59) + this.IdentityType.GetHashCode();
                }
                if (this.LastOpenId != null)
                {
                    hashCode = (hashCode * 59) + this.LastOpenId.GetHashCode();
                }
                if (this.LastUserId != null)
                {
                    hashCode = (hashCode * 59) + this.LastUserId.GetHashCode();
                }
                if (this.PageNum != null)
                {
                    hashCode = (hashCode * 59) + this.PageNum.GetHashCode();
                }
                if (this.PageSize != null)
                {
                    hashCode = (hashCode * 59) + this.PageSize.GetHashCode();
                }
                if (this.ProductCode != null)
                {
                    hashCode = (hashCode * 59) + this.ProductCode.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
