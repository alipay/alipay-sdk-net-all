/*
 * 支付宝开放平台API
 *
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2025-02-19
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = AlipaySDKNet.OpenAPI.Client.OpenAPIDateConverter;

namespace AlipaySDKNet.OpenAPI.Model
{
    /// <summary>
    /// AlipayMarketingCardQueryModel
    /// </summary>
    [DataContract(Name = "AlipayMarketingCardQueryModel")]
    public partial class AlipayMarketingCardQueryModel : IEquatable<AlipayMarketingCardQueryModel>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AlipayMarketingCardQueryModel" /> class.
        /// </summary>
        /// <param name="cardUserInfo">cardUserInfo.</param>
        /// <param name="extInfo">扩展信息，暂时没有.</param>
        /// <param name="targetCardNo">操作卡号。 若target_card_no_type为  BIZ_CARD，则该值为业务卡号，即alipay.marketing.card.open(会员卡开卡)返回结果中的card_info#biz_card_no。 若target_card_no_type为 D_QR_CODE 或D_BAR_CODE，则该值为动态码值。 若target_card_no_type为 EXTERNAL_CARD，则该值为外部卡号。.</param>
        /// <param name="targetCardNoType">卡号ID类型.</param>
        /// <param name="templateId">会员卡模板id。调用&lt;a href&#x3D;\&quot;https://opendocs.alipay.com/open/03sx80?scene&#x3D;common&amp;pathHash&#x3D;04270a28\&quot; target&#x3D;\&quot;_blank\&quot;&gt;alipay.marketing.card.template.create&lt;/a&gt;（会员卡模板创建接口）创建模板后同步返回。.</param>
        public AlipayMarketingCardQueryModel(CardUserInfo cardUserInfo = default(CardUserInfo), string extInfo = default(string), string targetCardNo = default(string), string targetCardNoType = default(string), string templateId = default(string))
        {
            this.CardUserInfo = cardUserInfo;
            this.ExtInfo = extInfo;
            this.TargetCardNo = targetCardNo;
            this.TargetCardNoType = targetCardNoType;
            this.TemplateId = templateId;
        }

        /// <summary>
        /// Gets or Sets CardUserInfo
        /// </summary>
        [DataMember(Name = "card_user_info", EmitDefaultValue = false)]
        public CardUserInfo CardUserInfo { get; set; }

        /// <summary>
        /// 扩展信息，暂时没有
        /// </summary>
        /// <value>扩展信息，暂时没有</value>
        [DataMember(Name = "ext_info", EmitDefaultValue = false)]
        public string ExtInfo { get; set; }

        /// <summary>
        /// 操作卡号。 若target_card_no_type为  BIZ_CARD，则该值为业务卡号，即alipay.marketing.card.open(会员卡开卡)返回结果中的card_info#biz_card_no。 若target_card_no_type为 D_QR_CODE 或D_BAR_CODE，则该值为动态码值。 若target_card_no_type为 EXTERNAL_CARD，则该值为外部卡号。
        /// </summary>
        /// <value>操作卡号。 若target_card_no_type为  BIZ_CARD，则该值为业务卡号，即alipay.marketing.card.open(会员卡开卡)返回结果中的card_info#biz_card_no。 若target_card_no_type为 D_QR_CODE 或D_BAR_CODE，则该值为动态码值。 若target_card_no_type为 EXTERNAL_CARD，则该值为外部卡号。</value>
        [DataMember(Name = "target_card_no", EmitDefaultValue = false)]
        public string TargetCardNo { get; set; }

        /// <summary>
        /// 卡号ID类型
        /// </summary>
        /// <value>卡号ID类型</value>
        [DataMember(Name = "target_card_no_type", EmitDefaultValue = false)]
        public string TargetCardNoType { get; set; }

        /// <summary>
        /// 会员卡模板id。调用&lt;a href&#x3D;\&quot;https://opendocs.alipay.com/open/03sx80?scene&#x3D;common&amp;pathHash&#x3D;04270a28\&quot; target&#x3D;\&quot;_blank\&quot;&gt;alipay.marketing.card.template.create&lt;/a&gt;（会员卡模板创建接口）创建模板后同步返回。
        /// </summary>
        /// <value>会员卡模板id。调用&lt;a href&#x3D;\&quot;https://opendocs.alipay.com/open/03sx80?scene&#x3D;common&amp;pathHash&#x3D;04270a28\&quot; target&#x3D;\&quot;_blank\&quot;&gt;alipay.marketing.card.template.create&lt;/a&gt;（会员卡模板创建接口）创建模板后同步返回。</value>
        [DataMember(Name = "template_id", EmitDefaultValue = false)]
        public string TemplateId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class AlipayMarketingCardQueryModel {\n");
            sb.Append("  CardUserInfo: ").Append(CardUserInfo).Append("\n");
            sb.Append("  ExtInfo: ").Append(ExtInfo).Append("\n");
            sb.Append("  TargetCardNo: ").Append(TargetCardNo).Append("\n");
            sb.Append("  TargetCardNoType: ").Append(TargetCardNoType).Append("\n");
            sb.Append("  TemplateId: ").Append(TemplateId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as AlipayMarketingCardQueryModel);
        }

        /// <summary>
        /// Returns true if AlipayMarketingCardQueryModel instances are equal
        /// </summary>
        /// <param name="input">Instance of AlipayMarketingCardQueryModel to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AlipayMarketingCardQueryModel input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.CardUserInfo == input.CardUserInfo ||
                    (this.CardUserInfo != null &&
                    this.CardUserInfo.Equals(input.CardUserInfo))
                ) && 
                (
                    this.ExtInfo == input.ExtInfo ||
                    (this.ExtInfo != null &&
                    this.ExtInfo.Equals(input.ExtInfo))
                ) && 
                (
                    this.TargetCardNo == input.TargetCardNo ||
                    (this.TargetCardNo != null &&
                    this.TargetCardNo.Equals(input.TargetCardNo))
                ) && 
                (
                    this.TargetCardNoType == input.TargetCardNoType ||
                    (this.TargetCardNoType != null &&
                    this.TargetCardNoType.Equals(input.TargetCardNoType))
                ) && 
                (
                    this.TemplateId == input.TemplateId ||
                    (this.TemplateId != null &&
                    this.TemplateId.Equals(input.TemplateId))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.CardUserInfo != null)
                {
                    hashCode = (hashCode * 59) + this.CardUserInfo.GetHashCode();
                }
                if (this.ExtInfo != null)
                {
                    hashCode = (hashCode * 59) + this.ExtInfo.GetHashCode();
                }
                if (this.TargetCardNo != null)
                {
                    hashCode = (hashCode * 59) + this.TargetCardNo.GetHashCode();
                }
                if (this.TargetCardNoType != null)
                {
                    hashCode = (hashCode * 59) + this.TargetCardNoType.GetHashCode();
                }
                if (this.TemplateId != null)
                {
                    hashCode = (hashCode * 59) + this.TemplateId.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
