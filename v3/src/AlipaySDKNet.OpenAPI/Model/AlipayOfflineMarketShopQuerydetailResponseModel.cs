/*
 * 支付宝开放平台API
 *
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2025-02-19
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = AlipaySDKNet.OpenAPI.Client.OpenAPIDateConverter;

namespace AlipaySDKNet.OpenAPI.Model
{
    /// <summary>
    /// AlipayOfflineMarketShopQuerydetailResponseModel
    /// </summary>
    [DataContract(Name = "AlipayOfflineMarketShopQuerydetailResponseModel")]
    public partial class AlipayOfflineMarketShopQuerydetailResponseModel : IEquatable<AlipayOfflineMarketShopQuerydetailResponseModel>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AlipayOfflineMarketShopQuerydetailResponseModel" /> class.
        /// </summary>
        /// <param name="address">门店详细地址，注：不含省市区.</param>
        /// <param name="auditDesc">门店审核状态描述，如果审核驳回则有相关的驳回理由.</param>
        /// <param name="auditImages">门店审核时需要的图片; 至少包含一张门头照片，两张内景照片，必须反映真实的门店情况，审核才能够通过， 多个以英文逗号分隔.</param>
        /// <param name="auditStatus">门店审核状态，对于系统商而言，只有三个状态，AUDITING：审核中，AUDIT_FAILED：审核驳回，AUDIT_SUCCESS：审核通过。第一次审核通过会触发门店上架。.</param>
        /// <param name="authLetter">授权函图片.</param>
        /// <param name="avgPrice">人均消费价格，最少1元，最大不超过99999元，请按实际情况填写；单位元；.</param>
        /// <param name="box">门店是否有包厢，T表示有，F表示没有，不传在客户端不作展示.</param>
        /// <param name="branchShopName">分店名称，比如：万塘路店，与主门店名合并在客户端显示为：肯德基(万塘路店).</param>
        /// <param name="brandLogo">品牌LOGO; 图片ID，不填写则默认为门店首图main_image.</param>
        /// <param name="brandName">品牌名称；不填写则默认为“其它品牌”.</param>
        /// <param name="businessCertificate">经营许可证，只有餐饮类目需要.</param>
        /// <param name="businessCertificateExpires">经营许可证有效期，格式：2020-03-20，只有餐饮类目需要.</param>
        /// <param name="businessTime">营业时间;支持分段营业时间，以英文逗号分隔.</param>
        /// <param name="categoryId">类目ID，类目初始数据由口碑提供.</param>
        /// <param name="cityCode">城市编码，国标码，详见国家统计局数据.</param>
        /// <param name="contactNumber">门店电话号码；支持座机和手机，在客户端对用户展现，支持多个电话，以英文逗号分隔.</param>
        /// <param name="createChannel">门店创建来源；如：开放平台、支付宝客户端、口碑商家app、商家自主开店、服务商开店、全民开店-支付宝客户端、全民开店-商户app、其它.</param>
        /// <param name="districtCode">区县编码，国标码，详见国家统计局数据.</param>
        /// <param name="gmtShopCreate">门店创建时间.</param>
        /// <param name="gmtShopModified">门店修改时间.</param>
        /// <param name="implementId">店铺使用的机具编号，多个以英文逗号分隔.</param>
        /// <param name="isOnline">门店是否上架，T表示上架,F表示未上架，第一次门店审核通过后会触发上架.</param>
        /// <param name="isOperatingOnline">是否在其他平台开店，T表示有开店，F表示未开店，用于证明其开店资质.</param>
        /// <param name="isShow">门店是否在客户端显示，T表示显示，F表示隐藏.</param>
        /// <param name="isvUid">开发者返佣ID，重要：如果有口碑签订了返佣协议，则该字段作为返佣数据提取的依据，需要与签约协议的PID保持一致， 该字段只能在创建接口中传入，不能在修改接口中被修改.</param>
        /// <param name="latitude">纬度，最长15位字符（包括小数点）， 注：高德坐标系.</param>
        /// <param name="licence">门店营业执照图片.</param>
        /// <param name="licenceCode">门店营业执照编号.</param>
        /// <param name="licenceExpires">营业执照过期时间.</param>
        /// <param name="licenceName">门店营业执照名称.</param>
        /// <param name="longitude">经度，最长15位字符（包括小数点）， 注：高德坐标系.</param>
        /// <param name="mainImage">门店首图；非常重要，推荐尺寸2000*1500.</param>
        /// <param name="mainShopName">主店名；比如：肯德基.</param>
        /// <param name="noSmoking">是否有无烟区，T表示有无烟区，F表示没有无烟区，不传在客户端不展示.</param>
        /// <param name="notifyMobile">门店店长电话号码；用于接收门店状态变更通知，收款成功通知等通知消息，不在客户端展示；多个以引文逗号分隔.</param>
        /// <param name="onlineImage">在其他平台的开店图片，支持多张，逗号分隔.</param>
        /// <param name="operateNotifyUrl">通知发送url;当商户的门店审核状态发生变化时，会向该地址推送消息.</param>
        /// <param name="otherAuthImages">其它资质证明图片集；支持多张，逗号分隔.</param>
        /// <param name="parking">门店是否支持停车，T表示支持，F表示不支持，不传在客户端不作展示.</param>
        /// <param name="partnerId">门店的签约ID.</param>
        /// <param name="payType">默认付款类型；如：付款码、扫码付、声波支付、在线买单、其它.</param>
        /// <param name="paymentAccount">门店收款账户，门店收款账户只能被查询，不能通过接口修改。如果为空，则表示门店收款账户为商户签约账户.</param>
        /// <param name="picColl">图片集，是map转化成的json串，key是图片id,value是图片url.</param>
        /// <param name="processedQrCode">经过加工后的门店收款二维码.</param>
        /// <param name="providerXiaoerUid">门店运营归属人uid.</param>
        /// <param name="provinceCode">省份编码，国标码，详见国家统计局数据.</param>
        /// <param name="qrCode">门店收款二维码裸码.</param>
        /// <param name="shopTags">门店标签；JSON格式。包括：keyMerchant-是否重点商户（T/F）；isHallMeal-堂食（T/F）；注：若标签 key 不存在，则门店无对应的标签.</param>
        /// <param name="storeId">外部门店编号；最长54位字符，该编号将作为收单接口的入参， 请开发者自行确保其唯一性.</param>
        /// <param name="valueAdded">门店其他的服务，门店与用户线下兑现.</param>
        /// <param name="wifi">门店是否支持WIFI，T表示支持，F表示不支持，不传在客户端不作展示.</param>
        public AlipayOfflineMarketShopQuerydetailResponseModel(string address = default(string), string auditDesc = default(string), string auditImages = default(string), string auditStatus = default(string), string authLetter = default(string), string avgPrice = default(string), string box = default(string), string branchShopName = default(string), string brandLogo = default(string), string brandName = default(string), string businessCertificate = default(string), string businessCertificateExpires = default(string), string businessTime = default(string), string categoryId = default(string), string cityCode = default(string), string contactNumber = default(string), string createChannel = default(string), string districtCode = default(string), string gmtShopCreate = default(string), string gmtShopModified = default(string), string implementId = default(string), string isOnline = default(string), string isOperatingOnline = default(string), string isShow = default(string), string isvUid = default(string), string latitude = default(string), string licence = default(string), string licenceCode = default(string), string licenceExpires = default(string), string licenceName = default(string), string longitude = default(string), string mainImage = default(string), string mainShopName = default(string), string noSmoking = default(string), string notifyMobile = default(string), string onlineImage = default(string), string operateNotifyUrl = default(string), string otherAuthImages = default(string), string parking = default(string), string partnerId = default(string), string payType = default(string), string paymentAccount = default(string), string picColl = default(string), string processedQrCode = default(string), string providerXiaoerUid = default(string), string provinceCode = default(string), string qrCode = default(string), string shopTags = default(string), string storeId = default(string), string valueAdded = default(string), string wifi = default(string))
        {
            this.Address = address;
            this.AuditDesc = auditDesc;
            this.AuditImages = auditImages;
            this.AuditStatus = auditStatus;
            this.AuthLetter = authLetter;
            this.AvgPrice = avgPrice;
            this.Box = box;
            this.BranchShopName = branchShopName;
            this.BrandLogo = brandLogo;
            this.BrandName = brandName;
            this.BusinessCertificate = businessCertificate;
            this.BusinessCertificateExpires = businessCertificateExpires;
            this.BusinessTime = businessTime;
            this.CategoryId = categoryId;
            this.CityCode = cityCode;
            this.ContactNumber = contactNumber;
            this.CreateChannel = createChannel;
            this.DistrictCode = districtCode;
            this.GmtShopCreate = gmtShopCreate;
            this.GmtShopModified = gmtShopModified;
            this.ImplementId = implementId;
            this.IsOnline = isOnline;
            this.IsOperatingOnline = isOperatingOnline;
            this.IsShow = isShow;
            this.IsvUid = isvUid;
            this.Latitude = latitude;
            this.Licence = licence;
            this.LicenceCode = licenceCode;
            this.LicenceExpires = licenceExpires;
            this.LicenceName = licenceName;
            this.Longitude = longitude;
            this.MainImage = mainImage;
            this.MainShopName = mainShopName;
            this.NoSmoking = noSmoking;
            this.NotifyMobile = notifyMobile;
            this.OnlineImage = onlineImage;
            this.OperateNotifyUrl = operateNotifyUrl;
            this.OtherAuthImages = otherAuthImages;
            this.Parking = parking;
            this.PartnerId = partnerId;
            this.PayType = payType;
            this.PaymentAccount = paymentAccount;
            this.PicColl = picColl;
            this.ProcessedQrCode = processedQrCode;
            this.ProviderXiaoerUid = providerXiaoerUid;
            this.ProvinceCode = provinceCode;
            this.QrCode = qrCode;
            this.ShopTags = shopTags;
            this.StoreId = storeId;
            this.ValueAdded = valueAdded;
            this.Wifi = wifi;
        }

        /// <summary>
        /// 门店详细地址，注：不含省市区
        /// </summary>
        /// <value>门店详细地址，注：不含省市区</value>
        [DataMember(Name = "address", EmitDefaultValue = false)]
        public string Address { get; set; }

        /// <summary>
        /// 门店审核状态描述，如果审核驳回则有相关的驳回理由
        /// </summary>
        /// <value>门店审核状态描述，如果审核驳回则有相关的驳回理由</value>
        [DataMember(Name = "audit_desc", EmitDefaultValue = false)]
        public string AuditDesc { get; set; }

        /// <summary>
        /// 门店审核时需要的图片; 至少包含一张门头照片，两张内景照片，必须反映真实的门店情况，审核才能够通过， 多个以英文逗号分隔
        /// </summary>
        /// <value>门店审核时需要的图片; 至少包含一张门头照片，两张内景照片，必须反映真实的门店情况，审核才能够通过， 多个以英文逗号分隔</value>
        [DataMember(Name = "audit_images", EmitDefaultValue = false)]
        public string AuditImages { get; set; }

        /// <summary>
        /// 门店审核状态，对于系统商而言，只有三个状态，AUDITING：审核中，AUDIT_FAILED：审核驳回，AUDIT_SUCCESS：审核通过。第一次审核通过会触发门店上架。
        /// </summary>
        /// <value>门店审核状态，对于系统商而言，只有三个状态，AUDITING：审核中，AUDIT_FAILED：审核驳回，AUDIT_SUCCESS：审核通过。第一次审核通过会触发门店上架。</value>
        [DataMember(Name = "audit_status", EmitDefaultValue = false)]
        public string AuditStatus { get; set; }

        /// <summary>
        /// 授权函图片
        /// </summary>
        /// <value>授权函图片</value>
        [DataMember(Name = "auth_letter", EmitDefaultValue = false)]
        public string AuthLetter { get; set; }

        /// <summary>
        /// 人均消费价格，最少1元，最大不超过99999元，请按实际情况填写；单位元；
        /// </summary>
        /// <value>人均消费价格，最少1元，最大不超过99999元，请按实际情况填写；单位元；</value>
        [DataMember(Name = "avg_price", EmitDefaultValue = false)]
        public string AvgPrice { get; set; }

        /// <summary>
        /// 门店是否有包厢，T表示有，F表示没有，不传在客户端不作展示
        /// </summary>
        /// <value>门店是否有包厢，T表示有，F表示没有，不传在客户端不作展示</value>
        [DataMember(Name = "box", EmitDefaultValue = false)]
        public string Box { get; set; }

        /// <summary>
        /// 分店名称，比如：万塘路店，与主门店名合并在客户端显示为：肯德基(万塘路店)
        /// </summary>
        /// <value>分店名称，比如：万塘路店，与主门店名合并在客户端显示为：肯德基(万塘路店)</value>
        [DataMember(Name = "branch_shop_name", EmitDefaultValue = false)]
        public string BranchShopName { get; set; }

        /// <summary>
        /// 品牌LOGO; 图片ID，不填写则默认为门店首图main_image
        /// </summary>
        /// <value>品牌LOGO; 图片ID，不填写则默认为门店首图main_image</value>
        [DataMember(Name = "brand_logo", EmitDefaultValue = false)]
        public string BrandLogo { get; set; }

        /// <summary>
        /// 品牌名称；不填写则默认为“其它品牌”
        /// </summary>
        /// <value>品牌名称；不填写则默认为“其它品牌”</value>
        [DataMember(Name = "brand_name", EmitDefaultValue = false)]
        public string BrandName { get; set; }

        /// <summary>
        /// 经营许可证，只有餐饮类目需要
        /// </summary>
        /// <value>经营许可证，只有餐饮类目需要</value>
        [DataMember(Name = "business_certificate", EmitDefaultValue = false)]
        public string BusinessCertificate { get; set; }

        /// <summary>
        /// 经营许可证有效期，格式：2020-03-20，只有餐饮类目需要
        /// </summary>
        /// <value>经营许可证有效期，格式：2020-03-20，只有餐饮类目需要</value>
        [DataMember(Name = "business_certificate_expires", EmitDefaultValue = false)]
        public string BusinessCertificateExpires { get; set; }

        /// <summary>
        /// 营业时间;支持分段营业时间，以英文逗号分隔
        /// </summary>
        /// <value>营业时间;支持分段营业时间，以英文逗号分隔</value>
        [DataMember(Name = "business_time", EmitDefaultValue = false)]
        public string BusinessTime { get; set; }

        /// <summary>
        /// 类目ID，类目初始数据由口碑提供
        /// </summary>
        /// <value>类目ID，类目初始数据由口碑提供</value>
        [DataMember(Name = "category_id", EmitDefaultValue = false)]
        public string CategoryId { get; set; }

        /// <summary>
        /// 城市编码，国标码，详见国家统计局数据
        /// </summary>
        /// <value>城市编码，国标码，详见国家统计局数据</value>
        [DataMember(Name = "city_code", EmitDefaultValue = false)]
        public string CityCode { get; set; }

        /// <summary>
        /// 门店电话号码；支持座机和手机，在客户端对用户展现，支持多个电话，以英文逗号分隔
        /// </summary>
        /// <value>门店电话号码；支持座机和手机，在客户端对用户展现，支持多个电话，以英文逗号分隔</value>
        [DataMember(Name = "contact_number", EmitDefaultValue = false)]
        public string ContactNumber { get; set; }

        /// <summary>
        /// 门店创建来源；如：开放平台、支付宝客户端、口碑商家app、商家自主开店、服务商开店、全民开店-支付宝客户端、全民开店-商户app、其它
        /// </summary>
        /// <value>门店创建来源；如：开放平台、支付宝客户端、口碑商家app、商家自主开店、服务商开店、全民开店-支付宝客户端、全民开店-商户app、其它</value>
        [DataMember(Name = "create_channel", EmitDefaultValue = false)]
        public string CreateChannel { get; set; }

        /// <summary>
        /// 区县编码，国标码，详见国家统计局数据
        /// </summary>
        /// <value>区县编码，国标码，详见国家统计局数据</value>
        [DataMember(Name = "district_code", EmitDefaultValue = false)]
        public string DistrictCode { get; set; }

        /// <summary>
        /// 门店创建时间
        /// </summary>
        /// <value>门店创建时间</value>
        [DataMember(Name = "gmt_shop_create", EmitDefaultValue = false)]
        public string GmtShopCreate { get; set; }

        /// <summary>
        /// 门店修改时间
        /// </summary>
        /// <value>门店修改时间</value>
        [DataMember(Name = "gmt_shop_modified", EmitDefaultValue = false)]
        public string GmtShopModified { get; set; }

        /// <summary>
        /// 店铺使用的机具编号，多个以英文逗号分隔
        /// </summary>
        /// <value>店铺使用的机具编号，多个以英文逗号分隔</value>
        [DataMember(Name = "implement_id", EmitDefaultValue = false)]
        public string ImplementId { get; set; }

        /// <summary>
        /// 门店是否上架，T表示上架,F表示未上架，第一次门店审核通过后会触发上架
        /// </summary>
        /// <value>门店是否上架，T表示上架,F表示未上架，第一次门店审核通过后会触发上架</value>
        [DataMember(Name = "is_online", EmitDefaultValue = false)]
        public string IsOnline { get; set; }

        /// <summary>
        /// 是否在其他平台开店，T表示有开店，F表示未开店，用于证明其开店资质
        /// </summary>
        /// <value>是否在其他平台开店，T表示有开店，F表示未开店，用于证明其开店资质</value>
        [DataMember(Name = "is_operating_online", EmitDefaultValue = false)]
        public string IsOperatingOnline { get; set; }

        /// <summary>
        /// 门店是否在客户端显示，T表示显示，F表示隐藏
        /// </summary>
        /// <value>门店是否在客户端显示，T表示显示，F表示隐藏</value>
        [DataMember(Name = "is_show", EmitDefaultValue = false)]
        public string IsShow { get; set; }

        /// <summary>
        /// 开发者返佣ID，重要：如果有口碑签订了返佣协议，则该字段作为返佣数据提取的依据，需要与签约协议的PID保持一致， 该字段只能在创建接口中传入，不能在修改接口中被修改
        /// </summary>
        /// <value>开发者返佣ID，重要：如果有口碑签订了返佣协议，则该字段作为返佣数据提取的依据，需要与签约协议的PID保持一致， 该字段只能在创建接口中传入，不能在修改接口中被修改</value>
        [DataMember(Name = "isv_uid", EmitDefaultValue = false)]
        public string IsvUid { get; set; }

        /// <summary>
        /// 纬度，最长15位字符（包括小数点）， 注：高德坐标系
        /// </summary>
        /// <value>纬度，最长15位字符（包括小数点）， 注：高德坐标系</value>
        [DataMember(Name = "latitude", EmitDefaultValue = false)]
        public string Latitude { get; set; }

        /// <summary>
        /// 门店营业执照图片
        /// </summary>
        /// <value>门店营业执照图片</value>
        [DataMember(Name = "licence", EmitDefaultValue = false)]
        public string Licence { get; set; }

        /// <summary>
        /// 门店营业执照编号
        /// </summary>
        /// <value>门店营业执照编号</value>
        [DataMember(Name = "licence_code", EmitDefaultValue = false)]
        public string LicenceCode { get; set; }

        /// <summary>
        /// 营业执照过期时间
        /// </summary>
        /// <value>营业执照过期时间</value>
        [DataMember(Name = "licence_expires", EmitDefaultValue = false)]
        public string LicenceExpires { get; set; }

        /// <summary>
        /// 门店营业执照名称
        /// </summary>
        /// <value>门店营业执照名称</value>
        [DataMember(Name = "licence_name", EmitDefaultValue = false)]
        public string LicenceName { get; set; }

        /// <summary>
        /// 经度，最长15位字符（包括小数点）， 注：高德坐标系
        /// </summary>
        /// <value>经度，最长15位字符（包括小数点）， 注：高德坐标系</value>
        [DataMember(Name = "longitude", EmitDefaultValue = false)]
        public string Longitude { get; set; }

        /// <summary>
        /// 门店首图；非常重要，推荐尺寸2000*1500
        /// </summary>
        /// <value>门店首图；非常重要，推荐尺寸2000*1500</value>
        [DataMember(Name = "main_image", EmitDefaultValue = false)]
        public string MainImage { get; set; }

        /// <summary>
        /// 主店名；比如：肯德基
        /// </summary>
        /// <value>主店名；比如：肯德基</value>
        [DataMember(Name = "main_shop_name", EmitDefaultValue = false)]
        public string MainShopName { get; set; }

        /// <summary>
        /// 是否有无烟区，T表示有无烟区，F表示没有无烟区，不传在客户端不展示
        /// </summary>
        /// <value>是否有无烟区，T表示有无烟区，F表示没有无烟区，不传在客户端不展示</value>
        [DataMember(Name = "no_smoking", EmitDefaultValue = false)]
        public string NoSmoking { get; set; }

        /// <summary>
        /// 门店店长电话号码；用于接收门店状态变更通知，收款成功通知等通知消息，不在客户端展示；多个以引文逗号分隔
        /// </summary>
        /// <value>门店店长电话号码；用于接收门店状态变更通知，收款成功通知等通知消息，不在客户端展示；多个以引文逗号分隔</value>
        [DataMember(Name = "notify_mobile", EmitDefaultValue = false)]
        public string NotifyMobile { get; set; }

        /// <summary>
        /// 在其他平台的开店图片，支持多张，逗号分隔
        /// </summary>
        /// <value>在其他平台的开店图片，支持多张，逗号分隔</value>
        [DataMember(Name = "online_image", EmitDefaultValue = false)]
        public string OnlineImage { get; set; }

        /// <summary>
        /// 通知发送url;当商户的门店审核状态发生变化时，会向该地址推送消息
        /// </summary>
        /// <value>通知发送url;当商户的门店审核状态发生变化时，会向该地址推送消息</value>
        [DataMember(Name = "operate_notify_url", EmitDefaultValue = false)]
        public string OperateNotifyUrl { get; set; }

        /// <summary>
        /// 其它资质证明图片集；支持多张，逗号分隔
        /// </summary>
        /// <value>其它资质证明图片集；支持多张，逗号分隔</value>
        [DataMember(Name = "other_auth_images", EmitDefaultValue = false)]
        public string OtherAuthImages { get; set; }

        /// <summary>
        /// 门店是否支持停车，T表示支持，F表示不支持，不传在客户端不作展示
        /// </summary>
        /// <value>门店是否支持停车，T表示支持，F表示不支持，不传在客户端不作展示</value>
        [DataMember(Name = "parking", EmitDefaultValue = false)]
        public string Parking { get; set; }

        /// <summary>
        /// 门店的签约ID
        /// </summary>
        /// <value>门店的签约ID</value>
        [DataMember(Name = "partner_id", EmitDefaultValue = false)]
        public string PartnerId { get; set; }

        /// <summary>
        /// 默认付款类型；如：付款码、扫码付、声波支付、在线买单、其它
        /// </summary>
        /// <value>默认付款类型；如：付款码、扫码付、声波支付、在线买单、其它</value>
        [DataMember(Name = "pay_type", EmitDefaultValue = false)]
        public string PayType { get; set; }

        /// <summary>
        /// 门店收款账户，门店收款账户只能被查询，不能通过接口修改。如果为空，则表示门店收款账户为商户签约账户
        /// </summary>
        /// <value>门店收款账户，门店收款账户只能被查询，不能通过接口修改。如果为空，则表示门店收款账户为商户签约账户</value>
        [DataMember(Name = "payment_account", EmitDefaultValue = false)]
        public string PaymentAccount { get; set; }

        /// <summary>
        /// 图片集，是map转化成的json串，key是图片id,value是图片url
        /// </summary>
        /// <value>图片集，是map转化成的json串，key是图片id,value是图片url</value>
        [DataMember(Name = "pic_coll", EmitDefaultValue = false)]
        public string PicColl { get; set; }

        /// <summary>
        /// 经过加工后的门店收款二维码
        /// </summary>
        /// <value>经过加工后的门店收款二维码</value>
        [DataMember(Name = "processed_qr_code", EmitDefaultValue = false)]
        public string ProcessedQrCode { get; set; }

        /// <summary>
        /// 门店运营归属人uid
        /// </summary>
        /// <value>门店运营归属人uid</value>
        [DataMember(Name = "provider_xiaoer_uid", EmitDefaultValue = false)]
        public string ProviderXiaoerUid { get; set; }

        /// <summary>
        /// 省份编码，国标码，详见国家统计局数据
        /// </summary>
        /// <value>省份编码，国标码，详见国家统计局数据</value>
        [DataMember(Name = "province_code", EmitDefaultValue = false)]
        public string ProvinceCode { get; set; }

        /// <summary>
        /// 门店收款二维码裸码
        /// </summary>
        /// <value>门店收款二维码裸码</value>
        [DataMember(Name = "qr_code", EmitDefaultValue = false)]
        public string QrCode { get; set; }

        /// <summary>
        /// 门店标签；JSON格式。包括：keyMerchant-是否重点商户（T/F）；isHallMeal-堂食（T/F）；注：若标签 key 不存在，则门店无对应的标签
        /// </summary>
        /// <value>门店标签；JSON格式。包括：keyMerchant-是否重点商户（T/F）；isHallMeal-堂食（T/F）；注：若标签 key 不存在，则门店无对应的标签</value>
        [DataMember(Name = "shop_tags", EmitDefaultValue = false)]
        public string ShopTags { get; set; }

        /// <summary>
        /// 外部门店编号；最长54位字符，该编号将作为收单接口的入参， 请开发者自行确保其唯一性
        /// </summary>
        /// <value>外部门店编号；最长54位字符，该编号将作为收单接口的入参， 请开发者自行确保其唯一性</value>
        [DataMember(Name = "store_id", EmitDefaultValue = false)]
        public string StoreId { get; set; }

        /// <summary>
        /// 门店其他的服务，门店与用户线下兑现
        /// </summary>
        /// <value>门店其他的服务，门店与用户线下兑现</value>
        [DataMember(Name = "value_added", EmitDefaultValue = false)]
        public string ValueAdded { get; set; }

        /// <summary>
        /// 门店是否支持WIFI，T表示支持，F表示不支持，不传在客户端不作展示
        /// </summary>
        /// <value>门店是否支持WIFI，T表示支持，F表示不支持，不传在客户端不作展示</value>
        [DataMember(Name = "wifi", EmitDefaultValue = false)]
        public string Wifi { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class AlipayOfflineMarketShopQuerydetailResponseModel {\n");
            sb.Append("  Address: ").Append(Address).Append("\n");
            sb.Append("  AuditDesc: ").Append(AuditDesc).Append("\n");
            sb.Append("  AuditImages: ").Append(AuditImages).Append("\n");
            sb.Append("  AuditStatus: ").Append(AuditStatus).Append("\n");
            sb.Append("  AuthLetter: ").Append(AuthLetter).Append("\n");
            sb.Append("  AvgPrice: ").Append(AvgPrice).Append("\n");
            sb.Append("  Box: ").Append(Box).Append("\n");
            sb.Append("  BranchShopName: ").Append(BranchShopName).Append("\n");
            sb.Append("  BrandLogo: ").Append(BrandLogo).Append("\n");
            sb.Append("  BrandName: ").Append(BrandName).Append("\n");
            sb.Append("  BusinessCertificate: ").Append(BusinessCertificate).Append("\n");
            sb.Append("  BusinessCertificateExpires: ").Append(BusinessCertificateExpires).Append("\n");
            sb.Append("  BusinessTime: ").Append(BusinessTime).Append("\n");
            sb.Append("  CategoryId: ").Append(CategoryId).Append("\n");
            sb.Append("  CityCode: ").Append(CityCode).Append("\n");
            sb.Append("  ContactNumber: ").Append(ContactNumber).Append("\n");
            sb.Append("  CreateChannel: ").Append(CreateChannel).Append("\n");
            sb.Append("  DistrictCode: ").Append(DistrictCode).Append("\n");
            sb.Append("  GmtShopCreate: ").Append(GmtShopCreate).Append("\n");
            sb.Append("  GmtShopModified: ").Append(GmtShopModified).Append("\n");
            sb.Append("  ImplementId: ").Append(ImplementId).Append("\n");
            sb.Append("  IsOnline: ").Append(IsOnline).Append("\n");
            sb.Append("  IsOperatingOnline: ").Append(IsOperatingOnline).Append("\n");
            sb.Append("  IsShow: ").Append(IsShow).Append("\n");
            sb.Append("  IsvUid: ").Append(IsvUid).Append("\n");
            sb.Append("  Latitude: ").Append(Latitude).Append("\n");
            sb.Append("  Licence: ").Append(Licence).Append("\n");
            sb.Append("  LicenceCode: ").Append(LicenceCode).Append("\n");
            sb.Append("  LicenceExpires: ").Append(LicenceExpires).Append("\n");
            sb.Append("  LicenceName: ").Append(LicenceName).Append("\n");
            sb.Append("  Longitude: ").Append(Longitude).Append("\n");
            sb.Append("  MainImage: ").Append(MainImage).Append("\n");
            sb.Append("  MainShopName: ").Append(MainShopName).Append("\n");
            sb.Append("  NoSmoking: ").Append(NoSmoking).Append("\n");
            sb.Append("  NotifyMobile: ").Append(NotifyMobile).Append("\n");
            sb.Append("  OnlineImage: ").Append(OnlineImage).Append("\n");
            sb.Append("  OperateNotifyUrl: ").Append(OperateNotifyUrl).Append("\n");
            sb.Append("  OtherAuthImages: ").Append(OtherAuthImages).Append("\n");
            sb.Append("  Parking: ").Append(Parking).Append("\n");
            sb.Append("  PartnerId: ").Append(PartnerId).Append("\n");
            sb.Append("  PayType: ").Append(PayType).Append("\n");
            sb.Append("  PaymentAccount: ").Append(PaymentAccount).Append("\n");
            sb.Append("  PicColl: ").Append(PicColl).Append("\n");
            sb.Append("  ProcessedQrCode: ").Append(ProcessedQrCode).Append("\n");
            sb.Append("  ProviderXiaoerUid: ").Append(ProviderXiaoerUid).Append("\n");
            sb.Append("  ProvinceCode: ").Append(ProvinceCode).Append("\n");
            sb.Append("  QrCode: ").Append(QrCode).Append("\n");
            sb.Append("  ShopTags: ").Append(ShopTags).Append("\n");
            sb.Append("  StoreId: ").Append(StoreId).Append("\n");
            sb.Append("  ValueAdded: ").Append(ValueAdded).Append("\n");
            sb.Append("  Wifi: ").Append(Wifi).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as AlipayOfflineMarketShopQuerydetailResponseModel);
        }

        /// <summary>
        /// Returns true if AlipayOfflineMarketShopQuerydetailResponseModel instances are equal
        /// </summary>
        /// <param name="input">Instance of AlipayOfflineMarketShopQuerydetailResponseModel to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AlipayOfflineMarketShopQuerydetailResponseModel input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.Address == input.Address ||
                    (this.Address != null &&
                    this.Address.Equals(input.Address))
                ) && 
                (
                    this.AuditDesc == input.AuditDesc ||
                    (this.AuditDesc != null &&
                    this.AuditDesc.Equals(input.AuditDesc))
                ) && 
                (
                    this.AuditImages == input.AuditImages ||
                    (this.AuditImages != null &&
                    this.AuditImages.Equals(input.AuditImages))
                ) && 
                (
                    this.AuditStatus == input.AuditStatus ||
                    (this.AuditStatus != null &&
                    this.AuditStatus.Equals(input.AuditStatus))
                ) && 
                (
                    this.AuthLetter == input.AuthLetter ||
                    (this.AuthLetter != null &&
                    this.AuthLetter.Equals(input.AuthLetter))
                ) && 
                (
                    this.AvgPrice == input.AvgPrice ||
                    (this.AvgPrice != null &&
                    this.AvgPrice.Equals(input.AvgPrice))
                ) && 
                (
                    this.Box == input.Box ||
                    (this.Box != null &&
                    this.Box.Equals(input.Box))
                ) && 
                (
                    this.BranchShopName == input.BranchShopName ||
                    (this.BranchShopName != null &&
                    this.BranchShopName.Equals(input.BranchShopName))
                ) && 
                (
                    this.BrandLogo == input.BrandLogo ||
                    (this.BrandLogo != null &&
                    this.BrandLogo.Equals(input.BrandLogo))
                ) && 
                (
                    this.BrandName == input.BrandName ||
                    (this.BrandName != null &&
                    this.BrandName.Equals(input.BrandName))
                ) && 
                (
                    this.BusinessCertificate == input.BusinessCertificate ||
                    (this.BusinessCertificate != null &&
                    this.BusinessCertificate.Equals(input.BusinessCertificate))
                ) && 
                (
                    this.BusinessCertificateExpires == input.BusinessCertificateExpires ||
                    (this.BusinessCertificateExpires != null &&
                    this.BusinessCertificateExpires.Equals(input.BusinessCertificateExpires))
                ) && 
                (
                    this.BusinessTime == input.BusinessTime ||
                    (this.BusinessTime != null &&
                    this.BusinessTime.Equals(input.BusinessTime))
                ) && 
                (
                    this.CategoryId == input.CategoryId ||
                    (this.CategoryId != null &&
                    this.CategoryId.Equals(input.CategoryId))
                ) && 
                (
                    this.CityCode == input.CityCode ||
                    (this.CityCode != null &&
                    this.CityCode.Equals(input.CityCode))
                ) && 
                (
                    this.ContactNumber == input.ContactNumber ||
                    (this.ContactNumber != null &&
                    this.ContactNumber.Equals(input.ContactNumber))
                ) && 
                (
                    this.CreateChannel == input.CreateChannel ||
                    (this.CreateChannel != null &&
                    this.CreateChannel.Equals(input.CreateChannel))
                ) && 
                (
                    this.DistrictCode == input.DistrictCode ||
                    (this.DistrictCode != null &&
                    this.DistrictCode.Equals(input.DistrictCode))
                ) && 
                (
                    this.GmtShopCreate == input.GmtShopCreate ||
                    (this.GmtShopCreate != null &&
                    this.GmtShopCreate.Equals(input.GmtShopCreate))
                ) && 
                (
                    this.GmtShopModified == input.GmtShopModified ||
                    (this.GmtShopModified != null &&
                    this.GmtShopModified.Equals(input.GmtShopModified))
                ) && 
                (
                    this.ImplementId == input.ImplementId ||
                    (this.ImplementId != null &&
                    this.ImplementId.Equals(input.ImplementId))
                ) && 
                (
                    this.IsOnline == input.IsOnline ||
                    (this.IsOnline != null &&
                    this.IsOnline.Equals(input.IsOnline))
                ) && 
                (
                    this.IsOperatingOnline == input.IsOperatingOnline ||
                    (this.IsOperatingOnline != null &&
                    this.IsOperatingOnline.Equals(input.IsOperatingOnline))
                ) && 
                (
                    this.IsShow == input.IsShow ||
                    (this.IsShow != null &&
                    this.IsShow.Equals(input.IsShow))
                ) && 
                (
                    this.IsvUid == input.IsvUid ||
                    (this.IsvUid != null &&
                    this.IsvUid.Equals(input.IsvUid))
                ) && 
                (
                    this.Latitude == input.Latitude ||
                    (this.Latitude != null &&
                    this.Latitude.Equals(input.Latitude))
                ) && 
                (
                    this.Licence == input.Licence ||
                    (this.Licence != null &&
                    this.Licence.Equals(input.Licence))
                ) && 
                (
                    this.LicenceCode == input.LicenceCode ||
                    (this.LicenceCode != null &&
                    this.LicenceCode.Equals(input.LicenceCode))
                ) && 
                (
                    this.LicenceExpires == input.LicenceExpires ||
                    (this.LicenceExpires != null &&
                    this.LicenceExpires.Equals(input.LicenceExpires))
                ) && 
                (
                    this.LicenceName == input.LicenceName ||
                    (this.LicenceName != null &&
                    this.LicenceName.Equals(input.LicenceName))
                ) && 
                (
                    this.Longitude == input.Longitude ||
                    (this.Longitude != null &&
                    this.Longitude.Equals(input.Longitude))
                ) && 
                (
                    this.MainImage == input.MainImage ||
                    (this.MainImage != null &&
                    this.MainImage.Equals(input.MainImage))
                ) && 
                (
                    this.MainShopName == input.MainShopName ||
                    (this.MainShopName != null &&
                    this.MainShopName.Equals(input.MainShopName))
                ) && 
                (
                    this.NoSmoking == input.NoSmoking ||
                    (this.NoSmoking != null &&
                    this.NoSmoking.Equals(input.NoSmoking))
                ) && 
                (
                    this.NotifyMobile == input.NotifyMobile ||
                    (this.NotifyMobile != null &&
                    this.NotifyMobile.Equals(input.NotifyMobile))
                ) && 
                (
                    this.OnlineImage == input.OnlineImage ||
                    (this.OnlineImage != null &&
                    this.OnlineImage.Equals(input.OnlineImage))
                ) && 
                (
                    this.OperateNotifyUrl == input.OperateNotifyUrl ||
                    (this.OperateNotifyUrl != null &&
                    this.OperateNotifyUrl.Equals(input.OperateNotifyUrl))
                ) && 
                (
                    this.OtherAuthImages == input.OtherAuthImages ||
                    (this.OtherAuthImages != null &&
                    this.OtherAuthImages.Equals(input.OtherAuthImages))
                ) && 
                (
                    this.Parking == input.Parking ||
                    (this.Parking != null &&
                    this.Parking.Equals(input.Parking))
                ) && 
                (
                    this.PartnerId == input.PartnerId ||
                    (this.PartnerId != null &&
                    this.PartnerId.Equals(input.PartnerId))
                ) && 
                (
                    this.PayType == input.PayType ||
                    (this.PayType != null &&
                    this.PayType.Equals(input.PayType))
                ) && 
                (
                    this.PaymentAccount == input.PaymentAccount ||
                    (this.PaymentAccount != null &&
                    this.PaymentAccount.Equals(input.PaymentAccount))
                ) && 
                (
                    this.PicColl == input.PicColl ||
                    (this.PicColl != null &&
                    this.PicColl.Equals(input.PicColl))
                ) && 
                (
                    this.ProcessedQrCode == input.ProcessedQrCode ||
                    (this.ProcessedQrCode != null &&
                    this.ProcessedQrCode.Equals(input.ProcessedQrCode))
                ) && 
                (
                    this.ProviderXiaoerUid == input.ProviderXiaoerUid ||
                    (this.ProviderXiaoerUid != null &&
                    this.ProviderXiaoerUid.Equals(input.ProviderXiaoerUid))
                ) && 
                (
                    this.ProvinceCode == input.ProvinceCode ||
                    (this.ProvinceCode != null &&
                    this.ProvinceCode.Equals(input.ProvinceCode))
                ) && 
                (
                    this.QrCode == input.QrCode ||
                    (this.QrCode != null &&
                    this.QrCode.Equals(input.QrCode))
                ) && 
                (
                    this.ShopTags == input.ShopTags ||
                    (this.ShopTags != null &&
                    this.ShopTags.Equals(input.ShopTags))
                ) && 
                (
                    this.StoreId == input.StoreId ||
                    (this.StoreId != null &&
                    this.StoreId.Equals(input.StoreId))
                ) && 
                (
                    this.ValueAdded == input.ValueAdded ||
                    (this.ValueAdded != null &&
                    this.ValueAdded.Equals(input.ValueAdded))
                ) && 
                (
                    this.Wifi == input.Wifi ||
                    (this.Wifi != null &&
                    this.Wifi.Equals(input.Wifi))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Address != null)
                {
                    hashCode = (hashCode * 59) + this.Address.GetHashCode();
                }
                if (this.AuditDesc != null)
                {
                    hashCode = (hashCode * 59) + this.AuditDesc.GetHashCode();
                }
                if (this.AuditImages != null)
                {
                    hashCode = (hashCode * 59) + this.AuditImages.GetHashCode();
                }
                if (this.AuditStatus != null)
                {
                    hashCode = (hashCode * 59) + this.AuditStatus.GetHashCode();
                }
                if (this.AuthLetter != null)
                {
                    hashCode = (hashCode * 59) + this.AuthLetter.GetHashCode();
                }
                if (this.AvgPrice != null)
                {
                    hashCode = (hashCode * 59) + this.AvgPrice.GetHashCode();
                }
                if (this.Box != null)
                {
                    hashCode = (hashCode * 59) + this.Box.GetHashCode();
                }
                if (this.BranchShopName != null)
                {
                    hashCode = (hashCode * 59) + this.BranchShopName.GetHashCode();
                }
                if (this.BrandLogo != null)
                {
                    hashCode = (hashCode * 59) + this.BrandLogo.GetHashCode();
                }
                if (this.BrandName != null)
                {
                    hashCode = (hashCode * 59) + this.BrandName.GetHashCode();
                }
                if (this.BusinessCertificate != null)
                {
                    hashCode = (hashCode * 59) + this.BusinessCertificate.GetHashCode();
                }
                if (this.BusinessCertificateExpires != null)
                {
                    hashCode = (hashCode * 59) + this.BusinessCertificateExpires.GetHashCode();
                }
                if (this.BusinessTime != null)
                {
                    hashCode = (hashCode * 59) + this.BusinessTime.GetHashCode();
                }
                if (this.CategoryId != null)
                {
                    hashCode = (hashCode * 59) + this.CategoryId.GetHashCode();
                }
                if (this.CityCode != null)
                {
                    hashCode = (hashCode * 59) + this.CityCode.GetHashCode();
                }
                if (this.ContactNumber != null)
                {
                    hashCode = (hashCode * 59) + this.ContactNumber.GetHashCode();
                }
                if (this.CreateChannel != null)
                {
                    hashCode = (hashCode * 59) + this.CreateChannel.GetHashCode();
                }
                if (this.DistrictCode != null)
                {
                    hashCode = (hashCode * 59) + this.DistrictCode.GetHashCode();
                }
                if (this.GmtShopCreate != null)
                {
                    hashCode = (hashCode * 59) + this.GmtShopCreate.GetHashCode();
                }
                if (this.GmtShopModified != null)
                {
                    hashCode = (hashCode * 59) + this.GmtShopModified.GetHashCode();
                }
                if (this.ImplementId != null)
                {
                    hashCode = (hashCode * 59) + this.ImplementId.GetHashCode();
                }
                if (this.IsOnline != null)
                {
                    hashCode = (hashCode * 59) + this.IsOnline.GetHashCode();
                }
                if (this.IsOperatingOnline != null)
                {
                    hashCode = (hashCode * 59) + this.IsOperatingOnline.GetHashCode();
                }
                if (this.IsShow != null)
                {
                    hashCode = (hashCode * 59) + this.IsShow.GetHashCode();
                }
                if (this.IsvUid != null)
                {
                    hashCode = (hashCode * 59) + this.IsvUid.GetHashCode();
                }
                if (this.Latitude != null)
                {
                    hashCode = (hashCode * 59) + this.Latitude.GetHashCode();
                }
                if (this.Licence != null)
                {
                    hashCode = (hashCode * 59) + this.Licence.GetHashCode();
                }
                if (this.LicenceCode != null)
                {
                    hashCode = (hashCode * 59) + this.LicenceCode.GetHashCode();
                }
                if (this.LicenceExpires != null)
                {
                    hashCode = (hashCode * 59) + this.LicenceExpires.GetHashCode();
                }
                if (this.LicenceName != null)
                {
                    hashCode = (hashCode * 59) + this.LicenceName.GetHashCode();
                }
                if (this.Longitude != null)
                {
                    hashCode = (hashCode * 59) + this.Longitude.GetHashCode();
                }
                if (this.MainImage != null)
                {
                    hashCode = (hashCode * 59) + this.MainImage.GetHashCode();
                }
                if (this.MainShopName != null)
                {
                    hashCode = (hashCode * 59) + this.MainShopName.GetHashCode();
                }
                if (this.NoSmoking != null)
                {
                    hashCode = (hashCode * 59) + this.NoSmoking.GetHashCode();
                }
                if (this.NotifyMobile != null)
                {
                    hashCode = (hashCode * 59) + this.NotifyMobile.GetHashCode();
                }
                if (this.OnlineImage != null)
                {
                    hashCode = (hashCode * 59) + this.OnlineImage.GetHashCode();
                }
                if (this.OperateNotifyUrl != null)
                {
                    hashCode = (hashCode * 59) + this.OperateNotifyUrl.GetHashCode();
                }
                if (this.OtherAuthImages != null)
                {
                    hashCode = (hashCode * 59) + this.OtherAuthImages.GetHashCode();
                }
                if (this.Parking != null)
                {
                    hashCode = (hashCode * 59) + this.Parking.GetHashCode();
                }
                if (this.PartnerId != null)
                {
                    hashCode = (hashCode * 59) + this.PartnerId.GetHashCode();
                }
                if (this.PayType != null)
                {
                    hashCode = (hashCode * 59) + this.PayType.GetHashCode();
                }
                if (this.PaymentAccount != null)
                {
                    hashCode = (hashCode * 59) + this.PaymentAccount.GetHashCode();
                }
                if (this.PicColl != null)
                {
                    hashCode = (hashCode * 59) + this.PicColl.GetHashCode();
                }
                if (this.ProcessedQrCode != null)
                {
                    hashCode = (hashCode * 59) + this.ProcessedQrCode.GetHashCode();
                }
                if (this.ProviderXiaoerUid != null)
                {
                    hashCode = (hashCode * 59) + this.ProviderXiaoerUid.GetHashCode();
                }
                if (this.ProvinceCode != null)
                {
                    hashCode = (hashCode * 59) + this.ProvinceCode.GetHashCode();
                }
                if (this.QrCode != null)
                {
                    hashCode = (hashCode * 59) + this.QrCode.GetHashCode();
                }
                if (this.ShopTags != null)
                {
                    hashCode = (hashCode * 59) + this.ShopTags.GetHashCode();
                }
                if (this.StoreId != null)
                {
                    hashCode = (hashCode * 59) + this.StoreId.GetHashCode();
                }
                if (this.ValueAdded != null)
                {
                    hashCode = (hashCode * 59) + this.ValueAdded.GetHashCode();
                }
                if (this.Wifi != null)
                {
                    hashCode = (hashCode * 59) + this.Wifi.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
